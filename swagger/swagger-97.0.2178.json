{
  "openapi": "3.0.1",
  "info": {
    "title": "ProjectManager API",
    "description": "",
    "contact": {
      "name": "ProjectManager.com, Inc",
      "url": "https://www.projectmanager.com/contact",
      "email": "support@projectmanager.com"
    },
    "version": "97.0.2178"
  },
  "paths": {
    "/api/data/api-keys": {
      "post": {
        "tags": [
          "ApiKey"
        ],
        "summary": "Create Api Key",
        "description": "Creates a new API key for the current user with the specified options.\n\nAn API key is a credential that you can use to make REST v4 API calls for ProjectManager.com.  When you create a new API key, that API key is only visible in the response JSON for the `CreateApiKey` method.  If you do not preserve this information, it cannot be recreated.\n\nSome best practices for working with API keys: * An API key is valid for a two year period after it is created.  We encourage you to rotate your API keys regularly according to your company's security policies. * You should create separate API keys for each system that works with your API.  If that API key is exposed or if that program needs to be shut down, you can revoke that one key and reissue it. * An API key is tied to the workspace that created it. A single API key can only interact with one workspace. \r\n\r\n### Data Definition\r\n\r\nSee [ApiKeyDto](https://developer.projectmanager.com/reference/apikeydto) for the complete data definition.",
        "requestBody": {
          "description": "Options for the API key to create",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiKeyCreateDto"
                  }
                ],
                "description": "Represents a new api access key entity"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiKeyCreateDto"
                  }
                ],
                "description": "Represents a new api access key entity"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiKeyCreateDto"
                  }
                ],
                "description": "Represents a new api access key entity"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiKeyCreateDto"
                  }
                ],
                "description": "Represents a new api access key entity"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiKeyCreateDto"
                  }
                ],
                "description": "Represents a new api access key entity"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiKeyCreateDto"
                  }
                ],
                "description": "Represents a new api access key entity"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiKeyCreateDto"
                  }
                ],
                "description": "Represents a new api access key entity"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiKeyCreateDto"
                  }
                ],
                "description": "Represents a new api access key entity"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiKeyCreateDto"
                  }
                ],
                "description": "Represents a new api access key entity"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiKeyCreateDto"
                  }
                ],
                "description": "Represents a new api access key entity"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiKeyCreateDto"
                  }
                ],
                "description": "Represents a new api access key entity"
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiKeyCreateDto"
                  }
                ],
                "description": "Represents a new api access key entity"
              }
            },
            "application/xml": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiKeyCreateDto"
                  }
                ],
                "description": "Represents a new api access key entity"
              }
            },
            "text/plain": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiKeyCreateDto"
                  }
                ],
                "description": "Represents a new api access key entity"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiKeyCreateDto"
                  }
                ],
                "description": "Represents a new api access key entity"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ApiKeyCreateDto"
                  }
                ],
                "description": "Represents a new api access key entity"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyDtoAstroResult"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "ApiKey"
        ],
        "summary": "List Api Keys",
        "description": "Returns a list of all API keys within the current workspace.\n\nAn API key is a credential that you can use to make REST v4 API calls for ProjectManager.com.  When you create a new API key, that API key is only visible in the response JSON for the `CreateApiKey` method.  If you do not preserve this information, it cannot be recreated.\n\nSome best practices for working with API keys: * An API key is valid for a two year period after it is created.  We encourage you to rotate your API keys regularly according to your company's security policies. * You should create separate API keys for each system that works with your API.  If that API key is exposed or if that program needs to be shut down, you can revoke that one key and reissue it. * An API key is tied to the workspace that created it. A single API key can only interact with one workspace. \r\n\r\n### Data Definition\r\n\r\nSee [ApiKeyDto](https://developer.projectmanager.com/reference/apikeydto) for the complete data definition.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyDtoListAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyDtoListAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyDtoListAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyDtoListAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyDtoListAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyDtoListAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/api-keys/revoke-all": {
      "delete": {
        "tags": [
          "ApiKey"
        ],
        "summary": "Revoke All Api Keys",
        "description": "This API call revokes all existing API keys in given workspace.  No existing keys will continue to work after this call completes.  We strongly encourage you to revoke a single API key at a time; this method should only be used if you need to rapidly halt access to your product for automated systems.\n\nAn API key is a credential that you can use to make REST v4 API calls for ProjectManager.com.  When you create a new API key, that API key is only visible in the response JSON for the `CreateApiKey` method.  If you do not preserve this information, it cannot be recreated.\n\nSome best practices for working with API keys: * An API key is valid for a two year period after it is created.  We encourage you to rotate your API keys regularly according to your company's security policies. * You should create separate API keys for each system that works with your API.  If that API key is exposed or if that program needs to be shut down, you can revoke that one key and reissue it. * An API key is tied to the workspace that created it. A single API key can only interact with one workspace. \r\n\r\n### Data Definition\r\n\r\nSee [](https://developer.projectmanager.com/reference/) for the complete data definition.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/api-keys/{id}/revoke": {
      "delete": {
        "tags": [
          "ApiKey"
        ],
        "summary": "Revoke API Key",
        "description": "Revokes a single API key in the current workspace.\n\nAn API key is a credential that you can use to make REST v4 API calls for ProjectManager.com.  When you create a new API key, that API key is only visible in the response JSON for the `CreateApiKey` method.  If you do not preserve this information, it cannot be recreated.\n\nSome best practices for working with API keys: * An API key is valid for a two year period after it is created.  We encourage you to rotate your API keys regularly according to your company's security policies. * You should create separate API keys for each system that works with your API.  If that API key is exposed or if that program needs to be shut down, you can revoke that one key and reissue it. * An API key is tied to the workspace that created it. A single API key can only interact with one workspace. \r\n\r\n### Data Definition\r\n\r\nSee [](https://developer.projectmanager.com/reference/) for the complete data definition.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the API key to revoke",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/changesets/{changeSetId}": {
      "get": {
        "tags": [
          "Changeset"
        ],
        "summary": "Retrieve Changeset",
        "description": "Retrieve a Changeset by its unique ID.\n\nA Changeset is an individual edit that has been made to a project.  Since multiple users can edit a project at the same time, individual Changesets are applied in a sequential fashion. If a Changeset causes a conflict or cannot be applied, it will be rejected.  You can examine a Changeset to determine its conflict resolution status.\n\nWhen checking the status of a Changeset, you can call either RetrieveChangeset or RetrieveCompletedChangeset.  Using RetrieveChangeset will give you the immediate status of the Changeset.  Using RetrieveCompletedChangeset will delay the response until the Changeset has finished processing. \r\n\r\n### Data Definition\r\n\r\nSee [ChangesetGetResponseDto](https://developer.projectmanager.com/reference/changesetgetresponsedto) for the complete data definition.",
        "parameters": [
          {
            "name": "changeSetId",
            "in": "path",
            "description": "The unique ID number of the Changeset to retrieve",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangesetGetResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangesetGetResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ChangesetGetResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangesetGetResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangesetGetResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ChangesetGetResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangesetGetResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangesetGetResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ChangesetGetResponseDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangesetGetResponseDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangesetGetResponseDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangesetGetResponseDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ChangesetGetResponseDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChangesetGetResponseDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ChangesetGetResponseDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangesetGetResponseDtoAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/changesets/{changeSetId}/poll": {
      "get": {
        "tags": [
          "Changeset"
        ],
        "summary": "Retrieve Completed Changeset",
        "description": "Retrieve a Changeset by its unique ID. This endpoint waits for the Changeset to complete its processing prior to returning a result.\n\nA Changeset is an individual edit that has been made to a project.  Since multiple users can edit a project at the same time, individual Changesets are applied in a sequential fashion. If a Changeset causes a conflict or cannot be applied, it will be rejected.  You can examine a Changeset to determine its conflict resolution status.\n\nWhen checking the status of a Changeset, you can call either RetrieveChangeset or RetrieveCompletedChangeset.  Using RetrieveChangeset will give you the immediate status of the Changeset.  Using RetrieveCompletedChangeset will delay the response until the Changeset has finished processing.\n\nAlthough most Changesets complete instantly, some Changesets may need additional time to complete.  If the Changeset cannot be processed within a reasonable length of time, this API call may fail.  If this API fails, it will return a status error indicating the Changeset is still being processed. \r\n\r\n### Data Definition\r\n\r\nSee [ChangesetGetResponseDto](https://developer.projectmanager.com/reference/changesetgetresponsedto) for the complete data definition.",
        "parameters": [
          {
            "name": "changeSetId",
            "in": "path",
            "description": "The unique ID number of the Changeset to retrieve",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangesetGetResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangesetGetResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ChangesetGetResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangesetGetResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangesetGetResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ChangesetGetResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangesetGetResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangesetGetResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ChangesetGetResponseDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangesetGetResponseDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangesetGetResponseDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangesetGetResponseDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ChangesetGetResponseDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChangesetGetResponseDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ChangesetGetResponseDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangesetGetResponseDtoAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/dashboards/settings/{type}": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Retrieve Dashboard User Settings",
        "description": "Returns user dashboard settings \r\n\r\n### Data Definition\r\n\r\nSee [DashboardSettingDto](https://developer.projectmanager.com/reference/dashboardsettingdto) for the complete data definition.",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "The dashboard type that is not custom",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/DashboardType"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardSettingDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardSettingDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardSettingDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardSettingDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardSettingDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardSettingDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardSettingDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardSettingDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardSettingDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardSettingDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardSettingDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardSettingDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardSettingDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardSettingDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardSettingDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardSettingDtoAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/dashboards/settings": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Create or Update User Dashboard Settings",
        "description": "Create or Update User Dashboard Settings \r\n\r\n### Data Definition\r\n\r\nSee [DashboardSettingDto](https://developer.projectmanager.com/reference/dashboardsettingdto) for the complete data definition.",
        "requestBody": {
          "description": "User dashboard settings object",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DashboardSettingCreateDto"
                  }
                ],
                "description": "User dashboard create or update dto"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DashboardSettingCreateDto"
                  }
                ],
                "description": "User dashboard create or update dto"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DashboardSettingCreateDto"
                  }
                ],
                "description": "User dashboard create or update dto"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DashboardSettingCreateDto"
                  }
                ],
                "description": "User dashboard create or update dto"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DashboardSettingCreateDto"
                  }
                ],
                "description": "User dashboard create or update dto"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DashboardSettingCreateDto"
                  }
                ],
                "description": "User dashboard create or update dto"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DashboardSettingCreateDto"
                  }
                ],
                "description": "User dashboard create or update dto"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DashboardSettingCreateDto"
                  }
                ],
                "description": "User dashboard create or update dto"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DashboardSettingCreateDto"
                  }
                ],
                "description": "User dashboard create or update dto"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DashboardSettingCreateDto"
                  }
                ],
                "description": "User dashboard create or update dto"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DashboardSettingCreateDto"
                  }
                ],
                "description": "User dashboard create or update dto"
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DashboardSettingCreateDto"
                  }
                ],
                "description": "User dashboard create or update dto"
              }
            },
            "application/xml": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DashboardSettingCreateDto"
                  }
                ],
                "description": "User dashboard create or update dto"
              }
            },
            "text/plain": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DashboardSettingCreateDto"
                  }
                ],
                "description": "User dashboard create or update dto"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DashboardSettingCreateDto"
                  }
                ],
                "description": "User dashboard create or update dto"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DashboardSettingCreateDto"
                  }
                ],
                "description": "User dashboard create or update dto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardSettingDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardSettingDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardSettingDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardSettingDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardSettingDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardSettingDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardSettingDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardSettingDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardSettingDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardSettingDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardSettingDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardSettingDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardSettingDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardSettingDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardSettingDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardSettingDtoAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/tasks/{taskId}/discussions": {
      "get": {
        "tags": [
          "Discussion"
        ],
        "summary": "Retrieve Task Comments",
        "description": "Retrieve all comments written about a task \r\n\r\n### Data Definition\r\n\r\nSee [DiscussionDto](https://developer.projectmanager.com/reference/discussiondto) for the complete data definition.",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "The unique ID number of the task to retrieve comments",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/DiscussionDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DiscussionDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/DiscussionDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/DiscussionDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DiscussionDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/DiscussionDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/DiscussionDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DiscussionDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/DiscussionDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/DiscussionDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DiscussionDtoListAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscussionDtoListAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DiscussionDtoListAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DiscussionDtoListAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/DiscussionDtoListAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscussionDtoListAstroResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Discussion"
        ],
        "summary": "Create Task Comments",
        "description": "Adds a Markdown-formatted comment to a task.\n\nTasks can have discussions attached to them.  These discussions can include text with simple formatting.  Discussion comments are formatted using [Markdown](https://www.markdownguide.org/) and users should be aware that HTML embedding is not permitted due to the risk of cross-site attacks and other embedding challenges. \r\n\r\n### Data Definition\r\n\r\nSee [DiscussionCreateResponseDto](https://developer.projectmanager.com/reference/discussioncreateresponsedto) for the complete data definition.",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "The unique ID number of the task being commented upon",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The Markdown-formatted text of the comment",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DiscussionCreateDto"
                  }
                ],
                "description": "Tasks can have discussions attached to them.  These discussions can include text with simple\r\nformatting.  Discussion comments are formatted using [Markdown](https://www.markdownguide.org/)\r\nand users should be aware that HTML embedding is not permitted due to the risk of cross-site\r\nattacks and other embedding challenges."
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DiscussionCreateDto"
                  }
                ],
                "description": "Tasks can have discussions attached to them.  These discussions can include text with simple\r\nformatting.  Discussion comments are formatted using [Markdown](https://www.markdownguide.org/)\r\nand users should be aware that HTML embedding is not permitted due to the risk of cross-site\r\nattacks and other embedding challenges."
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DiscussionCreateDto"
                  }
                ],
                "description": "Tasks can have discussions attached to them.  These discussions can include text with simple\r\nformatting.  Discussion comments are formatted using [Markdown](https://www.markdownguide.org/)\r\nand users should be aware that HTML embedding is not permitted due to the risk of cross-site\r\nattacks and other embedding challenges."
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DiscussionCreateDto"
                  }
                ],
                "description": "Tasks can have discussions attached to them.  These discussions can include text with simple\r\nformatting.  Discussion comments are formatted using [Markdown](https://www.markdownguide.org/)\r\nand users should be aware that HTML embedding is not permitted due to the risk of cross-site\r\nattacks and other embedding challenges."
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DiscussionCreateDto"
                  }
                ],
                "description": "Tasks can have discussions attached to them.  These discussions can include text with simple\r\nformatting.  Discussion comments are formatted using [Markdown](https://www.markdownguide.org/)\r\nand users should be aware that HTML embedding is not permitted due to the risk of cross-site\r\nattacks and other embedding challenges."
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DiscussionCreateDto"
                  }
                ],
                "description": "Tasks can have discussions attached to them.  These discussions can include text with simple\r\nformatting.  Discussion comments are formatted using [Markdown](https://www.markdownguide.org/)\r\nand users should be aware that HTML embedding is not permitted due to the risk of cross-site\r\nattacks and other embedding challenges."
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DiscussionCreateDto"
                  }
                ],
                "description": "Tasks can have discussions attached to them.  These discussions can include text with simple\r\nformatting.  Discussion comments are formatted using [Markdown](https://www.markdownguide.org/)\r\nand users should be aware that HTML embedding is not permitted due to the risk of cross-site\r\nattacks and other embedding challenges."
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DiscussionCreateDto"
                  }
                ],
                "description": "Tasks can have discussions attached to them.  These discussions can include text with simple\r\nformatting.  Discussion comments are formatted using [Markdown](https://www.markdownguide.org/)\r\nand users should be aware that HTML embedding is not permitted due to the risk of cross-site\r\nattacks and other embedding challenges."
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DiscussionCreateDto"
                  }
                ],
                "description": "Tasks can have discussions attached to them.  These discussions can include text with simple\r\nformatting.  Discussion comments are formatted using [Markdown](https://www.markdownguide.org/)\r\nand users should be aware that HTML embedding is not permitted due to the risk of cross-site\r\nattacks and other embedding challenges."
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DiscussionCreateDto"
                  }
                ],
                "description": "Tasks can have discussions attached to them.  These discussions can include text with simple\r\nformatting.  Discussion comments are formatted using [Markdown](https://www.markdownguide.org/)\r\nand users should be aware that HTML embedding is not permitted due to the risk of cross-site\r\nattacks and other embedding challenges."
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DiscussionCreateDto"
                  }
                ],
                "description": "Tasks can have discussions attached to them.  These discussions can include text with simple\r\nformatting.  Discussion comments are formatted using [Markdown](https://www.markdownguide.org/)\r\nand users should be aware that HTML embedding is not permitted due to the risk of cross-site\r\nattacks and other embedding challenges."
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DiscussionCreateDto"
                  }
                ],
                "description": "Tasks can have discussions attached to them.  These discussions can include text with simple\r\nformatting.  Discussion comments are formatted using [Markdown](https://www.markdownguide.org/)\r\nand users should be aware that HTML embedding is not permitted due to the risk of cross-site\r\nattacks and other embedding challenges."
              }
            },
            "application/xml": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DiscussionCreateDto"
                  }
                ],
                "description": "Tasks can have discussions attached to them.  These discussions can include text with simple\r\nformatting.  Discussion comments are formatted using [Markdown](https://www.markdownguide.org/)\r\nand users should be aware that HTML embedding is not permitted due to the risk of cross-site\r\nattacks and other embedding challenges."
              }
            },
            "text/plain": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DiscussionCreateDto"
                  }
                ],
                "description": "Tasks can have discussions attached to them.  These discussions can include text with simple\r\nformatting.  Discussion comments are formatted using [Markdown](https://www.markdownguide.org/)\r\nand users should be aware that HTML embedding is not permitted due to the risk of cross-site\r\nattacks and other embedding challenges."
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DiscussionCreateDto"
                  }
                ],
                "description": "Tasks can have discussions attached to them.  These discussions can include text with simple\r\nformatting.  Discussion comments are formatted using [Markdown](https://www.markdownguide.org/)\r\nand users should be aware that HTML embedding is not permitted due to the risk of cross-site\r\nattacks and other embedding challenges."
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DiscussionCreateDto"
                  }
                ],
                "description": "Tasks can have discussions attached to them.  These discussions can include text with simple\r\nformatting.  Discussion comments are formatted using [Markdown](https://www.markdownguide.org/)\r\nand users should be aware that HTML embedding is not permitted due to the risk of cross-site\r\nattacks and other embedding challenges."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/DiscussionCreateResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DiscussionCreateResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/DiscussionCreateResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/DiscussionCreateResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DiscussionCreateResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/DiscussionCreateResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/DiscussionCreateResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DiscussionCreateResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/DiscussionCreateResponseDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/DiscussionCreateResponseDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DiscussionCreateResponseDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscussionCreateResponseDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DiscussionCreateResponseDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DiscussionCreateResponseDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/DiscussionCreateResponseDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscussionCreateResponseDtoAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/files/{documentId}/download": {
      "get": {
        "tags": [
          "File"
        ],
        "summary": "Download File",
        "description": "Downloads the contents of a file that was previously uploaded to ProjectManager.com.\n\nProjectManager allows you to store Files connected to other elements of your Workspace such as a Project, a Task, or Home.  Files are maintained separately based on the location where the file was stored.\n\nWhen you upload a File, please allow a few moments for the File to be processed and verified. ProjectManager may reject File uploads that contain problems such as malware. Once a File has completed the upload the process, you may retrieve it using the DownloadFile API. \r\n\r\n### Data Definition\r\n\r\nSee [](https://developer.projectmanager.com/reference/) for the complete data definition.",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "The unique identifier of the document to download",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "If you specify a type of `html`, processes the file using text encoding, otherwise binary",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/files/{documentId}/thumbnail": {
      "get": {
        "tags": [
          "File"
        ],
        "summary": "Download a Thumbnail Image",
        "description": "Downloads a thumbnail image associated with a document that was previously uploaded to ProjectManager.com.\r\n            \r\nProjectManager allows you to store files linked to various elements within your Workspace,\r\nsuch as Projects, Tasks, or your Home. Files are organized based on their storage location.\r\n            \r\nWhen uploading a file, please allow some time for the file to undergo processing and verification.\r\nProjectManager may reject file uploads containing issues such as malware. Once a file has\r\ncompleted the upload process, you can retrieve its associated thumbnail using the DownloadThumbnail API.",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "The unique identifier of the document for which to download the thumbnail.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/data/files/{fileId}": {
      "put": {
        "tags": [
          "File"
        ],
        "summary": "Update File",
        "description": "Updates information about a File uploaded to your Workspace.\n\nProjectManager allows you to store Files connected to other elements of your Workspace such as a Project, a Task, or Home.  Files are maintained separately based on the location where the file was stored.\n\nWhen you upload a File, please allow a few moments for the File to be processed and verified. ProjectManager may reject File uploads that contain problems such as malware. Once a File has completed the upload the process, you may retrieve it using the DownloadFile API. \r\n\r\n### Data Definition\r\n\r\nSee [](https://developer.projectmanager.com/reference/) for the complete data definition.",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "The unique identifier of the File to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Information to change about the File and its location",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateRequestDto"
                  }
                ],
                "description": "Represents an update request for a File within ProjectManager.\r\n            \r\nProjectManager allows you to store Files connected to other elements of your Workspace\r\nsuch as a Project or a Discussion.  When you upload a File, please allow a few moments\r\nfor the File to be processed and verified.  ProjectManager may reject File uploads that\r\ncontain problems such as malware. Once a File has completed the upload the process, you\r\nmay retrieve it using the DownloadFile API."
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateRequestDto"
                  }
                ],
                "description": "Represents an update request for a File within ProjectManager.\r\n            \r\nProjectManager allows you to store Files connected to other elements of your Workspace\r\nsuch as a Project or a Discussion.  When you upload a File, please allow a few moments\r\nfor the File to be processed and verified.  ProjectManager may reject File uploads that\r\ncontain problems such as malware. Once a File has completed the upload the process, you\r\nmay retrieve it using the DownloadFile API."
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateRequestDto"
                  }
                ],
                "description": "Represents an update request for a File within ProjectManager.\r\n            \r\nProjectManager allows you to store Files connected to other elements of your Workspace\r\nsuch as a Project or a Discussion.  When you upload a File, please allow a few moments\r\nfor the File to be processed and verified.  ProjectManager may reject File uploads that\r\ncontain problems such as malware. Once a File has completed the upload the process, you\r\nmay retrieve it using the DownloadFile API."
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateRequestDto"
                  }
                ],
                "description": "Represents an update request for a File within ProjectManager.\r\n            \r\nProjectManager allows you to store Files connected to other elements of your Workspace\r\nsuch as a Project or a Discussion.  When you upload a File, please allow a few moments\r\nfor the File to be processed and verified.  ProjectManager may reject File uploads that\r\ncontain problems such as malware. Once a File has completed the upload the process, you\r\nmay retrieve it using the DownloadFile API."
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateRequestDto"
                  }
                ],
                "description": "Represents an update request for a File within ProjectManager.\r\n            \r\nProjectManager allows you to store Files connected to other elements of your Workspace\r\nsuch as a Project or a Discussion.  When you upload a File, please allow a few moments\r\nfor the File to be processed and verified.  ProjectManager may reject File uploads that\r\ncontain problems such as malware. Once a File has completed the upload the process, you\r\nmay retrieve it using the DownloadFile API."
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateRequestDto"
                  }
                ],
                "description": "Represents an update request for a File within ProjectManager.\r\n            \r\nProjectManager allows you to store Files connected to other elements of your Workspace\r\nsuch as a Project or a Discussion.  When you upload a File, please allow a few moments\r\nfor the File to be processed and verified.  ProjectManager may reject File uploads that\r\ncontain problems such as malware. Once a File has completed the upload the process, you\r\nmay retrieve it using the DownloadFile API."
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateRequestDto"
                  }
                ],
                "description": "Represents an update request for a File within ProjectManager.\r\n            \r\nProjectManager allows you to store Files connected to other elements of your Workspace\r\nsuch as a Project or a Discussion.  When you upload a File, please allow a few moments\r\nfor the File to be processed and verified.  ProjectManager may reject File uploads that\r\ncontain problems such as malware. Once a File has completed the upload the process, you\r\nmay retrieve it using the DownloadFile API."
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateRequestDto"
                  }
                ],
                "description": "Represents an update request for a File within ProjectManager.\r\n            \r\nProjectManager allows you to store Files connected to other elements of your Workspace\r\nsuch as a Project or a Discussion.  When you upload a File, please allow a few moments\r\nfor the File to be processed and verified.  ProjectManager may reject File uploads that\r\ncontain problems such as malware. Once a File has completed the upload the process, you\r\nmay retrieve it using the DownloadFile API."
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateRequestDto"
                  }
                ],
                "description": "Represents an update request for a File within ProjectManager.\r\n            \r\nProjectManager allows you to store Files connected to other elements of your Workspace\r\nsuch as a Project or a Discussion.  When you upload a File, please allow a few moments\r\nfor the File to be processed and verified.  ProjectManager may reject File uploads that\r\ncontain problems such as malware. Once a File has completed the upload the process, you\r\nmay retrieve it using the DownloadFile API."
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateRequestDto"
                  }
                ],
                "description": "Represents an update request for a File within ProjectManager.\r\n            \r\nProjectManager allows you to store Files connected to other elements of your Workspace\r\nsuch as a Project or a Discussion.  When you upload a File, please allow a few moments\r\nfor the File to be processed and verified.  ProjectManager may reject File uploads that\r\ncontain problems such as malware. Once a File has completed the upload the process, you\r\nmay retrieve it using the DownloadFile API."
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateRequestDto"
                  }
                ],
                "description": "Represents an update request for a File within ProjectManager.\r\n            \r\nProjectManager allows you to store Files connected to other elements of your Workspace\r\nsuch as a Project or a Discussion.  When you upload a File, please allow a few moments\r\nfor the File to be processed and verified.  ProjectManager may reject File uploads that\r\ncontain problems such as malware. Once a File has completed the upload the process, you\r\nmay retrieve it using the DownloadFile API."
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateRequestDto"
                  }
                ],
                "description": "Represents an update request for a File within ProjectManager.\r\n            \r\nProjectManager allows you to store Files connected to other elements of your Workspace\r\nsuch as a Project or a Discussion.  When you upload a File, please allow a few moments\r\nfor the File to be processed and verified.  ProjectManager may reject File uploads that\r\ncontain problems such as malware. Once a File has completed the upload the process, you\r\nmay retrieve it using the DownloadFile API."
              }
            },
            "application/xml": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateRequestDto"
                  }
                ],
                "description": "Represents an update request for a File within ProjectManager.\r\n            \r\nProjectManager allows you to store Files connected to other elements of your Workspace\r\nsuch as a Project or a Discussion.  When you upload a File, please allow a few moments\r\nfor the File to be processed and verified.  ProjectManager may reject File uploads that\r\ncontain problems such as malware. Once a File has completed the upload the process, you\r\nmay retrieve it using the DownloadFile API."
              }
            },
            "text/plain": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateRequestDto"
                  }
                ],
                "description": "Represents an update request for a File within ProjectManager.\r\n            \r\nProjectManager allows you to store Files connected to other elements of your Workspace\r\nsuch as a Project or a Discussion.  When you upload a File, please allow a few moments\r\nfor the File to be processed and verified.  ProjectManager may reject File uploads that\r\ncontain problems such as malware. Once a File has completed the upload the process, you\r\nmay retrieve it using the DownloadFile API."
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateRequestDto"
                  }
                ],
                "description": "Represents an update request for a File within ProjectManager.\r\n            \r\nProjectManager allows you to store Files connected to other elements of your Workspace\r\nsuch as a Project or a Discussion.  When you upload a File, please allow a few moments\r\nfor the File to be processed and verified.  ProjectManager may reject File uploads that\r\ncontain problems such as malware. Once a File has completed the upload the process, you\r\nmay retrieve it using the DownloadFile API."
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateRequestDto"
                  }
                ],
                "description": "Represents an update request for a File within ProjectManager.\r\n            \r\nProjectManager allows you to store Files connected to other elements of your Workspace\r\nsuch as a Project or a Discussion.  When you upload a File, please allow a few moments\r\nfor the File to be processed and verified.  ProjectManager may reject File uploads that\r\ncontain problems such as malware. Once a File has completed the upload the process, you\r\nmay retrieve it using the DownloadFile API."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/home/files": {
      "post": {
        "tags": [
          "HomeFile"
        ],
        "summary": "Upload Home File",
        "description": "Uploads a file to a Home folder.\n\nProjectManager allows you to store Files connected to other elements of your Workspace such as a Project, a Task, or Home.  Files are maintained separately based on the location where the file was stored.\n\nWhen you upload a File, please allow a few moments for the File to be processed and verified. ProjectManager may reject File uploads that contain problems such as malware. Once a File has completed the upload the process, you may retrieve it using the DownloadFile API. \r\n\r\n### Data Definition\r\n\r\nSee [FileDto](https://developer.projectmanager.com/reference/filedto) for the complete data definition.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/home/folders/{folderId}/files": {
      "post": {
        "tags": [
          "HomeFile"
        ],
        "summary": "Upload Home File To Folder",
        "description": "Uploads a file to a home folder.\n\nProjectManager allows you to store Files connected to other elements of your Workspace such as a Project, a Task, or Home.  Files are maintained separately based on the location where the file was stored.\n\nWhen you upload a File, please allow a few moments for the File to be processed and verified. ProjectManager may reject File uploads that contain problems such as malware. Once a File has completed the upload the process, you may retrieve it using the DownloadFile API. \r\n\r\n### Data Definition\r\n\r\nSee [FileDto](https://developer.projectmanager.com/reference/filedto) for the complete data definition.",
        "parameters": [
          {
            "name": "folderId",
            "in": "path",
            "description": "The reference to the sub folder to put the file into",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/integrations/{integrationId}": {
      "get": {
        "tags": [
          "Integration"
        ],
        "summary": "Retrieve Integration",
        "description": "Retrieves an Integration specified by a unique identifier.\n\nThe Integrations API is intended for use by ProjectManager and its business development partners.  Please contact ProjectManager's sales team to request use of this API. \r\n\r\n### Data Definition\r\n\r\nSee [IntegrationDto](https://developer.projectmanager.com/reference/integrationdto) for the complete data definition.",
        "parameters": [
          {
            "name": "integrationId",
            "in": "path",
            "description": "The unique identifier of this Integration",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDtoAstroResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Integration"
        ],
        "summary": "Enable Integration",
        "description": "Enable a specific Integration for the current Workspace.\n\nThe Integrations API is intended for use by ProjectManager and its business development partners.  Please contact ProjectManager's sales team to request use of this API. \r\n\r\n### Data Definition\r\n\r\nSee [IntegrationDto](https://developer.projectmanager.com/reference/integrationdto) for the complete data definition.",
        "parameters": [
          {
            "name": "integrationId",
            "in": "path",
            "description": "The unique identifier of the Integration to enable",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDtoAstroResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Integration"
        ],
        "summary": "Disable Integration",
        "description": "Disable a specific Integration for the current Workspace.\n\nThe Integrations API is intended for use by ProjectManager and its business development partners.  Please contact ProjectManager's sales team to request use of this API. \r\n\r\n### Data Definition\r\n\r\nSee [](https://developer.projectmanager.com/reference/) for the complete data definition.",
        "parameters": [
          {
            "name": "integrationId",
            "in": "path",
            "description": "The unique identifier of the Integration to disable",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/integrations": {
      "get": {
        "tags": [
          "Integration"
        ],
        "summary": "Retrieve All Integrations",
        "description": "Retrieves all Integrations for the current Workspace.\n\nThe Integrations API is intended for use by ProjectManager and its business development partners.  Please contact ProjectManager's sales team to request use of this API. \r\n\r\n### Data Definition\r\n\r\nSee [IntegrationDto](https://developer.projectmanager.com/reference/integrationdto) for the complete data definition.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDtoListAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDtoListAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDtoListAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDtoListAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDtoListAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDtoListAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/integrations/{integrationId}/instance": {
      "post": {
        "tags": [
          "Integration"
        ],
        "summary": "Add Integration Instance",
        "description": "Adds a new Integration instance to a Workspace.\n\nThe Integrations API is intended for use by ProjectManager and its business development partners.  Please contact ProjectManager's sales team to request use of this API. \r\n\r\n### Data Definition\r\n\r\nSee [NewIntegrationInstanceDto](https://developer.projectmanager.com/reference/newintegrationinstancedto) for the complete data definition.",
        "parameters": [
          {
            "name": "integrationId",
            "in": "path",
            "description": "The unique identifier of the Integration to add to this Workspace",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The information about this Integration to add",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateIntegrationInstanceDto"
                  }
                ],
                "description": "The Integrations API is intended for use by ProjectManager and its business\r\ndevelopment partners.  Please contact ProjectManager's sales team to request use of this API."
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateIntegrationInstanceDto"
                  }
                ],
                "description": "The Integrations API is intended for use by ProjectManager and its business\r\ndevelopment partners.  Please contact ProjectManager's sales team to request use of this API."
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateIntegrationInstanceDto"
                  }
                ],
                "description": "The Integrations API is intended for use by ProjectManager and its business\r\ndevelopment partners.  Please contact ProjectManager's sales team to request use of this API."
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateIntegrationInstanceDto"
                  }
                ],
                "description": "The Integrations API is intended for use by ProjectManager and its business\r\ndevelopment partners.  Please contact ProjectManager's sales team to request use of this API."
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateIntegrationInstanceDto"
                  }
                ],
                "description": "The Integrations API is intended for use by ProjectManager and its business\r\ndevelopment partners.  Please contact ProjectManager's sales team to request use of this API."
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateIntegrationInstanceDto"
                  }
                ],
                "description": "The Integrations API is intended for use by ProjectManager and its business\r\ndevelopment partners.  Please contact ProjectManager's sales team to request use of this API."
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateIntegrationInstanceDto"
                  }
                ],
                "description": "The Integrations API is intended for use by ProjectManager and its business\r\ndevelopment partners.  Please contact ProjectManager's sales team to request use of this API."
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateIntegrationInstanceDto"
                  }
                ],
                "description": "The Integrations API is intended for use by ProjectManager and its business\r\ndevelopment partners.  Please contact ProjectManager's sales team to request use of this API."
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateIntegrationInstanceDto"
                  }
                ],
                "description": "The Integrations API is intended for use by ProjectManager and its business\r\ndevelopment partners.  Please contact ProjectManager's sales team to request use of this API."
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateIntegrationInstanceDto"
                  }
                ],
                "description": "The Integrations API is intended for use by ProjectManager and its business\r\ndevelopment partners.  Please contact ProjectManager's sales team to request use of this API."
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateIntegrationInstanceDto"
                  }
                ],
                "description": "The Integrations API is intended for use by ProjectManager and its business\r\ndevelopment partners.  Please contact ProjectManager's sales team to request use of this API."
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateIntegrationInstanceDto"
                  }
                ],
                "description": "The Integrations API is intended for use by ProjectManager and its business\r\ndevelopment partners.  Please contact ProjectManager's sales team to request use of this API."
              }
            },
            "application/xml": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateIntegrationInstanceDto"
                  }
                ],
                "description": "The Integrations API is intended for use by ProjectManager and its business\r\ndevelopment partners.  Please contact ProjectManager's sales team to request use of this API."
              }
            },
            "text/plain": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateIntegrationInstanceDto"
                  }
                ],
                "description": "The Integrations API is intended for use by ProjectManager and its business\r\ndevelopment partners.  Please contact ProjectManager's sales team to request use of this API."
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateIntegrationInstanceDto"
                  }
                ],
                "description": "The Integrations API is intended for use by ProjectManager and its business\r\ndevelopment partners.  Please contact ProjectManager's sales team to request use of this API."
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateIntegrationInstanceDto"
                  }
                ],
                "description": "The Integrations API is intended for use by ProjectManager and its business\r\ndevelopment partners.  Please contact ProjectManager's sales team to request use of this API."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/NewIntegrationInstanceDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/NewIntegrationInstanceDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/NewIntegrationInstanceDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/NewIntegrationInstanceDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/NewIntegrationInstanceDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/NewIntegrationInstanceDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/NewIntegrationInstanceDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/NewIntegrationInstanceDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/NewIntegrationInstanceDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/NewIntegrationInstanceDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/NewIntegrationInstanceDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewIntegrationInstanceDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/NewIntegrationInstanceDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NewIntegrationInstanceDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/NewIntegrationInstanceDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewIntegrationInstanceDtoAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/integrations/instances/{integrationInstanceId}": {
      "delete": {
        "tags": [
          "Integration"
        ],
        "summary": "Remove Integration Instance",
        "description": "Removes an existing Integration instance from a Workspace.\n\nThe Integrations API is intended for use by ProjectManager and its business development partners.  Please contact ProjectManager's sales team to request use of this API. \r\n\r\n### Data Definition\r\n\r\nSee [](https://developer.projectmanager.com/reference/) for the complete data definition.",
        "parameters": [
          {
            "name": "integrationInstanceId",
            "in": "path",
            "description": "The unique identifier of the IntegrationInstance to remove from this Workspace",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/integrations/categories": {
      "get": {
        "tags": [
          "IntegrationCategory"
        ],
        "summary": "Retrieve Provider Categories",
        "description": "Retrieves the list of available IntegrationProvider categories.\n\nAn IntegrationProvider is the name of an external application or service that can be connected to ProjectManager.com.  The Integrations API is intended for use by ProjectManager and its business development partners.  Please contact ProjectManager's sales team to request use of this API. \r\n\r\n### Data Definition\r\n\r\nSee [IntegrationCategoryDto](https://developer.projectmanager.com/reference/integrationcategorydto) for the complete data definition.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationCategoryDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationCategoryDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationCategoryDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationCategoryDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationCategoryDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationCategoryDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationCategoryDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationCategoryDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationCategoryDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationCategoryDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationCategoryDtoListAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationCategoryDtoListAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationCategoryDtoListAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationCategoryDtoListAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationCategoryDtoListAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationCategoryDtoListAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/integrations/providers": {
      "get": {
        "tags": [
          "IntegrationProvider"
        ],
        "summary": "List Providers",
        "description": "List all available IntegrationProviders that can be activated.\n\nAn IntegrationProvider is the name of an external application or service that can be connected to ProjectManager.com.  The Integrations API is intended for use by ProjectManager and its business development partners.  Please contact ProjectManager's sales team to request use of this API. \r\n\r\n### Data Definition\r\n\r\nSee [IntegrationProviderDto](https://developer.projectmanager.com/reference/integrationproviderdto) for the complete data definition.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationProviderDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationProviderDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationProviderDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationProviderDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationProviderDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationProviderDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationProviderDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationProviderDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationProviderDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationProviderDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationProviderDtoListAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationProviderDtoListAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationProviderDtoListAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationProviderDtoListAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationProviderDtoListAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationProviderDtoListAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/integrations/providers/{providerId}": {
      "post": {
        "tags": [
          "IntegrationProvider"
        ],
        "summary": "Activate Integration Provider",
        "description": "Activates an Integration Provider and retrieves authentication information about a specific IntegrationProvider.\n\nAn IntegrationProvider is the name of an external application or service that can be connected to ProjectManager.com.  The Integrations API is intended for use by ProjectManager and its business development partners.  Please contact ProjectManager's sales team to request use of this API. \r\n\r\n### Data Definition\r\n\r\nSee [DirectLinkDto](https://developer.projectmanager.com/reference/directlinkdto) for the complete data definition.",
        "parameters": [
          {
            "name": "providerId",
            "in": "path",
            "description": "The unique identifier of the IntegrationProvider for which you are requesting authentication information",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/DirectLinkDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DirectLinkDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/DirectLinkDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/DirectLinkDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DirectLinkDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/DirectLinkDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/DirectLinkDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DirectLinkDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/DirectLinkDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/DirectLinkDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DirectLinkDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectLinkDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DirectLinkDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DirectLinkDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/DirectLinkDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectLinkDtoAstroResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "IntegrationProvider"
        ],
        "summary": "Update Integration Provider",
        "description": "Allows you to update the auth status of the provider specific connection. \r\n\r\n### Data Definition\r\n\r\nSee [](https://developer.projectmanager.com/reference/) for the complete data definition.",
        "parameters": [
          {
            "name": "providerId",
            "in": "path",
            "description": "The identifier to the provider",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Specify the auth status",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthenticationStatusDto"
                  }
                ],
                "description": "Set the connection status of an integration"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthenticationStatusDto"
                  }
                ],
                "description": "Set the connection status of an integration"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthenticationStatusDto"
                  }
                ],
                "description": "Set the connection status of an integration"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthenticationStatusDto"
                  }
                ],
                "description": "Set the connection status of an integration"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthenticationStatusDto"
                  }
                ],
                "description": "Set the connection status of an integration"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthenticationStatusDto"
                  }
                ],
                "description": "Set the connection status of an integration"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthenticationStatusDto"
                  }
                ],
                "description": "Set the connection status of an integration"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthenticationStatusDto"
                  }
                ],
                "description": "Set the connection status of an integration"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthenticationStatusDto"
                  }
                ],
                "description": "Set the connection status of an integration"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthenticationStatusDto"
                  }
                ],
                "description": "Set the connection status of an integration"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthenticationStatusDto"
                  }
                ],
                "description": "Set the connection status of an integration"
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthenticationStatusDto"
                  }
                ],
                "description": "Set the connection status of an integration"
              }
            },
            "application/xml": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthenticationStatusDto"
                  }
                ],
                "description": "Set the connection status of an integration"
              }
            },
            "text/plain": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthenticationStatusDto"
                  }
                ],
                "description": "Set the connection status of an integration"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthenticationStatusDto"
                  }
                ],
                "description": "Set the connection status of an integration"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthenticationStatusDto"
                  }
                ],
                "description": "Set the connection status of an integration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "IntegrationProvider"
        ],
        "summary": "Deactivate Integration Provider",
        "description": "Allows you to deactivate an integration provider \r\n\r\n### Data Definition\r\n\r\nSee [](https://developer.projectmanager.com/reference/) for the complete data definition.",
        "parameters": [
          {
            "name": "providerId",
            "in": "path",
            "description": "The identifier to the provider",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/integrations/providers/{providerId}/user-connection": {
      "post": {
        "tags": [
          "IntegrationProvider"
        ],
        "summary": "Create User Integration Provider Connection",
        "description": "Retrieves user authentication information about a specific IntegrationProvider.\n\nThis connection can be used for requests to Providers that require specific user data. \r\n\r\n### Data Definition\r\n\r\nSee [DirectLinkDto](https://developer.projectmanager.com/reference/directlinkdto) for the complete data definition.",
        "parameters": [
          {
            "name": "providerId",
            "in": "path",
            "description": "The unique identifier of the IntegrationProvider for which you are requesting authentication information",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/DirectLinkDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DirectLinkDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/DirectLinkDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/DirectLinkDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DirectLinkDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/DirectLinkDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/DirectLinkDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DirectLinkDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/DirectLinkDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/DirectLinkDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/DirectLinkDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectLinkDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DirectLinkDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DirectLinkDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/DirectLinkDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectLinkDtoAstroResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "IntegrationProvider"
        ],
        "summary": "Update User Integration Provider Connection",
        "description": "Allows you to update the auth status of the provider specific user connection. \r\n\r\n### Data Definition\r\n\r\nSee [](https://developer.projectmanager.com/reference/) for the complete data definition.",
        "parameters": [
          {
            "name": "providerId",
            "in": "path",
            "description": "The identifier to the provider",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Specify the auth status",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthenticationStatusDto"
                  }
                ],
                "description": "Set the connection status of an integration"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthenticationStatusDto"
                  }
                ],
                "description": "Set the connection status of an integration"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthenticationStatusDto"
                  }
                ],
                "description": "Set the connection status of an integration"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthenticationStatusDto"
                  }
                ],
                "description": "Set the connection status of an integration"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthenticationStatusDto"
                  }
                ],
                "description": "Set the connection status of an integration"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthenticationStatusDto"
                  }
                ],
                "description": "Set the connection status of an integration"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthenticationStatusDto"
                  }
                ],
                "description": "Set the connection status of an integration"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthenticationStatusDto"
                  }
                ],
                "description": "Set the connection status of an integration"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthenticationStatusDto"
                  }
                ],
                "description": "Set the connection status of an integration"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthenticationStatusDto"
                  }
                ],
                "description": "Set the connection status of an integration"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthenticationStatusDto"
                  }
                ],
                "description": "Set the connection status of an integration"
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthenticationStatusDto"
                  }
                ],
                "description": "Set the connection status of an integration"
              }
            },
            "application/xml": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthenticationStatusDto"
                  }
                ],
                "description": "Set the connection status of an integration"
              }
            },
            "text/plain": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthenticationStatusDto"
                  }
                ],
                "description": "Set the connection status of an integration"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthenticationStatusDto"
                  }
                ],
                "description": "Set the connection status of an integration"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthenticationStatusDto"
                  }
                ],
                "description": "Set the connection status of an integration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/license": {
      "get": {
        "tags": [
          "License"
        ],
        "summary": "Retrieve Licenses",
        "description": "Retrieve information about the current licenses possessed by this Workspace.\n\nLicenses contain information about your current subscription level and features that have been enabled on your Workspace.  To modify the License information, please log on to the ProjectManager.com application and use the Account | Editions screen to review or update your Licenses. \r\n\r\n### Data Definition\r\n\r\nSee [LicenseDto](https://developer.projectmanager.com/reference/licensedto) for the complete data definition.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseDtoListAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseDtoListAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseDtoListAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseDtoListAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseDtoListAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseDtoListAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/license/{bundleSku}/try": {
      "post": {
        "tags": [
          "License"
        ],
        "summary": "Add License",
        "description": "Adds a new License to the current Workspace.\n\nLicenses contain information about your current subscription level and features that have been enabled on your Workspace.  To modify the License information, please log on to the ProjectManager.com application and use the Account | Editions screen to review or update your Licenses. \r\n\r\n### Data Definition\r\n\r\nSee [LicenseDto](https://developer.projectmanager.com/reference/licensedto) for the complete data definition.",
        "parameters": [
          {
            "name": "bundleSku",
            "in": "path",
            "description": "Information about the SKU you wish to add to your Workspace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseDtoListAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseDtoListAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseDtoListAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseDtoListAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseDtoListAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseDtoListAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/me": {
      "get": {
        "tags": [
          "Me"
        ],
        "summary": "Retrieve Me",
        "description": "Retrieve information about the currently logged on user.\n\nThis API call will always succeed with a 200 OK if called with valid authentication information. If the authentication information provided is not valid, calling this API will return a 401 Authentication Failed error message.  If successful, this API returns information about the user including its home URL, email address, user name, and workspace name. \r\n\r\n### Data Definition\r\n\r\nSee [WorkSpaceUserInfoDto](https://developer.projectmanager.com/reference/workspaceuserinfodto) for the complete data definition.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/WorkSpaceUserInfoDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/WorkSpaceUserInfoDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/WorkSpaceUserInfoDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/WorkSpaceUserInfoDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/WorkSpaceUserInfoDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/WorkSpaceUserInfoDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/WorkSpaceUserInfoDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/WorkSpaceUserInfoDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/WorkSpaceUserInfoDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/WorkSpaceUserInfoDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/WorkSpaceUserInfoDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkSpaceUserInfoDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WorkSpaceUserInfoDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorkSpaceUserInfoDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/WorkSpaceUserInfoDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkSpaceUserInfoDtoAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/projects": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Query Projects",
        "description": "Retrieve a list of Projects that match an [OData formatted query](https://www.odata.org/).\n\nA Project is a collection of Tasks that contributes towards a goal.  Within a Project, Tasks represent individual items of work that team members must complete.  The sum total of Tasks within a Project represents the work to be completed for that Project. \r\n\r\n### Data Definition\r\n\r\nSee [ProjectDto](https://developer.projectmanager.com/reference/projectdto) for the complete data definition.",
        "parameters": [
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to return",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the given number of records and then returns $top records",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter the expression according to oData queries",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specify which properties should be returned",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order collection by this field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Include related data in the response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDtoListAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDtoListAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDtoListAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDtoListAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDtoListAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDtoListAstroResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Create Project",
        "description": "Create a new project based on the details provided.\n\nA Project is a collection of Tasks that contributes towards a goal.  Within a Project, Tasks represent individual items of work that team members must complete.  The sum total of Tasks within a Project represents the work to be completed for that Project. \r\n\r\n### Data Definition\r\n\r\nSee [ProjectDto](https://developer.projectmanager.com/reference/projectdto) for the complete data definition.",
        "requestBody": {
          "description": "Information about the Project you wish to create",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectCreateDto"
                  }
                ],
                "description": "A Project is a collection of Tasks that contributes towards a goal.  Within a Project, Tasks\r\nrepresent individual items of work that team members must complete.  The sum total of Tasks\r\nwithin a Project represents the work to be completed for that Project.\r\n            \r\nFields that cannot be selected during a CreateProject API call are not visible on this\r\ndata model."
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectCreateDto"
                  }
                ],
                "description": "A Project is a collection of Tasks that contributes towards a goal.  Within a Project, Tasks\r\nrepresent individual items of work that team members must complete.  The sum total of Tasks\r\nwithin a Project represents the work to be completed for that Project.\r\n            \r\nFields that cannot be selected during a CreateProject API call are not visible on this\r\ndata model."
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectCreateDto"
                  }
                ],
                "description": "A Project is a collection of Tasks that contributes towards a goal.  Within a Project, Tasks\r\nrepresent individual items of work that team members must complete.  The sum total of Tasks\r\nwithin a Project represents the work to be completed for that Project.\r\n            \r\nFields that cannot be selected during a CreateProject API call are not visible on this\r\ndata model."
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectCreateDto"
                  }
                ],
                "description": "A Project is a collection of Tasks that contributes towards a goal.  Within a Project, Tasks\r\nrepresent individual items of work that team members must complete.  The sum total of Tasks\r\nwithin a Project represents the work to be completed for that Project.\r\n            \r\nFields that cannot be selected during a CreateProject API call are not visible on this\r\ndata model."
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectCreateDto"
                  }
                ],
                "description": "A Project is a collection of Tasks that contributes towards a goal.  Within a Project, Tasks\r\nrepresent individual items of work that team members must complete.  The sum total of Tasks\r\nwithin a Project represents the work to be completed for that Project.\r\n            \r\nFields that cannot be selected during a CreateProject API call are not visible on this\r\ndata model."
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectCreateDto"
                  }
                ],
                "description": "A Project is a collection of Tasks that contributes towards a goal.  Within a Project, Tasks\r\nrepresent individual items of work that team members must complete.  The sum total of Tasks\r\nwithin a Project represents the work to be completed for that Project.\r\n            \r\nFields that cannot be selected during a CreateProject API call are not visible on this\r\ndata model."
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectCreateDto"
                  }
                ],
                "description": "A Project is a collection of Tasks that contributes towards a goal.  Within a Project, Tasks\r\nrepresent individual items of work that team members must complete.  The sum total of Tasks\r\nwithin a Project represents the work to be completed for that Project.\r\n            \r\nFields that cannot be selected during a CreateProject API call are not visible on this\r\ndata model."
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectCreateDto"
                  }
                ],
                "description": "A Project is a collection of Tasks that contributes towards a goal.  Within a Project, Tasks\r\nrepresent individual items of work that team members must complete.  The sum total of Tasks\r\nwithin a Project represents the work to be completed for that Project.\r\n            \r\nFields that cannot be selected during a CreateProject API call are not visible on this\r\ndata model."
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectCreateDto"
                  }
                ],
                "description": "A Project is a collection of Tasks that contributes towards a goal.  Within a Project, Tasks\r\nrepresent individual items of work that team members must complete.  The sum total of Tasks\r\nwithin a Project represents the work to be completed for that Project.\r\n            \r\nFields that cannot be selected during a CreateProject API call are not visible on this\r\ndata model."
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectCreateDto"
                  }
                ],
                "description": "A Project is a collection of Tasks that contributes towards a goal.  Within a Project, Tasks\r\nrepresent individual items of work that team members must complete.  The sum total of Tasks\r\nwithin a Project represents the work to be completed for that Project.\r\n            \r\nFields that cannot be selected during a CreateProject API call are not visible on this\r\ndata model."
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectCreateDto"
                  }
                ],
                "description": "A Project is a collection of Tasks that contributes towards a goal.  Within a Project, Tasks\r\nrepresent individual items of work that team members must complete.  The sum total of Tasks\r\nwithin a Project represents the work to be completed for that Project.\r\n            \r\nFields that cannot be selected during a CreateProject API call are not visible on this\r\ndata model."
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectCreateDto"
                  }
                ],
                "description": "A Project is a collection of Tasks that contributes towards a goal.  Within a Project, Tasks\r\nrepresent individual items of work that team members must complete.  The sum total of Tasks\r\nwithin a Project represents the work to be completed for that Project.\r\n            \r\nFields that cannot be selected during a CreateProject API call are not visible on this\r\ndata model."
              }
            },
            "application/xml": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectCreateDto"
                  }
                ],
                "description": "A Project is a collection of Tasks that contributes towards a goal.  Within a Project, Tasks\r\nrepresent individual items of work that team members must complete.  The sum total of Tasks\r\nwithin a Project represents the work to be completed for that Project.\r\n            \r\nFields that cannot be selected during a CreateProject API call are not visible on this\r\ndata model."
              }
            },
            "text/plain": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectCreateDto"
                  }
                ],
                "description": "A Project is a collection of Tasks that contributes towards a goal.  Within a Project, Tasks\r\nrepresent individual items of work that team members must complete.  The sum total of Tasks\r\nwithin a Project represents the work to be completed for that Project.\r\n            \r\nFields that cannot be selected during a CreateProject API call are not visible on this\r\ndata model."
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectCreateDto"
                  }
                ],
                "description": "A Project is a collection of Tasks that contributes towards a goal.  Within a Project, Tasks\r\nrepresent individual items of work that team members must complete.  The sum total of Tasks\r\nwithin a Project represents the work to be completed for that Project.\r\n            \r\nFields that cannot be selected during a CreateProject API call are not visible on this\r\ndata model."
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectCreateDto"
                  }
                ],
                "description": "A Project is a collection of Tasks that contributes towards a goal.  Within a Project, Tasks\r\nrepresent individual items of work that team members must complete.  The sum total of Tasks\r\nwithin a Project represents the work to be completed for that Project.\r\n            \r\nFields that cannot be selected during a CreateProject API call are not visible on this\r\ndata model."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDtoAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/projects/{projectId}": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Retrieve Project",
        "description": "Retrieves a project based on its unique identifier.\n\nA Project is a collection of Tasks that contributes towards a goal.  Within a Project, Tasks represent individual items of work that team members must complete.  The sum total of Tasks within a Project represents the work to be completed for that Project. \r\n\r\n### Data Definition\r\n\r\nSee [ProjectDto](https://developer.projectmanager.com/reference/projectdto) for the complete data definition.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the Project to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDtoAstroResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Project"
        ],
        "summary": "Update Project",
        "description": "Update an existing Project and replace the values of fields specified.\n\nA Project is a collection of Tasks that contributes towards a goal.  Within a Project, Tasks represent individual items of work that team members must complete.  The sum total of Tasks within a Project represents the work to be completed for that Project.\n\nMultiple users can be working on data at the same time.  When you call an API to update an object, this call is converted into a Changeset that is then applied sequentially.  You can use RetrieveChangeset to see the status of an individual Changeset. \r\n\r\n### Data Definition\r\n\r\nSee [](https://developer.projectmanager.com/reference/) for the complete data definition.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the Project to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "All non-null fields in this object will replace previous data within the Project",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectUpdateDto"
                  }
                ],
                "description": "A Project is a collection of Tasks that contributes towards a goal.  Within a Project, Tasks\r\nrepresent individual items of work that team members must complete.  The sum total of Tasks\r\nwithin a Project represents the work to be completed for that Project.\r\n            \r\nFields that cannot be modified during an UpdateProject call are not visible on this data\r\nmodel."
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectUpdateDto"
                  }
                ],
                "description": "A Project is a collection of Tasks that contributes towards a goal.  Within a Project, Tasks\r\nrepresent individual items of work that team members must complete.  The sum total of Tasks\r\nwithin a Project represents the work to be completed for that Project.\r\n            \r\nFields that cannot be modified during an UpdateProject call are not visible on this data\r\nmodel."
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectUpdateDto"
                  }
                ],
                "description": "A Project is a collection of Tasks that contributes towards a goal.  Within a Project, Tasks\r\nrepresent individual items of work that team members must complete.  The sum total of Tasks\r\nwithin a Project represents the work to be completed for that Project.\r\n            \r\nFields that cannot be modified during an UpdateProject call are not visible on this data\r\nmodel."
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectUpdateDto"
                  }
                ],
                "description": "A Project is a collection of Tasks that contributes towards a goal.  Within a Project, Tasks\r\nrepresent individual items of work that team members must complete.  The sum total of Tasks\r\nwithin a Project represents the work to be completed for that Project.\r\n            \r\nFields that cannot be modified during an UpdateProject call are not visible on this data\r\nmodel."
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectUpdateDto"
                  }
                ],
                "description": "A Project is a collection of Tasks that contributes towards a goal.  Within a Project, Tasks\r\nrepresent individual items of work that team members must complete.  The sum total of Tasks\r\nwithin a Project represents the work to be completed for that Project.\r\n            \r\nFields that cannot be modified during an UpdateProject call are not visible on this data\r\nmodel."
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectUpdateDto"
                  }
                ],
                "description": "A Project is a collection of Tasks that contributes towards a goal.  Within a Project, Tasks\r\nrepresent individual items of work that team members must complete.  The sum total of Tasks\r\nwithin a Project represents the work to be completed for that Project.\r\n            \r\nFields that cannot be modified during an UpdateProject call are not visible on this data\r\nmodel."
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectUpdateDto"
                  }
                ],
                "description": "A Project is a collection of Tasks that contributes towards a goal.  Within a Project, Tasks\r\nrepresent individual items of work that team members must complete.  The sum total of Tasks\r\nwithin a Project represents the work to be completed for that Project.\r\n            \r\nFields that cannot be modified during an UpdateProject call are not visible on this data\r\nmodel."
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectUpdateDto"
                  }
                ],
                "description": "A Project is a collection of Tasks that contributes towards a goal.  Within a Project, Tasks\r\nrepresent individual items of work that team members must complete.  The sum total of Tasks\r\nwithin a Project represents the work to be completed for that Project.\r\n            \r\nFields that cannot be modified during an UpdateProject call are not visible on this data\r\nmodel."
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectUpdateDto"
                  }
                ],
                "description": "A Project is a collection of Tasks that contributes towards a goal.  Within a Project, Tasks\r\nrepresent individual items of work that team members must complete.  The sum total of Tasks\r\nwithin a Project represents the work to be completed for that Project.\r\n            \r\nFields that cannot be modified during an UpdateProject call are not visible on this data\r\nmodel."
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectUpdateDto"
                  }
                ],
                "description": "A Project is a collection of Tasks that contributes towards a goal.  Within a Project, Tasks\r\nrepresent individual items of work that team members must complete.  The sum total of Tasks\r\nwithin a Project represents the work to be completed for that Project.\r\n            \r\nFields that cannot be modified during an UpdateProject call are not visible on this data\r\nmodel."
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectUpdateDto"
                  }
                ],
                "description": "A Project is a collection of Tasks that contributes towards a goal.  Within a Project, Tasks\r\nrepresent individual items of work that team members must complete.  The sum total of Tasks\r\nwithin a Project represents the work to be completed for that Project.\r\n            \r\nFields that cannot be modified during an UpdateProject call are not visible on this data\r\nmodel."
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectUpdateDto"
                  }
                ],
                "description": "A Project is a collection of Tasks that contributes towards a goal.  Within a Project, Tasks\r\nrepresent individual items of work that team members must complete.  The sum total of Tasks\r\nwithin a Project represents the work to be completed for that Project.\r\n            \r\nFields that cannot be modified during an UpdateProject call are not visible on this data\r\nmodel."
              }
            },
            "application/xml": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectUpdateDto"
                  }
                ],
                "description": "A Project is a collection of Tasks that contributes towards a goal.  Within a Project, Tasks\r\nrepresent individual items of work that team members must complete.  The sum total of Tasks\r\nwithin a Project represents the work to be completed for that Project.\r\n            \r\nFields that cannot be modified during an UpdateProject call are not visible on this data\r\nmodel."
              }
            },
            "text/plain": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectUpdateDto"
                  }
                ],
                "description": "A Project is a collection of Tasks that contributes towards a goal.  Within a Project, Tasks\r\nrepresent individual items of work that team members must complete.  The sum total of Tasks\r\nwithin a Project represents the work to be completed for that Project.\r\n            \r\nFields that cannot be modified during an UpdateProject call are not visible on this data\r\nmodel."
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectUpdateDto"
                  }
                ],
                "description": "A Project is a collection of Tasks that contributes towards a goal.  Within a Project, Tasks\r\nrepresent individual items of work that team members must complete.  The sum total of Tasks\r\nwithin a Project represents the work to be completed for that Project.\r\n            \r\nFields that cannot be modified during an UpdateProject call are not visible on this data\r\nmodel."
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectUpdateDto"
                  }
                ],
                "description": "A Project is a collection of Tasks that contributes towards a goal.  Within a Project, Tasks\r\nrepresent individual items of work that team members must complete.  The sum total of Tasks\r\nwithin a Project represents the work to be completed for that Project.\r\n            \r\nFields that cannot be modified during an UpdateProject call are not visible on this data\r\nmodel."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/projects/chargecodes": {
      "get": {
        "tags": [
          "ProjectChargeCode"
        ],
        "summary": "Retrieve Charge Codes",
        "description": "Retrieve all defined ChargeCodes that can be used when creating Tasks.\n\nA ChargeCode is a code used to identify costs within your Projects.  Each ChargeCode has a name and a unique identifier.  ChargeCodes are defined per Workspace and are shared among Projects. \r\n\r\n### Data Definition\r\n\r\nSee [ProjectChargeCodeDto](https://developer.projectmanager.com/reference/projectchargecodedto) for the complete data definition.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectChargeCodeDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectChargeCodeDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectChargeCodeDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectChargeCodeDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectChargeCodeDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectChargeCodeDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectChargeCodeDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectChargeCodeDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectChargeCodeDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectChargeCodeDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectChargeCodeDtoListAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectChargeCodeDtoListAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectChargeCodeDtoListAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectChargeCodeDtoListAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectChargeCodeDtoListAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectChargeCodeDtoListAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/projects/customers": {
      "get": {
        "tags": [
          "ProjectCustomer"
        ],
        "summary": "Retrieve Project Customers",
        "description": "Retrieves all ProjectCustomers defined within your Workspace.\n\nA ProjectCustomer is a code used to identify costs within your Projects.  Each ProjectCustomer has a name and a unique identifier.  ChargeCodes are defined per Workspace and are shared among Projects. \r\n\r\n### Data Definition\r\n\r\nSee [ProjectCustomerDto](https://developer.projectmanager.com/reference/projectcustomerdto) for the complete data definition.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectCustomerDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectCustomerDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectCustomerDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectCustomerDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectCustomerDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectCustomerDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectCustomerDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectCustomerDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectCustomerDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectCustomerDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectCustomerDtoListAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectCustomerDtoListAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectCustomerDtoListAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectCustomerDtoListAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectCustomerDtoListAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectCustomerDtoListAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/projects/fields": {
      "get": {
        "tags": [
          "ProjectField"
        ],
        "summary": "Retrieve Project Fields",
        "description": "Retrieves all ProjectFields defined within your Workspace.\n\nA ProjectField is a custom field defined within your Workspace.  You can define ProjectFields for any integration purpose that is important to your business.  Each ProjectField has a data type as well as options in how it is handled.  ProjectFields can be edited for each Project within your Workspace. \r\n\r\n### Data Definition\r\n\r\nSee [GetProjectFieldsResponseDto](https://developer.projectmanager.com/reference/getprojectfieldsresponsedto) for the complete data definition.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/GetProjectFieldsResponseDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/GetProjectFieldsResponseDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/GetProjectFieldsResponseDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/GetProjectFieldsResponseDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/GetProjectFieldsResponseDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/GetProjectFieldsResponseDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/GetProjectFieldsResponseDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/GetProjectFieldsResponseDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/GetProjectFieldsResponseDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/GetProjectFieldsResponseDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/GetProjectFieldsResponseDtoListAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProjectFieldsResponseDtoListAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetProjectFieldsResponseDtoListAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetProjectFieldsResponseDtoListAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/GetProjectFieldsResponseDtoListAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProjectFieldsResponseDtoListAstroResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ProjectField"
        ],
        "summary": "Create Project Field",
        "description": "Creates a new ProjectField within your Workspace.\n\nA ProjectField is a custom field defined within your Workspace.  You can define ProjectFields for any integration purpose that is important to your business.  Each ProjectField has a data type as well as options in how it is handled.  ProjectFields can be edited for each Project within your Workspace. \r\n\r\n### Data Definition\r\n\r\nSee [CreateProjectFieldResponseDto](https://developer.projectmanager.com/reference/createprojectfieldresponsedto) for the complete data definition.",
        "requestBody": {
          "description": "Information about the ProjectField to create",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateProjectFieldDto"
                  }
                ],
                "description": "A ProjectField is a custom field defined within your Workspace.  You can define ProjectFields\r\nfor any integration purpose that is important to your business.  Each ProjectField has a data\r\ntype as well as options in how it is handled.  ProjectFields can be edited for each Project\r\nwithin your Workspace."
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateProjectFieldDto"
                  }
                ],
                "description": "A ProjectField is a custom field defined within your Workspace.  You can define ProjectFields\r\nfor any integration purpose that is important to your business.  Each ProjectField has a data\r\ntype as well as options in how it is handled.  ProjectFields can be edited for each Project\r\nwithin your Workspace."
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateProjectFieldDto"
                  }
                ],
                "description": "A ProjectField is a custom field defined within your Workspace.  You can define ProjectFields\r\nfor any integration purpose that is important to your business.  Each ProjectField has a data\r\ntype as well as options in how it is handled.  ProjectFields can be edited for each Project\r\nwithin your Workspace."
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateProjectFieldDto"
                  }
                ],
                "description": "A ProjectField is a custom field defined within your Workspace.  You can define ProjectFields\r\nfor any integration purpose that is important to your business.  Each ProjectField has a data\r\ntype as well as options in how it is handled.  ProjectFields can be edited for each Project\r\nwithin your Workspace."
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateProjectFieldDto"
                  }
                ],
                "description": "A ProjectField is a custom field defined within your Workspace.  You can define ProjectFields\r\nfor any integration purpose that is important to your business.  Each ProjectField has a data\r\ntype as well as options in how it is handled.  ProjectFields can be edited for each Project\r\nwithin your Workspace."
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateProjectFieldDto"
                  }
                ],
                "description": "A ProjectField is a custom field defined within your Workspace.  You can define ProjectFields\r\nfor any integration purpose that is important to your business.  Each ProjectField has a data\r\ntype as well as options in how it is handled.  ProjectFields can be edited for each Project\r\nwithin your Workspace."
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateProjectFieldDto"
                  }
                ],
                "description": "A ProjectField is a custom field defined within your Workspace.  You can define ProjectFields\r\nfor any integration purpose that is important to your business.  Each ProjectField has a data\r\ntype as well as options in how it is handled.  ProjectFields can be edited for each Project\r\nwithin your Workspace."
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateProjectFieldDto"
                  }
                ],
                "description": "A ProjectField is a custom field defined within your Workspace.  You can define ProjectFields\r\nfor any integration purpose that is important to your business.  Each ProjectField has a data\r\ntype as well as options in how it is handled.  ProjectFields can be edited for each Project\r\nwithin your Workspace."
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateProjectFieldDto"
                  }
                ],
                "description": "A ProjectField is a custom field defined within your Workspace.  You can define ProjectFields\r\nfor any integration purpose that is important to your business.  Each ProjectField has a data\r\ntype as well as options in how it is handled.  ProjectFields can be edited for each Project\r\nwithin your Workspace."
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateProjectFieldDto"
                  }
                ],
                "description": "A ProjectField is a custom field defined within your Workspace.  You can define ProjectFields\r\nfor any integration purpose that is important to your business.  Each ProjectField has a data\r\ntype as well as options in how it is handled.  ProjectFields can be edited for each Project\r\nwithin your Workspace."
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateProjectFieldDto"
                  }
                ],
                "description": "A ProjectField is a custom field defined within your Workspace.  You can define ProjectFields\r\nfor any integration purpose that is important to your business.  Each ProjectField has a data\r\ntype as well as options in how it is handled.  ProjectFields can be edited for each Project\r\nwithin your Workspace."
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateProjectFieldDto"
                  }
                ],
                "description": "A ProjectField is a custom field defined within your Workspace.  You can define ProjectFields\r\nfor any integration purpose that is important to your business.  Each ProjectField has a data\r\ntype as well as options in how it is handled.  ProjectFields can be edited for each Project\r\nwithin your Workspace."
              }
            },
            "application/xml": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateProjectFieldDto"
                  }
                ],
                "description": "A ProjectField is a custom field defined within your Workspace.  You can define ProjectFields\r\nfor any integration purpose that is important to your business.  Each ProjectField has a data\r\ntype as well as options in how it is handled.  ProjectFields can be edited for each Project\r\nwithin your Workspace."
              }
            },
            "text/plain": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateProjectFieldDto"
                  }
                ],
                "description": "A ProjectField is a custom field defined within your Workspace.  You can define ProjectFields\r\nfor any integration purpose that is important to your business.  Each ProjectField has a data\r\ntype as well as options in how it is handled.  ProjectFields can be edited for each Project\r\nwithin your Workspace."
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateProjectFieldDto"
                  }
                ],
                "description": "A ProjectField is a custom field defined within your Workspace.  You can define ProjectFields\r\nfor any integration purpose that is important to your business.  Each ProjectField has a data\r\ntype as well as options in how it is handled.  ProjectFields can be edited for each Project\r\nwithin your Workspace."
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateProjectFieldDto"
                  }
                ],
                "description": "A ProjectField is a custom field defined within your Workspace.  You can define ProjectFields\r\nfor any integration purpose that is important to your business.  Each ProjectField has a data\r\ntype as well as options in how it is handled.  ProjectFields can be edited for each Project\r\nwithin your Workspace."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProjectFieldResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProjectFieldResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProjectFieldResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProjectFieldResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProjectFieldResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProjectFieldResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProjectFieldResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProjectFieldResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProjectFieldResponseDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProjectFieldResponseDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProjectFieldResponseDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProjectFieldResponseDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProjectFieldResponseDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProjectFieldResponseDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProjectFieldResponseDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProjectFieldResponseDtoAstroResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProjectField"
        ],
        "summary": "Delete Project Field",
        "description": "Deletes an existing ProjectField within your Workspace.\n\nA ProjectField is a custom field defined within your Workspace.  You can define ProjectFields for any integration purpose that is important to your business.  Each ProjectField has a data type as well as options in how it is handled.  ProjectFields can be edited for each Project within your Workspace. \r\n\r\n### Data Definition\r\n\r\nSee [](https://developer.projectmanager.com/reference/) for the complete data definition.",
        "requestBody": {
          "description": "The identity of the ProjectField to delete",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteProjectFieldDto"
                  }
                ],
                "description": "A ProjectField is a custom field defined within your Workspace.  You can define ProjectFields\r\nfor any integration purpose that is important to your business.  Each ProjectField has a data\r\ntype as well as options in how it is handled.  ProjectFields can be edited for each Project\r\nwithin your Workspace."
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteProjectFieldDto"
                  }
                ],
                "description": "A ProjectField is a custom field defined within your Workspace.  You can define ProjectFields\r\nfor any integration purpose that is important to your business.  Each ProjectField has a data\r\ntype as well as options in how it is handled.  ProjectFields can be edited for each Project\r\nwithin your Workspace."
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteProjectFieldDto"
                  }
                ],
                "description": "A ProjectField is a custom field defined within your Workspace.  You can define ProjectFields\r\nfor any integration purpose that is important to your business.  Each ProjectField has a data\r\ntype as well as options in how it is handled.  ProjectFields can be edited for each Project\r\nwithin your Workspace."
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteProjectFieldDto"
                  }
                ],
                "description": "A ProjectField is a custom field defined within your Workspace.  You can define ProjectFields\r\nfor any integration purpose that is important to your business.  Each ProjectField has a data\r\ntype as well as options in how it is handled.  ProjectFields can be edited for each Project\r\nwithin your Workspace."
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteProjectFieldDto"
                  }
                ],
                "description": "A ProjectField is a custom field defined within your Workspace.  You can define ProjectFields\r\nfor any integration purpose that is important to your business.  Each ProjectField has a data\r\ntype as well as options in how it is handled.  ProjectFields can be edited for each Project\r\nwithin your Workspace."
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteProjectFieldDto"
                  }
                ],
                "description": "A ProjectField is a custom field defined within your Workspace.  You can define ProjectFields\r\nfor any integration purpose that is important to your business.  Each ProjectField has a data\r\ntype as well as options in how it is handled.  ProjectFields can be edited for each Project\r\nwithin your Workspace."
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteProjectFieldDto"
                  }
                ],
                "description": "A ProjectField is a custom field defined within your Workspace.  You can define ProjectFields\r\nfor any integration purpose that is important to your business.  Each ProjectField has a data\r\ntype as well as options in how it is handled.  ProjectFields can be edited for each Project\r\nwithin your Workspace."
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteProjectFieldDto"
                  }
                ],
                "description": "A ProjectField is a custom field defined within your Workspace.  You can define ProjectFields\r\nfor any integration purpose that is important to your business.  Each ProjectField has a data\r\ntype as well as options in how it is handled.  ProjectFields can be edited for each Project\r\nwithin your Workspace."
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteProjectFieldDto"
                  }
                ],
                "description": "A ProjectField is a custom field defined within your Workspace.  You can define ProjectFields\r\nfor any integration purpose that is important to your business.  Each ProjectField has a data\r\ntype as well as options in how it is handled.  ProjectFields can be edited for each Project\r\nwithin your Workspace."
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteProjectFieldDto"
                  }
                ],
                "description": "A ProjectField is a custom field defined within your Workspace.  You can define ProjectFields\r\nfor any integration purpose that is important to your business.  Each ProjectField has a data\r\ntype as well as options in how it is handled.  ProjectFields can be edited for each Project\r\nwithin your Workspace."
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteProjectFieldDto"
                  }
                ],
                "description": "A ProjectField is a custom field defined within your Workspace.  You can define ProjectFields\r\nfor any integration purpose that is important to your business.  Each ProjectField has a data\r\ntype as well as options in how it is handled.  ProjectFields can be edited for each Project\r\nwithin your Workspace."
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteProjectFieldDto"
                  }
                ],
                "description": "A ProjectField is a custom field defined within your Workspace.  You can define ProjectFields\r\nfor any integration purpose that is important to your business.  Each ProjectField has a data\r\ntype as well as options in how it is handled.  ProjectFields can be edited for each Project\r\nwithin your Workspace."
              }
            },
            "application/xml": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteProjectFieldDto"
                  }
                ],
                "description": "A ProjectField is a custom field defined within your Workspace.  You can define ProjectFields\r\nfor any integration purpose that is important to your business.  Each ProjectField has a data\r\ntype as well as options in how it is handled.  ProjectFields can be edited for each Project\r\nwithin your Workspace."
              }
            },
            "text/plain": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteProjectFieldDto"
                  }
                ],
                "description": "A ProjectField is a custom field defined within your Workspace.  You can define ProjectFields\r\nfor any integration purpose that is important to your business.  Each ProjectField has a data\r\ntype as well as options in how it is handled.  ProjectFields can be edited for each Project\r\nwithin your Workspace."
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteProjectFieldDto"
                  }
                ],
                "description": "A ProjectField is a custom field defined within your Workspace.  You can define ProjectFields\r\nfor any integration purpose that is important to your business.  Each ProjectField has a data\r\ntype as well as options in how it is handled.  ProjectFields can be edited for each Project\r\nwithin your Workspace."
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteProjectFieldDto"
                  }
                ],
                "description": "A ProjectField is a custom field defined within your Workspace.  You can define ProjectFields\r\nfor any integration purpose that is important to your business.  Each ProjectField has a data\r\ntype as well as options in how it is handled.  ProjectFields can be edited for each Project\r\nwithin your Workspace."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/projects/{projectId}/fields/{fieldId}": {
      "put": {
        "tags": [
          "ProjectField"
        ],
        "summary": "Update Project Field",
        "description": "Updates an existing ProjectField with new information.\n\nA ProjectField is a custom field defined within your Workspace.  You can define ProjectFields for any integration purpose that is important to your business.  Each ProjectField has a data type as well as options in how it is handled.  ProjectFields can be edited for each Project within your Workspace. \r\n\r\n### Data Definition\r\n\r\nSee [](https://developer.projectmanager.com/reference/) for the complete data definition.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the Project that contains this ProjectField",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "fieldId",
            "in": "path",
            "description": "The unique identifier of this ProjectField",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The new information for this ProjectField",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateProjectFieldValueDto"
                  }
                ],
                "description": "A model that contains a new value to be set for a ProjectField."
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateProjectFieldValueDto"
                  }
                ],
                "description": "A model that contains a new value to be set for a ProjectField."
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateProjectFieldValueDto"
                  }
                ],
                "description": "A model that contains a new value to be set for a ProjectField."
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateProjectFieldValueDto"
                  }
                ],
                "description": "A model that contains a new value to be set for a ProjectField."
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateProjectFieldValueDto"
                  }
                ],
                "description": "A model that contains a new value to be set for a ProjectField."
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateProjectFieldValueDto"
                  }
                ],
                "description": "A model that contains a new value to be set for a ProjectField."
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateProjectFieldValueDto"
                  }
                ],
                "description": "A model that contains a new value to be set for a ProjectField."
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateProjectFieldValueDto"
                  }
                ],
                "description": "A model that contains a new value to be set for a ProjectField."
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateProjectFieldValueDto"
                  }
                ],
                "description": "A model that contains a new value to be set for a ProjectField."
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateProjectFieldValueDto"
                  }
                ],
                "description": "A model that contains a new value to be set for a ProjectField."
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateProjectFieldValueDto"
                  }
                ],
                "description": "A model that contains a new value to be set for a ProjectField."
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateProjectFieldValueDto"
                  }
                ],
                "description": "A model that contains a new value to be set for a ProjectField."
              }
            },
            "application/xml": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateProjectFieldValueDto"
                  }
                ],
                "description": "A model that contains a new value to be set for a ProjectField."
              }
            },
            "text/plain": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateProjectFieldValueDto"
                  }
                ],
                "description": "A model that contains a new value to be set for a ProjectField."
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateProjectFieldValueDto"
                  }
                ],
                "description": "A model that contains a new value to be set for a ProjectField."
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateProjectFieldValueDto"
                  }
                ],
                "description": "A model that contains a new value to be set for a ProjectField."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/projects/{projectId}/files": {
      "post": {
        "tags": [
          "ProjectFile"
        ],
        "summary": "Upload Project File",
        "description": "Uploads a file to a project folder.\n\nProjectManager allows you to store Files connected to other elements of your Workspace such as a Project, a Task, or Home.  Files are maintained separately based on the location where the file was stored.\n\nWhen you upload a File, please allow a few moments for the File to be processed and verified. ProjectManager may reject File uploads that contain problems such as malware. Once a File has completed the upload the process, you may retrieve it using the DownloadFile API. \r\n\r\n### Data Definition\r\n\r\nSee [FileDto](https://developer.projectmanager.com/reference/filedto) for the complete data definition.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The reference to the project",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/projects/{projectId}/folders/{folderId}/files": {
      "post": {
        "tags": [
          "ProjectFile"
        ],
        "summary": "Upload Project File To Folder",
        "description": "Uploads a file to a project folder.\n\nProjectManager allows you to store Files connected to other elements of your Workspace such as a Project, a Task, or Home.  Files are maintained separately based on the location where the file was stored.\n\nWhen you upload a File, please allow a few moments for the File to be processed and verified. ProjectManager may reject File uploads that contain problems such as malware. Once a File has completed the upload the process, you may retrieve it using the DownloadFile API. \r\n\r\n### Data Definition\r\n\r\nSee [FileDto](https://developer.projectmanager.com/reference/filedto) for the complete data definition.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The reference to the project",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "folderId",
            "in": "path",
            "description": "The reference to the sub folder to put the file into",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/project-folders": {
      "get": {
        "tags": [
          "ProjectFolder"
        ],
        "summary": "Retrieve Project Folders",
        "description": "Retrieves all ProjectFolders defined within your Workspace.\n\nA ProjectFolder is a named storage location that can contain Projects. \r\n\r\n### Data Definition\r\n\r\nSee [ProjectFolderDto](https://developer.projectmanager.com/reference/projectfolderdto) for the complete data definition.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectFolderDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectFolderDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectFolderDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectFolderDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectFolderDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectFolderDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectFolderDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectFolderDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectFolderDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectFolderDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectFolderDtoListAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectFolderDtoListAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectFolderDtoListAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectFolderDtoListAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectFolderDtoListAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectFolderDtoListAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/projects/members": {
      "get": {
        "tags": [
          "ProjectMembers"
        ],
        "summary": "Retrieve New Project Members",
        "description": "Returns a list of membership options for new projects. \r\n\r\n### Data Definition\r\n\r\nSee [ProjectMemberDto](https://developer.projectmanager.com/reference/projectmemberdto) for the complete data definition.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoListAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoListAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoListAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoListAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoListAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoListAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/projects/{projectId}/members": {
      "get": {
        "tags": [
          "ProjectMembers"
        ],
        "summary": "Retrieve Project Members",
        "description": "Returns a list of membership options for existing members. Optionally include users who are not a member yet. \r\n\r\n### Data Definition\r\n\r\nSee [ProjectMemberDto](https://developer.projectmanager.com/reference/projectmemberdto) for the complete data definition.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Reference to the project",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "includeAllUsers",
            "in": "query",
            "description": "Set to true to include all users in the workspace",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoListAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoListAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoListAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoListAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoListAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoListAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/projects/{projectId}/members/{userId}": {
      "get": {
        "tags": [
          "ProjectMembers"
        ],
        "summary": "Retrieve User Project MemberShip",
        "description": "Return the membership of a project for a user. \r\n\r\n### Data Definition\r\n\r\nSee [ProjectMemberDto](https://developer.projectmanager.com/reference/projectmemberdto) for the complete data definition.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Reference of Project",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "Reference of User",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoAstroResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ProjectMembers"
        ],
        "summary": "Create User Project Membership",
        "description": "Creates a membership for a user in a project and assigns the user appropriate permissions \r\n\r\n### Data Definition\r\n\r\nSee [ProjectMemberDto](https://developer.projectmanager.com/reference/projectmemberdto) for the complete data definition.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Reference to Project",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "Reference to User",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The permission to set",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectMemberRoleDto"
                  }
                ],
                "description": "Dto To Describe a ProjectMember Role"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectMemberRoleDto"
                  }
                ],
                "description": "Dto To Describe a ProjectMember Role"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectMemberRoleDto"
                  }
                ],
                "description": "Dto To Describe a ProjectMember Role"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectMemberRoleDto"
                  }
                ],
                "description": "Dto To Describe a ProjectMember Role"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectMemberRoleDto"
                  }
                ],
                "description": "Dto To Describe a ProjectMember Role"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectMemberRoleDto"
                  }
                ],
                "description": "Dto To Describe a ProjectMember Role"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectMemberRoleDto"
                  }
                ],
                "description": "Dto To Describe a ProjectMember Role"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectMemberRoleDto"
                  }
                ],
                "description": "Dto To Describe a ProjectMember Role"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectMemberRoleDto"
                  }
                ],
                "description": "Dto To Describe a ProjectMember Role"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectMemberRoleDto"
                  }
                ],
                "description": "Dto To Describe a ProjectMember Role"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectMemberRoleDto"
                  }
                ],
                "description": "Dto To Describe a ProjectMember Role"
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectMemberRoleDto"
                  }
                ],
                "description": "Dto To Describe a ProjectMember Role"
              }
            },
            "application/xml": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectMemberRoleDto"
                  }
                ],
                "description": "Dto To Describe a ProjectMember Role"
              }
            },
            "text/plain": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectMemberRoleDto"
                  }
                ],
                "description": "Dto To Describe a ProjectMember Role"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectMemberRoleDto"
                  }
                ],
                "description": "Dto To Describe a ProjectMember Role"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectMemberRoleDto"
                  }
                ],
                "description": "Dto To Describe a ProjectMember Role"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoAstroResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProjectMembers"
        ],
        "summary": "Update User Project Membership",
        "description": "Update existing Project Access Control for user for project \r\n\r\n### Data Definition\r\n\r\nSee [ProjectMemberDto](https://developer.projectmanager.com/reference/projectmemberdto) for the complete data definition.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Reference to Project",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "Reference to User",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The permission to update",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectMemberRoleDto"
                  }
                ],
                "description": "Dto To Describe a ProjectMember Role"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectMemberRoleDto"
                  }
                ],
                "description": "Dto To Describe a ProjectMember Role"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectMemberRoleDto"
                  }
                ],
                "description": "Dto To Describe a ProjectMember Role"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectMemberRoleDto"
                  }
                ],
                "description": "Dto To Describe a ProjectMember Role"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectMemberRoleDto"
                  }
                ],
                "description": "Dto To Describe a ProjectMember Role"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectMemberRoleDto"
                  }
                ],
                "description": "Dto To Describe a ProjectMember Role"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectMemberRoleDto"
                  }
                ],
                "description": "Dto To Describe a ProjectMember Role"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectMemberRoleDto"
                  }
                ],
                "description": "Dto To Describe a ProjectMember Role"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectMemberRoleDto"
                  }
                ],
                "description": "Dto To Describe a ProjectMember Role"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectMemberRoleDto"
                  }
                ],
                "description": "Dto To Describe a ProjectMember Role"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectMemberRoleDto"
                  }
                ],
                "description": "Dto To Describe a ProjectMember Role"
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectMemberRoleDto"
                  }
                ],
                "description": "Dto To Describe a ProjectMember Role"
              }
            },
            "application/xml": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectMemberRoleDto"
                  }
                ],
                "description": "Dto To Describe a ProjectMember Role"
              }
            },
            "text/plain": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectMemberRoleDto"
                  }
                ],
                "description": "Dto To Describe a ProjectMember Role"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectMemberRoleDto"
                  }
                ],
                "description": "Dto To Describe a ProjectMember Role"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProjectMemberRoleDto"
                  }
                ],
                "description": "Dto To Describe a ProjectMember Role"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectMemberDtoAstroResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProjectMembers"
        ],
        "summary": "Remove User Project Membership",
        "description": "Deletes Project Member \r\n\r\n### Data Definition\r\n\r\nSee [](https://developer.projectmanager.com/reference/) for the complete data definition.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Reference to Project",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "Reference to User",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/projects/priorities": {
      "get": {
        "tags": [
          "ProjectPriority"
        ],
        "summary": "Retrieve Project Priorities",
        "description": "Retrieves all ProjectPriorities defined within your Workspace.\n\nA ProjectPriority is a named priority level used by your business to determine how to decide which Tasks are the most important.  You can name your ProjectPriority levels anything you like and you can reorganize the order of the ProjectPriority levels at any time.\n\nNote that TaskPriority and ProjectPriority are different classes of priority levels.  Even if they may have similar names, they are different objects and must be tracked separately. \r\n\r\n### Data Definition\r\n\r\nSee [ProjectPriorityDto](https://developer.projectmanager.com/reference/projectprioritydto) for the complete data definition.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectPriorityDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectPriorityDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectPriorityDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectPriorityDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectPriorityDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectPriorityDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectPriorityDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectPriorityDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectPriorityDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectPriorityDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectPriorityDtoListAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectPriorityDtoListAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectPriorityDtoListAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectPriorityDtoListAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectPriorityDtoListAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectPriorityDtoListAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/projects/statuses": {
      "get": {
        "tags": [
          "ProjectStatus"
        ],
        "summary": "Retrieve Project Statuses",
        "description": "Retrieves all ProjectStatuses defined within your Workspace.\n\nA ProjectStatus is a named condition used by your business to categorize the completion level of Tasks and Projects within your Workspace.  You can name your ProjectStatus levels anything you like and you can reorganize the order of the ProjectPriority levels at any time. \r\n\r\n### Data Definition\r\n\r\nSee [ProjectStatusDto](https://developer.projectmanager.com/reference/projectstatusdto) for the complete data definition.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectStatusDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectStatusDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectStatusDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectStatusDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectStatusDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectStatusDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectStatusDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectStatusDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectStatusDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectStatusDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectStatusDtoListAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectStatusDtoListAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectStatusDtoListAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectStatusDtoListAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectStatusDtoListAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectStatusDtoListAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/projects/templates": {
      "get": {
        "tags": [
          "ProjectTemplate"
        ],
        "summary": "Retrieve Project Templates",
        "description": "Retrieves all ProjectTemplates defined in the system.\n\nA ProjectTemplate is a definition of default project related data (eg. Tasks) that can be applied to a new project when it is created.  ProjectTemplates are categorized using the TemplateCategory system. \r\n\r\n### Data Definition\r\n\r\nSee [ProjectTemplateDto](https://developer.projectmanager.com/reference/projecttemplatedto) for the complete data definition.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateDtoListAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateDtoListAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateDtoListAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateDtoListAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateDtoListAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateDtoListAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/projects/templates/categories": {
      "get": {
        "tags": [
          "ProjectTemplate"
        ],
        "summary": "Retrieve Template Categories",
        "description": "Retrieves all ProjectTemplate Categories defined in the system.\n\nA ProjectTemplate is a definition of default project related data (eg. Tasks) that can be applied to a new project when it is created.  ProjectTemplates are categorized using the TemplateCategory system. \r\n\r\n### Data Definition\r\n\r\nSee [ProjectTemplateCategoryDto](https://developer.projectmanager.com/reference/projecttemplatecategorydto) for the complete data definition.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateCategoryDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateCategoryDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateCategoryDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateCategoryDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateCategoryDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateCategoryDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateCategoryDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateCategoryDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateCategoryDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateCategoryDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateCategoryDtoListAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateCategoryDtoListAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateCategoryDtoListAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateCategoryDtoListAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateCategoryDtoListAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateCategoryDtoListAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/resources": {
      "post": {
        "tags": [
          "Resource"
        ],
        "summary": "Create Resource",
        "description": "Create a new Resource within your Workspace.\n\nA Resource represents a person, material, or tool that is used within your Projects. When you attach a Resources to more than one Task, the software will schedule the usage of your Resource so that it is not allocated to more than one Task at the same time. The users in your Workspace are also considered Resources.  To invite a new User to your Workspace, create a new Resource for that user. \r\n\r\n### Data Definition\r\n\r\nSee [ResourceDto](https://developer.projectmanager.com/reference/resourcedto) for the complete data definition.",
        "requestBody": {
          "description": "The details for the new Resource to create",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ResourceCreateDto"
                  }
                ],
                "description": "A Resource represents a person, material, or tool that is used within your Projects.\r\nWhen you attach a Resources to more than one Task, the software will schedule the usage\r\nof your Resource so that it is not allocated to more than one Task at the same time.\r\nThe users in your Workspace are also considered Resources.  To invite a new User to your\r\nWorkspace, create a new Resource for that user."
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ResourceCreateDto"
                  }
                ],
                "description": "A Resource represents a person, material, or tool that is used within your Projects.\r\nWhen you attach a Resources to more than one Task, the software will schedule the usage\r\nof your Resource so that it is not allocated to more than one Task at the same time.\r\nThe users in your Workspace are also considered Resources.  To invite a new User to your\r\nWorkspace, create a new Resource for that user."
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ResourceCreateDto"
                  }
                ],
                "description": "A Resource represents a person, material, or tool that is used within your Projects.\r\nWhen you attach a Resources to more than one Task, the software will schedule the usage\r\nof your Resource so that it is not allocated to more than one Task at the same time.\r\nThe users in your Workspace are also considered Resources.  To invite a new User to your\r\nWorkspace, create a new Resource for that user."
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ResourceCreateDto"
                  }
                ],
                "description": "A Resource represents a person, material, or tool that is used within your Projects.\r\nWhen you attach a Resources to more than one Task, the software will schedule the usage\r\nof your Resource so that it is not allocated to more than one Task at the same time.\r\nThe users in your Workspace are also considered Resources.  To invite a new User to your\r\nWorkspace, create a new Resource for that user."
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ResourceCreateDto"
                  }
                ],
                "description": "A Resource represents a person, material, or tool that is used within your Projects.\r\nWhen you attach a Resources to more than one Task, the software will schedule the usage\r\nof your Resource so that it is not allocated to more than one Task at the same time.\r\nThe users in your Workspace are also considered Resources.  To invite a new User to your\r\nWorkspace, create a new Resource for that user."
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ResourceCreateDto"
                  }
                ],
                "description": "A Resource represents a person, material, or tool that is used within your Projects.\r\nWhen you attach a Resources to more than one Task, the software will schedule the usage\r\nof your Resource so that it is not allocated to more than one Task at the same time.\r\nThe users in your Workspace are also considered Resources.  To invite a new User to your\r\nWorkspace, create a new Resource for that user."
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ResourceCreateDto"
                  }
                ],
                "description": "A Resource represents a person, material, or tool that is used within your Projects.\r\nWhen you attach a Resources to more than one Task, the software will schedule the usage\r\nof your Resource so that it is not allocated to more than one Task at the same time.\r\nThe users in your Workspace are also considered Resources.  To invite a new User to your\r\nWorkspace, create a new Resource for that user."
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ResourceCreateDto"
                  }
                ],
                "description": "A Resource represents a person, material, or tool that is used within your Projects.\r\nWhen you attach a Resources to more than one Task, the software will schedule the usage\r\nof your Resource so that it is not allocated to more than one Task at the same time.\r\nThe users in your Workspace are also considered Resources.  To invite a new User to your\r\nWorkspace, create a new Resource for that user."
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ResourceCreateDto"
                  }
                ],
                "description": "A Resource represents a person, material, or tool that is used within your Projects.\r\nWhen you attach a Resources to more than one Task, the software will schedule the usage\r\nof your Resource so that it is not allocated to more than one Task at the same time.\r\nThe users in your Workspace are also considered Resources.  To invite a new User to your\r\nWorkspace, create a new Resource for that user."
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ResourceCreateDto"
                  }
                ],
                "description": "A Resource represents a person, material, or tool that is used within your Projects.\r\nWhen you attach a Resources to more than one Task, the software will schedule the usage\r\nof your Resource so that it is not allocated to more than one Task at the same time.\r\nThe users in your Workspace are also considered Resources.  To invite a new User to your\r\nWorkspace, create a new Resource for that user."
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ResourceCreateDto"
                  }
                ],
                "description": "A Resource represents a person, material, or tool that is used within your Projects.\r\nWhen you attach a Resources to more than one Task, the software will schedule the usage\r\nof your Resource so that it is not allocated to more than one Task at the same time.\r\nThe users in your Workspace are also considered Resources.  To invite a new User to your\r\nWorkspace, create a new Resource for that user."
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ResourceCreateDto"
                  }
                ],
                "description": "A Resource represents a person, material, or tool that is used within your Projects.\r\nWhen you attach a Resources to more than one Task, the software will schedule the usage\r\nof your Resource so that it is not allocated to more than one Task at the same time.\r\nThe users in your Workspace are also considered Resources.  To invite a new User to your\r\nWorkspace, create a new Resource for that user."
              }
            },
            "application/xml": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ResourceCreateDto"
                  }
                ],
                "description": "A Resource represents a person, material, or tool that is used within your Projects.\r\nWhen you attach a Resources to more than one Task, the software will schedule the usage\r\nof your Resource so that it is not allocated to more than one Task at the same time.\r\nThe users in your Workspace are also considered Resources.  To invite a new User to your\r\nWorkspace, create a new Resource for that user."
              }
            },
            "text/plain": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ResourceCreateDto"
                  }
                ],
                "description": "A Resource represents a person, material, or tool that is used within your Projects.\r\nWhen you attach a Resources to more than one Task, the software will schedule the usage\r\nof your Resource so that it is not allocated to more than one Task at the same time.\r\nThe users in your Workspace are also considered Resources.  To invite a new User to your\r\nWorkspace, create a new Resource for that user."
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ResourceCreateDto"
                  }
                ],
                "description": "A Resource represents a person, material, or tool that is used within your Projects.\r\nWhen you attach a Resources to more than one Task, the software will schedule the usage\r\nof your Resource so that it is not allocated to more than one Task at the same time.\r\nThe users in your Workspace are also considered Resources.  To invite a new User to your\r\nWorkspace, create a new Resource for that user."
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ResourceCreateDto"
                  }
                ],
                "description": "A Resource represents a person, material, or tool that is used within your Projects.\r\nWhen you attach a Resources to more than one Task, the software will schedule the usage\r\nof your Resource so that it is not allocated to more than one Task at the same time.\r\nThe users in your Workspace are also considered Resources.  To invite a new User to your\r\nWorkspace, create a new Resource for that user."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoAstroResult"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Resource"
        ],
        "summary": "Query Resources",
        "description": "Retrieve a list of Resources that match an [OData formatted query](https://www.odata.org/).\n\nA Resource represents a person, material, or tool that is used within your Projects. When you attach a Resources to more than one Task, the software will schedule the usage of your Resource so that it is not allocated to more than one Task at the same time. The users in your Workspace are also considered Resources.  To invite a new User to your Workspace, create a new Resource for that user. \r\n\r\n### Data Definition\r\n\r\nSee [ResourceDto](https://developer.projectmanager.com/reference/resourcedto) for the complete data definition.",
        "parameters": [
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to return",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the given number of records and then returns $top records",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter the expression according to oData queries",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specify which properties should be returned",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order collection by this field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Include related data in the response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoListAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoListAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoListAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoListAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoListAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoListAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/resources/{resourceId}": {
      "put": {
        "tags": [
          "Resource"
        ],
        "summary": "Update Resource",
        "description": "Updates an existing Resource based on information you provide.\n\nA Resource represents a person, material, or tool that is used within your Projects. When you attach a Resources to more than one Task, the software will schedule the usage of your Resource so that it is not allocated to more than one Task at the same time. The users in your Workspace are also considered Resources.  To invite a new User to your Workspace, create a new Resource for that user. \r\n\r\n### Data Definition\r\n\r\nSee [ResourceDto](https://developer.projectmanager.com/reference/resourcedto) for the complete data definition.",
        "parameters": [
          {
            "name": "resourceId",
            "in": "path",
            "description": "The id of the resource",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The information to update the resource",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ResourceUpdateDto"
                  }
                ],
                "description": "A Resource represents a person, material, or tool that is used within your Projects.\r\nWhen you attach a Resources to more than one Task, the software will schedule the usage\r\nof your Resource so that it is not allocated to more than one Task at the same time.\r\nThe users in your Workspace are also considered Resources.  To invite a new User to your\r\nWorkspace, create a new Resource for that user."
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ResourceUpdateDto"
                  }
                ],
                "description": "A Resource represents a person, material, or tool that is used within your Projects.\r\nWhen you attach a Resources to more than one Task, the software will schedule the usage\r\nof your Resource so that it is not allocated to more than one Task at the same time.\r\nThe users in your Workspace are also considered Resources.  To invite a new User to your\r\nWorkspace, create a new Resource for that user."
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ResourceUpdateDto"
                  }
                ],
                "description": "A Resource represents a person, material, or tool that is used within your Projects.\r\nWhen you attach a Resources to more than one Task, the software will schedule the usage\r\nof your Resource so that it is not allocated to more than one Task at the same time.\r\nThe users in your Workspace are also considered Resources.  To invite a new User to your\r\nWorkspace, create a new Resource for that user."
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ResourceUpdateDto"
                  }
                ],
                "description": "A Resource represents a person, material, or tool that is used within your Projects.\r\nWhen you attach a Resources to more than one Task, the software will schedule the usage\r\nof your Resource so that it is not allocated to more than one Task at the same time.\r\nThe users in your Workspace are also considered Resources.  To invite a new User to your\r\nWorkspace, create a new Resource for that user."
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ResourceUpdateDto"
                  }
                ],
                "description": "A Resource represents a person, material, or tool that is used within your Projects.\r\nWhen you attach a Resources to more than one Task, the software will schedule the usage\r\nof your Resource so that it is not allocated to more than one Task at the same time.\r\nThe users in your Workspace are also considered Resources.  To invite a new User to your\r\nWorkspace, create a new Resource for that user."
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ResourceUpdateDto"
                  }
                ],
                "description": "A Resource represents a person, material, or tool that is used within your Projects.\r\nWhen you attach a Resources to more than one Task, the software will schedule the usage\r\nof your Resource so that it is not allocated to more than one Task at the same time.\r\nThe users in your Workspace are also considered Resources.  To invite a new User to your\r\nWorkspace, create a new Resource for that user."
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ResourceUpdateDto"
                  }
                ],
                "description": "A Resource represents a person, material, or tool that is used within your Projects.\r\nWhen you attach a Resources to more than one Task, the software will schedule the usage\r\nof your Resource so that it is not allocated to more than one Task at the same time.\r\nThe users in your Workspace are also considered Resources.  To invite a new User to your\r\nWorkspace, create a new Resource for that user."
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ResourceUpdateDto"
                  }
                ],
                "description": "A Resource represents a person, material, or tool that is used within your Projects.\r\nWhen you attach a Resources to more than one Task, the software will schedule the usage\r\nof your Resource so that it is not allocated to more than one Task at the same time.\r\nThe users in your Workspace are also considered Resources.  To invite a new User to your\r\nWorkspace, create a new Resource for that user."
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ResourceUpdateDto"
                  }
                ],
                "description": "A Resource represents a person, material, or tool that is used within your Projects.\r\nWhen you attach a Resources to more than one Task, the software will schedule the usage\r\nof your Resource so that it is not allocated to more than one Task at the same time.\r\nThe users in your Workspace are also considered Resources.  To invite a new User to your\r\nWorkspace, create a new Resource for that user."
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ResourceUpdateDto"
                  }
                ],
                "description": "A Resource represents a person, material, or tool that is used within your Projects.\r\nWhen you attach a Resources to more than one Task, the software will schedule the usage\r\nof your Resource so that it is not allocated to more than one Task at the same time.\r\nThe users in your Workspace are also considered Resources.  To invite a new User to your\r\nWorkspace, create a new Resource for that user."
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ResourceUpdateDto"
                  }
                ],
                "description": "A Resource represents a person, material, or tool that is used within your Projects.\r\nWhen you attach a Resources to more than one Task, the software will schedule the usage\r\nof your Resource so that it is not allocated to more than one Task at the same time.\r\nThe users in your Workspace are also considered Resources.  To invite a new User to your\r\nWorkspace, create a new Resource for that user."
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ResourceUpdateDto"
                  }
                ],
                "description": "A Resource represents a person, material, or tool that is used within your Projects.\r\nWhen you attach a Resources to more than one Task, the software will schedule the usage\r\nof your Resource so that it is not allocated to more than one Task at the same time.\r\nThe users in your Workspace are also considered Resources.  To invite a new User to your\r\nWorkspace, create a new Resource for that user."
              }
            },
            "application/xml": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ResourceUpdateDto"
                  }
                ],
                "description": "A Resource represents a person, material, or tool that is used within your Projects.\r\nWhen you attach a Resources to more than one Task, the software will schedule the usage\r\nof your Resource so that it is not allocated to more than one Task at the same time.\r\nThe users in your Workspace are also considered Resources.  To invite a new User to your\r\nWorkspace, create a new Resource for that user."
              }
            },
            "text/plain": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ResourceUpdateDto"
                  }
                ],
                "description": "A Resource represents a person, material, or tool that is used within your Projects.\r\nWhen you attach a Resources to more than one Task, the software will schedule the usage\r\nof your Resource so that it is not allocated to more than one Task at the same time.\r\nThe users in your Workspace are also considered Resources.  To invite a new User to your\r\nWorkspace, create a new Resource for that user."
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ResourceUpdateDto"
                  }
                ],
                "description": "A Resource represents a person, material, or tool that is used within your Projects.\r\nWhen you attach a Resources to more than one Task, the software will schedule the usage\r\nof your Resource so that it is not allocated to more than one Task at the same time.\r\nThe users in your Workspace are also considered Resources.  To invite a new User to your\r\nWorkspace, create a new Resource for that user."
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ResourceUpdateDto"
                  }
                ],
                "description": "A Resource represents a person, material, or tool that is used within your Projects.\r\nWhen you attach a Resources to more than one Task, the software will schedule the usage\r\nof your Resource so that it is not allocated to more than one Task at the same time.\r\nThe users in your Workspace are also considered Resources.  To invite a new User to your\r\nWorkspace, create a new Resource for that user."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoAstroResult"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Resource"
        ],
        "summary": "Retrieve Resource",
        "description": "Retrieve the Resource matching the specified unique ID.\n\nA Resource represents a person, material, or tool that is used within your Projects. When you attach a Resources to more than one Task, the software will schedule the usage of your Resource so that it is not allocated to more than one Task at the same time. The users in your Workspace are also considered Resources.  To invite a new User to your Workspace, create a new Resource for that user. \r\n\r\n### Data Definition\r\n\r\nSee [ResourceDto](https://developer.projectmanager.com/reference/resourcedto) for the complete data definition.",
        "parameters": [
          {
            "name": "resourceId",
            "in": "path",
            "description": "The id of the Resource",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDtoAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/resources/skills": {
      "get": {
        "tags": [
          "ResourceSkill"
        ],
        "summary": "Retrieve Resource Skills",
        "description": "Retrieves all ResourceSkills defined within your Workspace.\n\nA ResourceSkill is a capability possessed by a Resource that can be used to distinguish different classes of Resources suitable for use by a Task.  You can specify that a Task requires a Resource with a particular set of ResourceSkills and then allocate Resources based on whether or not they have the suitable ResourceSkills. \r\n\r\n### Data Definition\r\n\r\nSee [ResourceSkillDto](https://developer.projectmanager.com/reference/resourceskilldto) for the complete data definition.",
        "parameters": [
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to return",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the given number of records and then returns $top records",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter the expression according to oData queries",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specify which properties should be returned",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order collection by this field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Include related data in the response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceSkillDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceSkillDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceSkillDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceSkillDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceSkillDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceSkillDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceSkillDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceSkillDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceSkillDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceSkillDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceSkillDtoListAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceSkillDtoListAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceSkillDtoListAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceSkillDtoListAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceSkillDtoListAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceSkillDtoListAstroResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ResourceSkill"
        ],
        "summary": "Create Resource Skill",
        "description": "Create a Resource Skill. \r\n\r\n### Data Definition\r\n\r\nSee [ResourceSkillDto](https://developer.projectmanager.com/reference/resourceskilldto) for the complete data definition.",
        "requestBody": {
          "description": "The name of the skill to create.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateResourceSkillDto"
                  }
                ],
                "description": "This is a skill that can be allocated to a resource."
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateResourceSkillDto"
                  }
                ],
                "description": "This is a skill that can be allocated to a resource."
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateResourceSkillDto"
                  }
                ],
                "description": "This is a skill that can be allocated to a resource."
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateResourceSkillDto"
                  }
                ],
                "description": "This is a skill that can be allocated to a resource."
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateResourceSkillDto"
                  }
                ],
                "description": "This is a skill that can be allocated to a resource."
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateResourceSkillDto"
                  }
                ],
                "description": "This is a skill that can be allocated to a resource."
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateResourceSkillDto"
                  }
                ],
                "description": "This is a skill that can be allocated to a resource."
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateResourceSkillDto"
                  }
                ],
                "description": "This is a skill that can be allocated to a resource."
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateResourceSkillDto"
                  }
                ],
                "description": "This is a skill that can be allocated to a resource."
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateResourceSkillDto"
                  }
                ],
                "description": "This is a skill that can be allocated to a resource."
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateResourceSkillDto"
                  }
                ],
                "description": "This is a skill that can be allocated to a resource."
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateResourceSkillDto"
                  }
                ],
                "description": "This is a skill that can be allocated to a resource."
              }
            },
            "application/xml": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateResourceSkillDto"
                  }
                ],
                "description": "This is a skill that can be allocated to a resource."
              }
            },
            "text/plain": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateResourceSkillDto"
                  }
                ],
                "description": "This is a skill that can be allocated to a resource."
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateResourceSkillDto"
                  }
                ],
                "description": "This is a skill that can be allocated to a resource."
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateResourceSkillDto"
                  }
                ],
                "description": "This is a skill that can be allocated to a resource."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceSkillDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceSkillDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceSkillDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceSkillDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceSkillDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceSkillDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceSkillDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceSkillDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceSkillDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceSkillDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceSkillDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceSkillDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceSkillDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceSkillDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceSkillDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceSkillDtoAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/resources/skills/{skillId}": {
      "put": {
        "tags": [
          "ResourceSkill"
        ],
        "summary": "Update Resource Skill",
        "description": "Update a Resource Skill. \r\n\r\n### Data Definition\r\n\r\nSee [ResourceSkillDto](https://developer.projectmanager.com/reference/resourceskilldto) for the complete data definition.",
        "parameters": [
          {
            "name": "skillId",
            "in": "path",
            "description": "The id of the skill to update.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The data of the skill to update.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateResourceSkillDto"
                  }
                ],
                "description": "This is a skill that can be allocated to a resource."
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateResourceSkillDto"
                  }
                ],
                "description": "This is a skill that can be allocated to a resource."
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateResourceSkillDto"
                  }
                ],
                "description": "This is a skill that can be allocated to a resource."
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateResourceSkillDto"
                  }
                ],
                "description": "This is a skill that can be allocated to a resource."
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateResourceSkillDto"
                  }
                ],
                "description": "This is a skill that can be allocated to a resource."
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateResourceSkillDto"
                  }
                ],
                "description": "This is a skill that can be allocated to a resource."
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateResourceSkillDto"
                  }
                ],
                "description": "This is a skill that can be allocated to a resource."
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateResourceSkillDto"
                  }
                ],
                "description": "This is a skill that can be allocated to a resource."
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateResourceSkillDto"
                  }
                ],
                "description": "This is a skill that can be allocated to a resource."
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateResourceSkillDto"
                  }
                ],
                "description": "This is a skill that can be allocated to a resource."
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateResourceSkillDto"
                  }
                ],
                "description": "This is a skill that can be allocated to a resource."
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateResourceSkillDto"
                  }
                ],
                "description": "This is a skill that can be allocated to a resource."
              }
            },
            "application/xml": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateResourceSkillDto"
                  }
                ],
                "description": "This is a skill that can be allocated to a resource."
              }
            },
            "text/plain": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateResourceSkillDto"
                  }
                ],
                "description": "This is a skill that can be allocated to a resource."
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateResourceSkillDto"
                  }
                ],
                "description": "This is a skill that can be allocated to a resource."
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateResourceSkillDto"
                  }
                ],
                "description": "This is a skill that can be allocated to a resource."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceSkillDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceSkillDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceSkillDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceSkillDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceSkillDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceSkillDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceSkillDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceSkillDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceSkillDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceSkillDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceSkillDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceSkillDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceSkillDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceSkillDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceSkillDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceSkillDtoAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/resources/skills/{resourceSkillId}": {
      "delete": {
        "tags": [
          "ResourceSkill"
        ],
        "summary": "Delete Resource Skill",
        "description": "The endpoint is used to delete a resource skill. Users assigned to this skill will no longer be assigned thereafter. \r\n\r\n### Data Definition\r\n\r\nSee [](https://developer.projectmanager.com/reference/) for the complete data definition.",
        "parameters": [
          {
            "name": "resourceSkillId",
            "in": "path",
            "description": "The Id of the skill to be removed.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/resources/teams": {
      "get": {
        "tags": [
          "ResourceTeam"
        ],
        "summary": "Retrieve Resource Teams",
        "description": "Retrieves all ResourceTeams defined within your Workspace that match an [OData formatted query](https://www.odata.org/).\n\nA ResourceTeam is a grouping of Resources that allows you to keep track of assignments in a manner consistent with your business needs.  You can assign Resources to be members of zero, one, or many ResourceTeams. \r\n\r\n### Data Definition\r\n\r\nSee [ResourceTeamDto](https://developer.projectmanager.com/reference/resourceteamdto) for the complete data definition.",
        "parameters": [
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to return",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the given number of records and then returns $top records",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter the expression according to oData queries",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specify which properties should be returned",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order collection by this field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Include related data in the response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTeamDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTeamDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTeamDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTeamDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTeamDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTeamDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTeamDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTeamDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTeamDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTeamDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTeamDtoListAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTeamDtoListAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTeamDtoListAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTeamDtoListAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTeamDtoListAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTeamDtoListAstroResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ResourceTeam"
        ],
        "summary": "Create Resource Team",
        "description": "Create a Resource Team. \r\n\r\n### Data Definition\r\n\r\nSee [ResourceTeamDto](https://developer.projectmanager.com/reference/resourceteamdto) for the complete data definition.",
        "requestBody": {
          "description": "The name of the team to create.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateResourceTeamDto"
                  }
                ],
                "description": "A resource can be allocated a team."
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateResourceTeamDto"
                  }
                ],
                "description": "A resource can be allocated a team."
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateResourceTeamDto"
                  }
                ],
                "description": "A resource can be allocated a team."
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateResourceTeamDto"
                  }
                ],
                "description": "A resource can be allocated a team."
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateResourceTeamDto"
                  }
                ],
                "description": "A resource can be allocated a team."
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateResourceTeamDto"
                  }
                ],
                "description": "A resource can be allocated a team."
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateResourceTeamDto"
                  }
                ],
                "description": "A resource can be allocated a team."
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateResourceTeamDto"
                  }
                ],
                "description": "A resource can be allocated a team."
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateResourceTeamDto"
                  }
                ],
                "description": "A resource can be allocated a team."
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateResourceTeamDto"
                  }
                ],
                "description": "A resource can be allocated a team."
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateResourceTeamDto"
                  }
                ],
                "description": "A resource can be allocated a team."
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateResourceTeamDto"
                  }
                ],
                "description": "A resource can be allocated a team."
              }
            },
            "application/xml": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateResourceTeamDto"
                  }
                ],
                "description": "A resource can be allocated a team."
              }
            },
            "text/plain": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateResourceTeamDto"
                  }
                ],
                "description": "A resource can be allocated a team."
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateResourceTeamDto"
                  }
                ],
                "description": "A resource can be allocated a team."
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateResourceTeamDto"
                  }
                ],
                "description": "A resource can be allocated a team."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTeamDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTeamDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTeamDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTeamDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTeamDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTeamDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTeamDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTeamDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTeamDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTeamDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTeamDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTeamDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTeamDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTeamDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTeamDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTeamDtoAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/resources/teams/{resourceTeamId}": {
      "delete": {
        "tags": [
          "ResourceTeam"
        ],
        "summary": "Delete Resource Team",
        "description": "The endpoint is used to delete a resource team. Users assigned to this team will no longer be assigned thereafter. \r\n\r\n### Data Definition\r\n\r\nSee [](https://developer.projectmanager.com/reference/) for the complete data definition.",
        "parameters": [
          {
            "name": "resourceTeamId",
            "in": "path",
            "description": "The Id of the team to be removed.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/resources/teams/{teamresourceId}": {
      "put": {
        "tags": [
          "ResourceTeam"
        ],
        "summary": "Update Resource Team",
        "description": "Update a Resource Team. \r\n\r\n### Data Definition\r\n\r\nSee [ResourceTeamDto](https://developer.projectmanager.com/reference/resourceteamdto) for the complete data definition.",
        "parameters": [
          {
            "name": "teamresourceId",
            "in": "path",
            "description": "The id of the resource team",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The name of the team to Update.",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateResourceTeamDto"
                  }
                ],
                "description": "A resource can update a team."
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateResourceTeamDto"
                  }
                ],
                "description": "A resource can update a team."
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateResourceTeamDto"
                  }
                ],
                "description": "A resource can update a team."
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateResourceTeamDto"
                  }
                ],
                "description": "A resource can update a team."
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateResourceTeamDto"
                  }
                ],
                "description": "A resource can update a team."
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateResourceTeamDto"
                  }
                ],
                "description": "A resource can update a team."
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateResourceTeamDto"
                  }
                ],
                "description": "A resource can update a team."
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateResourceTeamDto"
                  }
                ],
                "description": "A resource can update a team."
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateResourceTeamDto"
                  }
                ],
                "description": "A resource can update a team."
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateResourceTeamDto"
                  }
                ],
                "description": "A resource can update a team."
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateResourceTeamDto"
                  }
                ],
                "description": "A resource can update a team."
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateResourceTeamDto"
                  }
                ],
                "description": "A resource can update a team."
              }
            },
            "application/xml": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateResourceTeamDto"
                  }
                ],
                "description": "A resource can update a team."
              }
            },
            "text/plain": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateResourceTeamDto"
                  }
                ],
                "description": "A resource can update a team."
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateResourceTeamDto"
                  }
                ],
                "description": "A resource can update a team."
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateResourceTeamDto"
                  }
                ],
                "description": "A resource can update a team."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTeamDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTeamDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTeamDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTeamDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTeamDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTeamDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTeamDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTeamDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTeamDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTeamDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTeamDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTeamDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTeamDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTeamDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTeamDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTeamDtoAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/tags": {
      "get": {
        "tags": [
          "Tag"
        ],
        "summary": "Query Tags",
        "description": "Retrieve a list of Tags that match an [OData formatted query](https://www.odata.org/).\n\nA Tag is a named categorization you can use to distinguish objects from each other. Tags each have a unique identifier, a name, and a color. \r\n\r\n### Data Definition\r\n\r\nSee [TagDto](https://developer.projectmanager.com/reference/tagdto) for the complete data definition.",
        "parameters": [
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to return",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the given number of records and then returns $top records",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter the expression according to oData queries",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specify which properties should be returned",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order collection by this field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Include related data in the response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TagDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TagDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/TagDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TagDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TagDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/TagDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TagDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TagDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/TagDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TagDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TagDtoListAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagDtoListAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TagDtoListAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TagDtoListAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/TagDtoListAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagDtoListAstroResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tag"
        ],
        "summary": "Create Tag",
        "description": "Creates a new Tag based on information you provide.\n\nA Tag is a named categorization you can use to distinguish objects from each other. Tags each have a unique identifier, a name, and a color. \r\n\r\n### Data Definition\r\n\r\nSee [TagDto](https://developer.projectmanager.com/reference/tagdto) for the complete data definition.",
        "requestBody": {
          "description": "The information for the new Tag to create",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TagCreateDto"
                  }
                ],
                "description": "A Tag is a named categorization you can use to distinguish objects from each other.\r\nTags each have a unique identifier, a name, and a color."
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TagCreateDto"
                  }
                ],
                "description": "A Tag is a named categorization you can use to distinguish objects from each other.\r\nTags each have a unique identifier, a name, and a color."
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TagCreateDto"
                  }
                ],
                "description": "A Tag is a named categorization you can use to distinguish objects from each other.\r\nTags each have a unique identifier, a name, and a color."
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TagCreateDto"
                  }
                ],
                "description": "A Tag is a named categorization you can use to distinguish objects from each other.\r\nTags each have a unique identifier, a name, and a color."
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TagCreateDto"
                  }
                ],
                "description": "A Tag is a named categorization you can use to distinguish objects from each other.\r\nTags each have a unique identifier, a name, and a color."
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TagCreateDto"
                  }
                ],
                "description": "A Tag is a named categorization you can use to distinguish objects from each other.\r\nTags each have a unique identifier, a name, and a color."
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TagCreateDto"
                  }
                ],
                "description": "A Tag is a named categorization you can use to distinguish objects from each other.\r\nTags each have a unique identifier, a name, and a color."
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TagCreateDto"
                  }
                ],
                "description": "A Tag is a named categorization you can use to distinguish objects from each other.\r\nTags each have a unique identifier, a name, and a color."
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TagCreateDto"
                  }
                ],
                "description": "A Tag is a named categorization you can use to distinguish objects from each other.\r\nTags each have a unique identifier, a name, and a color."
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TagCreateDto"
                  }
                ],
                "description": "A Tag is a named categorization you can use to distinguish objects from each other.\r\nTags each have a unique identifier, a name, and a color."
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TagCreateDto"
                  }
                ],
                "description": "A Tag is a named categorization you can use to distinguish objects from each other.\r\nTags each have a unique identifier, a name, and a color."
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TagCreateDto"
                  }
                ],
                "description": "A Tag is a named categorization you can use to distinguish objects from each other.\r\nTags each have a unique identifier, a name, and a color."
              }
            },
            "application/xml": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TagCreateDto"
                  }
                ],
                "description": "A Tag is a named categorization you can use to distinguish objects from each other.\r\nTags each have a unique identifier, a name, and a color."
              }
            },
            "text/plain": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TagCreateDto"
                  }
                ],
                "description": "A Tag is a named categorization you can use to distinguish objects from each other.\r\nTags each have a unique identifier, a name, and a color."
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TagCreateDto"
                  }
                ],
                "description": "A Tag is a named categorization you can use to distinguish objects from each other.\r\nTags each have a unique identifier, a name, and a color."
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TagCreateDto"
                  }
                ],
                "description": "A Tag is a named categorization you can use to distinguish objects from each other.\r\nTags each have a unique identifier, a name, and a color."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TagDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TagDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/TagDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TagDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TagDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/TagDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TagDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TagDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/TagDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TagDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TagDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TagDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TagDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/TagDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagDtoAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/tags/{tagId}": {
      "put": {
        "tags": [
          "Tag"
        ],
        "summary": "Update Tag",
        "description": "Updates a new Tag based on information you provide.\n\nA Tag is a named categorization you can use to distinguish objects from each other. Tags each have a unique identifier, a name, and a color. \r\n\r\n### Data Definition\r\n\r\nSee [TagDto](https://developer.projectmanager.com/reference/tagdto) for the complete data definition.",
        "parameters": [
          {
            "name": "tagId",
            "in": "path",
            "description": "The id of the tag",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The information to update the tag",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TagUpdateDto"
                  }
                ],
                "description": "A Tag is a named categorization you can use to distinguish objects from each other.\r\nTags each have a unique identifier, a name, and a color."
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TagUpdateDto"
                  }
                ],
                "description": "A Tag is a named categorization you can use to distinguish objects from each other.\r\nTags each have a unique identifier, a name, and a color."
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TagUpdateDto"
                  }
                ],
                "description": "A Tag is a named categorization you can use to distinguish objects from each other.\r\nTags each have a unique identifier, a name, and a color."
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TagUpdateDto"
                  }
                ],
                "description": "A Tag is a named categorization you can use to distinguish objects from each other.\r\nTags each have a unique identifier, a name, and a color."
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TagUpdateDto"
                  }
                ],
                "description": "A Tag is a named categorization you can use to distinguish objects from each other.\r\nTags each have a unique identifier, a name, and a color."
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TagUpdateDto"
                  }
                ],
                "description": "A Tag is a named categorization you can use to distinguish objects from each other.\r\nTags each have a unique identifier, a name, and a color."
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TagUpdateDto"
                  }
                ],
                "description": "A Tag is a named categorization you can use to distinguish objects from each other.\r\nTags each have a unique identifier, a name, and a color."
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TagUpdateDto"
                  }
                ],
                "description": "A Tag is a named categorization you can use to distinguish objects from each other.\r\nTags each have a unique identifier, a name, and a color."
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TagUpdateDto"
                  }
                ],
                "description": "A Tag is a named categorization you can use to distinguish objects from each other.\r\nTags each have a unique identifier, a name, and a color."
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TagUpdateDto"
                  }
                ],
                "description": "A Tag is a named categorization you can use to distinguish objects from each other.\r\nTags each have a unique identifier, a name, and a color."
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TagUpdateDto"
                  }
                ],
                "description": "A Tag is a named categorization you can use to distinguish objects from each other.\r\nTags each have a unique identifier, a name, and a color."
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TagUpdateDto"
                  }
                ],
                "description": "A Tag is a named categorization you can use to distinguish objects from each other.\r\nTags each have a unique identifier, a name, and a color."
              }
            },
            "application/xml": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TagUpdateDto"
                  }
                ],
                "description": "A Tag is a named categorization you can use to distinguish objects from each other.\r\nTags each have a unique identifier, a name, and a color."
              }
            },
            "text/plain": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TagUpdateDto"
                  }
                ],
                "description": "A Tag is a named categorization you can use to distinguish objects from each other.\r\nTags each have a unique identifier, a name, and a color."
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TagUpdateDto"
                  }
                ],
                "description": "A Tag is a named categorization you can use to distinguish objects from each other.\r\nTags each have a unique identifier, a name, and a color."
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TagUpdateDto"
                  }
                ],
                "description": "A Tag is a named categorization you can use to distinguish objects from each other.\r\nTags each have a unique identifier, a name, and a color."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TagDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TagDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/TagDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TagDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TagDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/TagDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TagDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TagDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/TagDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TagDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TagDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TagDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TagDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/TagDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagDtoAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/tasks": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "Query Tasks",
        "description": "Retrieve a list of Tasks that match an [OData formatted query](https://www.odata.org/).\n\nA Task is an individual element of work that must be performed to complete a Project.  A Task can have one or more Resources assigned to it.  Tasks can be linked to other Tasks to indicate whether they have a dependency or a connection. \r\n\r\n### Data Definition\r\n\r\nSee [TaskDto](https://developer.projectmanager.com/reference/taskdto) for the complete data definition.",
        "parameters": [
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to return",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the given number of records and then returns $top records",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter the expression according to oData queries",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specify which properties should be returned",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order collection by this field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Include related data in the response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDtoListAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDtoListAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDtoListAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDtoListAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDtoListAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDtoListAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/tasks/{taskId}": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "Retrieve Task",
        "description": "Retrieve a Task by its unique identifier or by its short ID.  A Task has both a unique identifier, which is a GUID, and a short ID, which is a small text label that is unique only within your Workspace.\n\nA Task is an individual element of work that must be performed to complete a Project.  A Task can have one or more Resources assigned to it.  Tasks can be linked to other Tasks to indicate whether they have a dependency or a connection. \r\n\r\n### Data Definition\r\n\r\nSee [TaskDetailsDto](https://developer.projectmanager.com/reference/taskdetailsdto) for the complete data definition.",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "The unique identifier or short ID of the Task to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDetailsDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDetailsDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDetailsDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDetailsDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDetailsDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDetailsDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDetailsDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDetailsDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDetailsDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDetailsDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDetailsDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDetailsDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDetailsDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDetailsDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDetailsDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDetailsDtoAstroResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Task"
        ],
        "summary": "Update Task",
        "description": "Update an existing Task and replace the values of fields specified.\n\nA Task is an individual element of work that must be performed to complete a Project.  A Task can have one or more Resources assigned to it.  Tasks can be linked to other Tasks to indicate whether they have a dependency or a connection.\n\nMultiple users can be working on data at the same time.  When you call an API to update an object, this call is converted into a Changeset that is then applied sequentially.  You can use RetrieveChangeset to see the status of an individual Changeset.\n\nKnown Issues:  This API returns an error if your Update call includes too many changes in a single API call.  Please restrict usage to one change per API request.  This API will be deprecated and replaced with an improved API call in a future release. \r\n\r\n### Data Definition\r\n\r\nSee [ChangeSetStatusDto](https://developer.projectmanager.com/reference/changesetstatusdto) for the complete data definition.",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "The unique identifier of the Task to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "All non-null fields in this object will replace existing data in the Task",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskUpdateDto"
                  }
                ],
                "description": "A Task is an individual element of work that must be performed to complete a Project.  A\r\nTask can have one or more Resources assigned to it.  Tasks can be linked to other Tasks to\r\nindicate whether they have a dependency or a connection."
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskUpdateDto"
                  }
                ],
                "description": "A Task is an individual element of work that must be performed to complete a Project.  A\r\nTask can have one or more Resources assigned to it.  Tasks can be linked to other Tasks to\r\nindicate whether they have a dependency or a connection."
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskUpdateDto"
                  }
                ],
                "description": "A Task is an individual element of work that must be performed to complete a Project.  A\r\nTask can have one or more Resources assigned to it.  Tasks can be linked to other Tasks to\r\nindicate whether they have a dependency or a connection."
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskUpdateDto"
                  }
                ],
                "description": "A Task is an individual element of work that must be performed to complete a Project.  A\r\nTask can have one or more Resources assigned to it.  Tasks can be linked to other Tasks to\r\nindicate whether they have a dependency or a connection."
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskUpdateDto"
                  }
                ],
                "description": "A Task is an individual element of work that must be performed to complete a Project.  A\r\nTask can have one or more Resources assigned to it.  Tasks can be linked to other Tasks to\r\nindicate whether they have a dependency or a connection."
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskUpdateDto"
                  }
                ],
                "description": "A Task is an individual element of work that must be performed to complete a Project.  A\r\nTask can have one or more Resources assigned to it.  Tasks can be linked to other Tasks to\r\nindicate whether they have a dependency or a connection."
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskUpdateDto"
                  }
                ],
                "description": "A Task is an individual element of work that must be performed to complete a Project.  A\r\nTask can have one or more Resources assigned to it.  Tasks can be linked to other Tasks to\r\nindicate whether they have a dependency or a connection."
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskUpdateDto"
                  }
                ],
                "description": "A Task is an individual element of work that must be performed to complete a Project.  A\r\nTask can have one or more Resources assigned to it.  Tasks can be linked to other Tasks to\r\nindicate whether they have a dependency or a connection."
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskUpdateDto"
                  }
                ],
                "description": "A Task is an individual element of work that must be performed to complete a Project.  A\r\nTask can have one or more Resources assigned to it.  Tasks can be linked to other Tasks to\r\nindicate whether they have a dependency or a connection."
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskUpdateDto"
                  }
                ],
                "description": "A Task is an individual element of work that must be performed to complete a Project.  A\r\nTask can have one or more Resources assigned to it.  Tasks can be linked to other Tasks to\r\nindicate whether they have a dependency or a connection."
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskUpdateDto"
                  }
                ],
                "description": "A Task is an individual element of work that must be performed to complete a Project.  A\r\nTask can have one or more Resources assigned to it.  Tasks can be linked to other Tasks to\r\nindicate whether they have a dependency or a connection."
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskUpdateDto"
                  }
                ],
                "description": "A Task is an individual element of work that must be performed to complete a Project.  A\r\nTask can have one or more Resources assigned to it.  Tasks can be linked to other Tasks to\r\nindicate whether they have a dependency or a connection."
              }
            },
            "application/xml": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskUpdateDto"
                  }
                ],
                "description": "A Task is an individual element of work that must be performed to complete a Project.  A\r\nTask can have one or more Resources assigned to it.  Tasks can be linked to other Tasks to\r\nindicate whether they have a dependency or a connection."
              }
            },
            "text/plain": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskUpdateDto"
                  }
                ],
                "description": "A Task is an individual element of work that must be performed to complete a Project.  A\r\nTask can have one or more Resources assigned to it.  Tasks can be linked to other Tasks to\r\nindicate whether they have a dependency or a connection."
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskUpdateDto"
                  }
                ],
                "description": "A Task is an individual element of work that must be performed to complete a Project.  A\r\nTask can have one or more Resources assigned to it.  Tasks can be linked to other Tasks to\r\nindicate whether they have a dependency or a connection."
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskUpdateDto"
                  }
                ],
                "description": "A Task is an individual element of work that must be performed to complete a Project.  A\r\nTask can have one or more Resources assigned to it.  Tasks can be linked to other Tasks to\r\nindicate whether they have a dependency or a connection."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Task"
        ],
        "summary": "Delete Task",
        "description": "Delete an existing Task.\n\nA Task is an individual element of work that must be performed to complete a Project.  A Task can have one or more Resources assigned to it.  Tasks can be linked to other Tasks to indicate whether they have a dependency or a connection.\n\nMultiple users can be working on data at the same time.  When you call an API to update an object, this call is converted into a Changeset that is then applied sequentially.  You can use RetrieveChangeset to see the status of an individual Changeset. \r\n\r\n### Data Definition\r\n\r\nSee [ChangeSetStatusDto](https://developer.projectmanager.com/reference/changesetstatusdto) for the complete data definition.",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "Unique identifier of the Task to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/projects/{projectId}/tasks": {
      "post": {
        "tags": [
          "Task"
        ],
        "summary": "Create Task",
        "description": "Create a new Task within a specified project.\n\nA Task is an individual element of work that must be performed to complete a Project.  A Task can have one or more Resources assigned to it.  Tasks can be linked to other Tasks to indicate whether they have a dependency or a connection. \r\n\r\n### Data Definition\r\n\r\nSee [ChangeSetStatusDto](https://developer.projectmanager.com/reference/changesetstatusdto) for the complete data definition.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the Project that will contain this Task",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The new Task to create",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskCreateDto"
                  }
                ],
                "description": "A Task is an individual element of work that must be performed to complete a Project.  A\r\nTask can have one or more Resources assigned to it.  Tasks can be linked to other Tasks to\r\nindicate whether they have a dependency or a connection."
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskCreateDto"
                  }
                ],
                "description": "A Task is an individual element of work that must be performed to complete a Project.  A\r\nTask can have one or more Resources assigned to it.  Tasks can be linked to other Tasks to\r\nindicate whether they have a dependency or a connection."
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskCreateDto"
                  }
                ],
                "description": "A Task is an individual element of work that must be performed to complete a Project.  A\r\nTask can have one or more Resources assigned to it.  Tasks can be linked to other Tasks to\r\nindicate whether they have a dependency or a connection."
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskCreateDto"
                  }
                ],
                "description": "A Task is an individual element of work that must be performed to complete a Project.  A\r\nTask can have one or more Resources assigned to it.  Tasks can be linked to other Tasks to\r\nindicate whether they have a dependency or a connection."
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskCreateDto"
                  }
                ],
                "description": "A Task is an individual element of work that must be performed to complete a Project.  A\r\nTask can have one or more Resources assigned to it.  Tasks can be linked to other Tasks to\r\nindicate whether they have a dependency or a connection."
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskCreateDto"
                  }
                ],
                "description": "A Task is an individual element of work that must be performed to complete a Project.  A\r\nTask can have one or more Resources assigned to it.  Tasks can be linked to other Tasks to\r\nindicate whether they have a dependency or a connection."
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskCreateDto"
                  }
                ],
                "description": "A Task is an individual element of work that must be performed to complete a Project.  A\r\nTask can have one or more Resources assigned to it.  Tasks can be linked to other Tasks to\r\nindicate whether they have a dependency or a connection."
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskCreateDto"
                  }
                ],
                "description": "A Task is an individual element of work that must be performed to complete a Project.  A\r\nTask can have one or more Resources assigned to it.  Tasks can be linked to other Tasks to\r\nindicate whether they have a dependency or a connection."
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskCreateDto"
                  }
                ],
                "description": "A Task is an individual element of work that must be performed to complete a Project.  A\r\nTask can have one or more Resources assigned to it.  Tasks can be linked to other Tasks to\r\nindicate whether they have a dependency or a connection."
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskCreateDto"
                  }
                ],
                "description": "A Task is an individual element of work that must be performed to complete a Project.  A\r\nTask can have one or more Resources assigned to it.  Tasks can be linked to other Tasks to\r\nindicate whether they have a dependency or a connection."
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskCreateDto"
                  }
                ],
                "description": "A Task is an individual element of work that must be performed to complete a Project.  A\r\nTask can have one or more Resources assigned to it.  Tasks can be linked to other Tasks to\r\nindicate whether they have a dependency or a connection."
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskCreateDto"
                  }
                ],
                "description": "A Task is an individual element of work that must be performed to complete a Project.  A\r\nTask can have one or more Resources assigned to it.  Tasks can be linked to other Tasks to\r\nindicate whether they have a dependency or a connection."
              }
            },
            "application/xml": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskCreateDto"
                  }
                ],
                "description": "A Task is an individual element of work that must be performed to complete a Project.  A\r\nTask can have one or more Resources assigned to it.  Tasks can be linked to other Tasks to\r\nindicate whether they have a dependency or a connection."
              }
            },
            "text/plain": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskCreateDto"
                  }
                ],
                "description": "A Task is an individual element of work that must be performed to complete a Project.  A\r\nTask can have one or more Resources assigned to it.  Tasks can be linked to other Tasks to\r\nindicate whether they have a dependency or a connection."
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskCreateDto"
                  }
                ],
                "description": "A Task is an individual element of work that must be performed to complete a Project.  A\r\nTask can have one or more Resources assigned to it.  Tasks can be linked to other Tasks to\r\nindicate whether they have a dependency or a connection."
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskCreateDto"
                  }
                ],
                "description": "A Task is an individual element of work that must be performed to complete a Project.  A\r\nTask can have one or more Resources assigned to it.  Tasks can be linked to other Tasks to\r\nindicate whether they have a dependency or a connection."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/tasks/priorities": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "Retrieve Task Priorities",
        "description": "Retrieves all TaskPriorities defined within your Workspace.\n\nA TaskPriority is a named priority level used by your business to determine how to decide which Tasks are the most important.  You can name your TaskPriority levels anything you like and you can reorganize the order of the TaskPriority levels at any time.\n\nNote that TaskPriority and ProjectPriority are different classes of priority levels.  Even if they may have similar names, they are different objects and must be tracked separately. \r\n\r\n### Data Definition\r\n\r\nSee [TaskPriorityDto](https://developer.projectmanager.com/reference/taskprioritydto) for the complete data definition.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TaskPriorityDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TaskPriorityDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/TaskPriorityDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TaskPriorityDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TaskPriorityDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/TaskPriorityDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TaskPriorityDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TaskPriorityDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/TaskPriorityDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TaskPriorityDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TaskPriorityDtoListAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskPriorityDtoListAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TaskPriorityDtoListAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TaskPriorityDtoListAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/TaskPriorityDtoListAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskPriorityDtoListAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/projects/{projectId}/tasks/bulk": {
      "post": {
        "tags": [
          "Task"
        ],
        "summary": "Create Many Tasks",
        "description": "Create multiple new Tasks within a specified project with a single API call.\n\nA Task is an individual element of work that must be performed to complete a Project.  A Task can have one or more Resources assigned to it.  Tasks can be linked to other Tasks to indicate whether they have a dependency or a connection. \r\n\r\n### Data Definition\r\n\r\nSee [ChangeSetStatusDto](https://developer.projectmanager.com/reference/changesetstatusdto) for the complete data definition.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the Project that will contain these Tasks",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The list of new Tasks to create",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskCreateDto"
                }
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskCreateDto"
                }
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskCreateDto"
                }
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskCreateDto"
                }
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskCreateDto"
                }
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskCreateDto"
                }
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskCreateDto"
                }
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskCreateDto"
                }
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskCreateDto"
                }
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskCreateDto"
                }
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskCreateDto"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskCreateDto"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskCreateDto"
                }
              }
            },
            "text/plain": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskCreateDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskCreateDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaskCreateDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoListAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoListAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoListAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoListAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoListAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoListAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/tasks/{taskId}/parent/{parentTaskId}": {
      "post": {
        "tags": [
          "Task"
        ],
        "summary": "Add Parent Task",
        "description": "Adds a task parent relationship \r\n\r\n### Data Definition\r\n\r\nSee [ChangeSetStatusDto](https://developer.projectmanager.com/reference/changesetstatusdto) for the complete data definition.",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "The task that will become the child",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "parentTaskId",
            "in": "path",
            "description": "The parent task",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Task"
        ],
        "summary": "Update Parent Task",
        "description": "Updates a task parent relationship \r\n\r\n### Data Definition\r\n\r\nSee [ChangeSetStatusDto](https://developer.projectmanager.com/reference/changesetstatusdto) for the complete data definition.",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "The task that will become the child",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "parentTaskId",
            "in": "path",
            "description": "The parent task",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/tasks/{taskId}/parent": {
      "delete": {
        "tags": [
          "Task"
        ],
        "summary": "Remove Parent Task",
        "description": "Removes a task parent relationship completely \r\n\r\n### Data Definition\r\n\r\nSee [ChangeSetStatusDto](https://developer.projectmanager.com/reference/changesetstatusdto) for the complete data definition.",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "The child task",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/tasks/{taskId}/assignees": {
      "post": {
        "tags": [
          "TaskAssignee"
        ],
        "summary": "Replace Task Assignees",
        "description": "Replace all TaskAssignees on a Task with new TaskAssignees.\n\nA TaskAssignee is an assignment of a Resource to a Task.  You can assign multiple Resources to a Task and designate what proportion of their time will be allocated to this Task. \r\n\r\n### Data Definition\r\n\r\nSee [ChangeSetStatusDto](https://developer.projectmanager.com/reference/changesetstatusdto) for the complete data definition.",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "The unique identifier of the Task whose TaskAssignees will be replaced",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The new list of TaskAssignees for this Task",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssigneeUpsertDto"
                }
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssigneeUpsertDto"
                }
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssigneeUpsertDto"
                }
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssigneeUpsertDto"
                }
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssigneeUpsertDto"
                }
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssigneeUpsertDto"
                }
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssigneeUpsertDto"
                }
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssigneeUpsertDto"
                }
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssigneeUpsertDto"
                }
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssigneeUpsertDto"
                }
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssigneeUpsertDto"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssigneeUpsertDto"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssigneeUpsertDto"
                }
              }
            },
            "text/plain": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssigneeUpsertDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssigneeUpsertDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssigneeUpsertDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TaskAssignee"
        ],
        "summary": "Create Or Update TaskAssignee",
        "description": "Adds or updates a TaskAssignee to a Task.  If the TaskAssignee is already assigned to the Task, update their allocation.  If the TaskAssignee is not yet assigned to the Task, assign them and set their allocation level to the correct amount.\n\nA TaskAssignee is an assignment of a Resource to a Task.  You can assign multiple Resources to a Task and designate what proportion of their time will be allocated to this Task. \r\n\r\n### Data Definition\r\n\r\nSee [ChangeSetStatusDto](https://developer.projectmanager.com/reference/changesetstatusdto) for the complete data definition.",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "The unique identifier of the Task to add or update an assignment",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "List of Assignee data",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssigneeUpsertDto"
                }
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssigneeUpsertDto"
                }
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssigneeUpsertDto"
                }
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssigneeUpsertDto"
                }
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssigneeUpsertDto"
                }
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssigneeUpsertDto"
                }
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssigneeUpsertDto"
                }
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssigneeUpsertDto"
                }
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssigneeUpsertDto"
                }
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssigneeUpsertDto"
                }
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssigneeUpsertDto"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssigneeUpsertDto"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssigneeUpsertDto"
                }
              }
            },
            "text/plain": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssigneeUpsertDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssigneeUpsertDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssigneeUpsertDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TaskAssignee"
        ],
        "summary": "Delete Task Assignees",
        "description": "Remove one or more TaskAssignees from a Task.\n\nA TaskAssignee is an assignment of a Resource to a Task.  You can assign multiple Resources to a Task and designate what proportion of their time will be allocated to this Task. \r\n\r\n### Data Definition\r\n\r\nSee [ChangeSetStatusDto](https://developer.projectmanager.com/reference/changesetstatusdto) for the complete data definition.",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "The unique identifier of the Task whose TaskAssignee will be removed",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "List of TaskAssignee records to remove",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IdDto"
                }
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IdDto"
                }
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IdDto"
                }
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IdDto"
                }
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IdDto"
                }
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IdDto"
                }
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IdDto"
                }
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IdDto"
                }
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IdDto"
                }
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IdDto"
                }
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IdDto"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IdDto"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IdDto"
                }
              }
            },
            "text/plain": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IdDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IdDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IdDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/projects/{projectId}/tasks/fields": {
      "get": {
        "tags": [
          "TaskField"
        ],
        "summary": "Retrieve Task Fields",
        "description": "Retrieves all TaskFields defined for a specific Project within your Workspace.\n\nA TaskField is a custom field defined within your Workspace for a specific Project.  You can define TaskFields for any integration purpose that is important to your business.  Each TaskField has a data type as well as options in how it is handled.  TaskFields can be edited for each Task inside this Project. \r\n\r\n### Data Definition\r\n\r\nSee [GetTaskFieldsResponseDto](https://developer.projectmanager.com/reference/gettaskfieldsresponsedto) for the complete data definition.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the Project to retrieve TaskFields",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/GetTaskFieldsResponseDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/GetTaskFieldsResponseDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/GetTaskFieldsResponseDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/GetTaskFieldsResponseDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/GetTaskFieldsResponseDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/GetTaskFieldsResponseDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/GetTaskFieldsResponseDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/GetTaskFieldsResponseDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/GetTaskFieldsResponseDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/GetTaskFieldsResponseDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/GetTaskFieldsResponseDtoListAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTaskFieldsResponseDtoListAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetTaskFieldsResponseDtoListAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetTaskFieldsResponseDtoListAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/GetTaskFieldsResponseDtoListAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTaskFieldsResponseDtoListAstroResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TaskField"
        ],
        "summary": "Create Task Field",
        "description": "Creates a new TaskFields for a specific Project within your Workspace.\n\nA TaskField is a custom field defined within your Workspace for a specific Project.  You can define TaskFields for any integration purpose that is important to your business.  Each TaskField has a data type as well as options in how it is handled.  TaskFields can be edited for each Task inside this Project. \r\n\r\n### Data Definition\r\n\r\nSee [ChangeSetStatusDto](https://developer.projectmanager.com/reference/changesetstatusdto) for the complete data definition.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the Project within which to create this TaskField",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Information about the TaskField to create",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateTaskFieldRequestDto"
                  }
                ],
                "description": "A TaskField is a custom field defined within your Workspace for a specific Project.  You can\r\ndefine TaskFields for any integration purpose that is important to your business.  Each\r\nTaskField has a data type as well as options in how it is handled.  TaskFields can be edited\r\nfor each Task inside this Project."
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateTaskFieldRequestDto"
                  }
                ],
                "description": "A TaskField is a custom field defined within your Workspace for a specific Project.  You can\r\ndefine TaskFields for any integration purpose that is important to your business.  Each\r\nTaskField has a data type as well as options in how it is handled.  TaskFields can be edited\r\nfor each Task inside this Project."
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateTaskFieldRequestDto"
                  }
                ],
                "description": "A TaskField is a custom field defined within your Workspace for a specific Project.  You can\r\ndefine TaskFields for any integration purpose that is important to your business.  Each\r\nTaskField has a data type as well as options in how it is handled.  TaskFields can be edited\r\nfor each Task inside this Project."
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateTaskFieldRequestDto"
                  }
                ],
                "description": "A TaskField is a custom field defined within your Workspace for a specific Project.  You can\r\ndefine TaskFields for any integration purpose that is important to your business.  Each\r\nTaskField has a data type as well as options in how it is handled.  TaskFields can be edited\r\nfor each Task inside this Project."
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateTaskFieldRequestDto"
                  }
                ],
                "description": "A TaskField is a custom field defined within your Workspace for a specific Project.  You can\r\ndefine TaskFields for any integration purpose that is important to your business.  Each\r\nTaskField has a data type as well as options in how it is handled.  TaskFields can be edited\r\nfor each Task inside this Project."
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateTaskFieldRequestDto"
                  }
                ],
                "description": "A TaskField is a custom field defined within your Workspace for a specific Project.  You can\r\ndefine TaskFields for any integration purpose that is important to your business.  Each\r\nTaskField has a data type as well as options in how it is handled.  TaskFields can be edited\r\nfor each Task inside this Project."
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateTaskFieldRequestDto"
                  }
                ],
                "description": "A TaskField is a custom field defined within your Workspace for a specific Project.  You can\r\ndefine TaskFields for any integration purpose that is important to your business.  Each\r\nTaskField has a data type as well as options in how it is handled.  TaskFields can be edited\r\nfor each Task inside this Project."
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateTaskFieldRequestDto"
                  }
                ],
                "description": "A TaskField is a custom field defined within your Workspace for a specific Project.  You can\r\ndefine TaskFields for any integration purpose that is important to your business.  Each\r\nTaskField has a data type as well as options in how it is handled.  TaskFields can be edited\r\nfor each Task inside this Project."
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateTaskFieldRequestDto"
                  }
                ],
                "description": "A TaskField is a custom field defined within your Workspace for a specific Project.  You can\r\ndefine TaskFields for any integration purpose that is important to your business.  Each\r\nTaskField has a data type as well as options in how it is handled.  TaskFields can be edited\r\nfor each Task inside this Project."
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateTaskFieldRequestDto"
                  }
                ],
                "description": "A TaskField is a custom field defined within your Workspace for a specific Project.  You can\r\ndefine TaskFields for any integration purpose that is important to your business.  Each\r\nTaskField has a data type as well as options in how it is handled.  TaskFields can be edited\r\nfor each Task inside this Project."
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateTaskFieldRequestDto"
                  }
                ],
                "description": "A TaskField is a custom field defined within your Workspace for a specific Project.  You can\r\ndefine TaskFields for any integration purpose that is important to your business.  Each\r\nTaskField has a data type as well as options in how it is handled.  TaskFields can be edited\r\nfor each Task inside this Project."
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateTaskFieldRequestDto"
                  }
                ],
                "description": "A TaskField is a custom field defined within your Workspace for a specific Project.  You can\r\ndefine TaskFields for any integration purpose that is important to your business.  Each\r\nTaskField has a data type as well as options in how it is handled.  TaskFields can be edited\r\nfor each Task inside this Project."
              }
            },
            "application/xml": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateTaskFieldRequestDto"
                  }
                ],
                "description": "A TaskField is a custom field defined within your Workspace for a specific Project.  You can\r\ndefine TaskFields for any integration purpose that is important to your business.  Each\r\nTaskField has a data type as well as options in how it is handled.  TaskFields can be edited\r\nfor each Task inside this Project."
              }
            },
            "text/plain": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateTaskFieldRequestDto"
                  }
                ],
                "description": "A TaskField is a custom field defined within your Workspace for a specific Project.  You can\r\ndefine TaskFields for any integration purpose that is important to your business.  Each\r\nTaskField has a data type as well as options in how it is handled.  TaskFields can be edited\r\nfor each Task inside this Project."
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateTaskFieldRequestDto"
                  }
                ],
                "description": "A TaskField is a custom field defined within your Workspace for a specific Project.  You can\r\ndefine TaskFields for any integration purpose that is important to your business.  Each\r\nTaskField has a data type as well as options in how it is handled.  TaskFields can be edited\r\nfor each Task inside this Project."
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateTaskFieldRequestDto"
                  }
                ],
                "description": "A TaskField is a custom field defined within your Workspace for a specific Project.  You can\r\ndefine TaskFields for any integration purpose that is important to your business.  Each\r\nTaskField has a data type as well as options in how it is handled.  TaskFields can be edited\r\nfor each Task inside this Project."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/projects/{projectId}/tasks/fields/{fieldId}": {
      "delete": {
        "tags": [
          "TaskField"
        ],
        "summary": "Delete Task Field",
        "description": "Deletes a TaskField for a specific Project within your Workspace.\n\nA TaskField is a custom field defined within your Workspace for a specific Project.  You can define TaskFields for any integration purpose that is important to your business.  Each TaskField has a data type as well as options in how it is handled.  TaskFields can be edited for each Task inside this Project. \r\n\r\n### Data Definition\r\n\r\nSee [](https://developer.projectmanager.com/reference/) for the complete data definition.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the Project that contains this TaskField",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "fieldId",
            "in": "path",
            "description": "The unique identifier of the TaskField to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/tasks/{taskId}/fields/{fieldId}": {
      "get": {
        "tags": [
          "TaskField"
        ],
        "summary": "Retrieve TaskField Value",
        "description": "Retrieves the current TaskField value for a particular Task and TaskField.\n\nA TaskField is a custom field defined within your Workspace for a specific Project.  You can define TaskFields for any integration purpose that is important to your business.  Each TaskField has a data type as well as options in how it is handled.  TaskFields can be edited for each Task inside this Project. \r\n\r\n### Data Definition\r\n\r\nSee [TaskFieldsValueResponseDto](https://developer.projectmanager.com/reference/taskfieldsvalueresponsedto) for the complete data definition.",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "The unique identifier of the Task of the value to retrieve",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "fieldId",
            "in": "path",
            "description": "The unique identifier of the TaskField of the value to retrieve",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TaskFieldsValueResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TaskFieldsValueResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/TaskFieldsValueResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TaskFieldsValueResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TaskFieldsValueResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/TaskFieldsValueResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TaskFieldsValueResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TaskFieldsValueResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/TaskFieldsValueResponseDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TaskFieldsValueResponseDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TaskFieldsValueResponseDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskFieldsValueResponseDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TaskFieldsValueResponseDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TaskFieldsValueResponseDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/TaskFieldsValueResponseDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskFieldsValueResponseDtoAstroResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TaskField"
        ],
        "summary": "Update TaskField Value",
        "description": "Replaces the current value of a TaskFields for a specific Task within your Workspace.\n\nA TaskField is a custom field defined within your Workspace for a specific Project.  You can define TaskFields for any integration purpose that is important to your business.  Each TaskField has a data type as well as options in how it is handled.  TaskFields can be edited for each Task inside this Project. \r\n\r\n### Data Definition\r\n\r\nSee [ChangeSetStatusDto](https://developer.projectmanager.com/reference/changesetstatusdto) for the complete data definition.",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "The unique identifier of the Task whose value you wish to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "fieldId",
            "in": "path",
            "description": "The unique identifier of the TaskField whose value you wish to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The new value for this TaskField for this Task",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateTaskFieldValueDto"
                  }
                ],
                "description": "A model that contains a new value to be set for a TaskField."
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateTaskFieldValueDto"
                  }
                ],
                "description": "A model that contains a new value to be set for a TaskField."
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateTaskFieldValueDto"
                  }
                ],
                "description": "A model that contains a new value to be set for a TaskField."
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateTaskFieldValueDto"
                  }
                ],
                "description": "A model that contains a new value to be set for a TaskField."
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateTaskFieldValueDto"
                  }
                ],
                "description": "A model that contains a new value to be set for a TaskField."
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateTaskFieldValueDto"
                  }
                ],
                "description": "A model that contains a new value to be set for a TaskField."
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateTaskFieldValueDto"
                  }
                ],
                "description": "A model that contains a new value to be set for a TaskField."
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateTaskFieldValueDto"
                  }
                ],
                "description": "A model that contains a new value to be set for a TaskField."
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateTaskFieldValueDto"
                  }
                ],
                "description": "A model that contains a new value to be set for a TaskField."
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateTaskFieldValueDto"
                  }
                ],
                "description": "A model that contains a new value to be set for a TaskField."
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateTaskFieldValueDto"
                  }
                ],
                "description": "A model that contains a new value to be set for a TaskField."
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateTaskFieldValueDto"
                  }
                ],
                "description": "A model that contains a new value to be set for a TaskField."
              }
            },
            "application/xml": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateTaskFieldValueDto"
                  }
                ],
                "description": "A model that contains a new value to be set for a TaskField."
              }
            },
            "text/plain": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateTaskFieldValueDto"
                  }
                ],
                "description": "A model that contains a new value to be set for a TaskField."
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateTaskFieldValueDto"
                  }
                ],
                "description": "A model that contains a new value to be set for a TaskField."
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateTaskFieldValueDto"
                  }
                ],
                "description": "A model that contains a new value to be set for a TaskField."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/tasks/{taskId}/fields": {
      "get": {
        "tags": [
          "TaskField"
        ],
        "summary": "Retrieve All TaskField Values",
        "description": "Retrieves all TaskField values for a particular Task.\n\nA TaskField is a custom field defined within your Workspace for a specific Project.  You can define TaskFields for any integration purpose that is important to your business.  Each TaskField has a data type as well as options in how it is handled.  TaskFields can be edited for each Task inside this Project. \r\n\r\n### Data Definition\r\n\r\nSee [TaskFieldsValueResponseDto](https://developer.projectmanager.com/reference/taskfieldsvalueresponsedto) for the complete data definition.",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "The unique identifier of the Task for which we want TaskField values",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TaskFieldsValueResponseDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TaskFieldsValueResponseDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/TaskFieldsValueResponseDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TaskFieldsValueResponseDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TaskFieldsValueResponseDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/TaskFieldsValueResponseDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TaskFieldsValueResponseDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TaskFieldsValueResponseDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/TaskFieldsValueResponseDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TaskFieldsValueResponseDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TaskFieldsValueResponseDtoListAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskFieldsValueResponseDtoListAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TaskFieldsValueResponseDtoListAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TaskFieldsValueResponseDtoListAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/TaskFieldsValueResponseDtoListAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskFieldsValueResponseDtoListAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/tasks/{taskId}/files": {
      "post": {
        "tags": [
          "TaskFile"
        ],
        "summary": "Upload Task File",
        "description": "Uploads a file to a task.\n\nProjectManager allows you to store Files connected to other elements of your Workspace such as a Project, a Task, or Home.  Files are maintained separately based on the location where the file was stored.\n\nWhen you upload a File, please allow a few moments for the File to be processed and verified. ProjectManager may reject File uploads that contain problems such as malware. Once a File has completed the upload the process, you may retrieve it using the DownloadFile API. \r\n\r\n### Data Definition\r\n\r\nSee [FileDto](https://developer.projectmanager.com/reference/filedto) for the complete data definition.",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "The reference to the task",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDtoAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/projects/{projectId}/tasks/statuses": {
      "get": {
        "tags": [
          "TaskStatus"
        ],
        "summary": "Retrieve Task Statuses",
        "description": "Retrieves the list of TaskStatus levels for a specific Project within your Workspace.\n\nA TaskStatus is a named status level used by your business to determine how to measure the progress of Tasks.  You can define your own named status levels that are appropriate for your business and determine which status levels are considered done. \r\n\r\n### Data Definition\r\n\r\nSee [TaskStatusDto](https://developer.projectmanager.com/reference/taskstatusdto) for the complete data definition.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the Project to retrieve TaskStatuses",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusDtoListAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusDtoListAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusDtoListAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusDtoListAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusDtoListAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusDtoListAstroResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TaskStatus"
        ],
        "summary": "Create TaskStatus",
        "description": "Creates a new TaskStatus level for a specific Project within your Workspace.\n\nA TaskStatus is a named status level used by your business to determine how to measure the progress of Tasks.  You can define your own named status levels that are appropriate for your business. \r\n\r\n### Data Definition\r\n\r\nSee [TaskStatusDto](https://developer.projectmanager.com/reference/taskstatusdto) for the complete data definition.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the Project for the new TaskStatus",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Information about the new TaskStatus level to create within this Project",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskStatusCreateDto"
                  }
                ],
                "description": "A TaskStatus is a named status level used by your business to determine how to measure the\r\nprogress of Tasks.  You can define your own named status levels that are appropriate for\r\nyour business and determine which status levels are considered done."
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskStatusCreateDto"
                  }
                ],
                "description": "A TaskStatus is a named status level used by your business to determine how to measure the\r\nprogress of Tasks.  You can define your own named status levels that are appropriate for\r\nyour business and determine which status levels are considered done."
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskStatusCreateDto"
                  }
                ],
                "description": "A TaskStatus is a named status level used by your business to determine how to measure the\r\nprogress of Tasks.  You can define your own named status levels that are appropriate for\r\nyour business and determine which status levels are considered done."
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskStatusCreateDto"
                  }
                ],
                "description": "A TaskStatus is a named status level used by your business to determine how to measure the\r\nprogress of Tasks.  You can define your own named status levels that are appropriate for\r\nyour business and determine which status levels are considered done."
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskStatusCreateDto"
                  }
                ],
                "description": "A TaskStatus is a named status level used by your business to determine how to measure the\r\nprogress of Tasks.  You can define your own named status levels that are appropriate for\r\nyour business and determine which status levels are considered done."
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskStatusCreateDto"
                  }
                ],
                "description": "A TaskStatus is a named status level used by your business to determine how to measure the\r\nprogress of Tasks.  You can define your own named status levels that are appropriate for\r\nyour business and determine which status levels are considered done."
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskStatusCreateDto"
                  }
                ],
                "description": "A TaskStatus is a named status level used by your business to determine how to measure the\r\nprogress of Tasks.  You can define your own named status levels that are appropriate for\r\nyour business and determine which status levels are considered done."
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskStatusCreateDto"
                  }
                ],
                "description": "A TaskStatus is a named status level used by your business to determine how to measure the\r\nprogress of Tasks.  You can define your own named status levels that are appropriate for\r\nyour business and determine which status levels are considered done."
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskStatusCreateDto"
                  }
                ],
                "description": "A TaskStatus is a named status level used by your business to determine how to measure the\r\nprogress of Tasks.  You can define your own named status levels that are appropriate for\r\nyour business and determine which status levels are considered done."
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskStatusCreateDto"
                  }
                ],
                "description": "A TaskStatus is a named status level used by your business to determine how to measure the\r\nprogress of Tasks.  You can define your own named status levels that are appropriate for\r\nyour business and determine which status levels are considered done."
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskStatusCreateDto"
                  }
                ],
                "description": "A TaskStatus is a named status level used by your business to determine how to measure the\r\nprogress of Tasks.  You can define your own named status levels that are appropriate for\r\nyour business and determine which status levels are considered done."
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskStatusCreateDto"
                  }
                ],
                "description": "A TaskStatus is a named status level used by your business to determine how to measure the\r\nprogress of Tasks.  You can define your own named status levels that are appropriate for\r\nyour business and determine which status levels are considered done."
              }
            },
            "application/xml": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskStatusCreateDto"
                  }
                ],
                "description": "A TaskStatus is a named status level used by your business to determine how to measure the\r\nprogress of Tasks.  You can define your own named status levels that are appropriate for\r\nyour business and determine which status levels are considered done."
              }
            },
            "text/plain": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskStatusCreateDto"
                  }
                ],
                "description": "A TaskStatus is a named status level used by your business to determine how to measure the\r\nprogress of Tasks.  You can define your own named status levels that are appropriate for\r\nyour business and determine which status levels are considered done."
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskStatusCreateDto"
                  }
                ],
                "description": "A TaskStatus is a named status level used by your business to determine how to measure the\r\nprogress of Tasks.  You can define your own named status levels that are appropriate for\r\nyour business and determine which status levels are considered done."
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskStatusCreateDto"
                  }
                ],
                "description": "A TaskStatus is a named status level used by your business to determine how to measure the\r\nprogress of Tasks.  You can define your own named status levels that are appropriate for\r\nyour business and determine which status levels are considered done."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusDtoAstroResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TaskStatus"
        ],
        "summary": "Update TaskStatus",
        "description": "Updates an existing TaskStatus level for a specific Project within your Workspace.\n\nA TaskStatus is a named status level used by your business to determine how to measure the progress of Tasks.  You can define your own named status levels that are appropriate for your business. \r\n\r\n### Data Definition\r\n\r\nSee [TaskStatusDto](https://developer.projectmanager.com/reference/taskstatusdto) for the complete data definition.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the Project for the new TaskStatus",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Information about the existing TaskStatus level to update within this Project",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskStatusUpdateDto"
                  }
                ],
                "description": "A TaskStatus is a named status level used by your business to determine how to measure the\r\nprogress of Tasks.  You can define your own named status levels that are appropriate for\r\nyour business and determine which status levels are considered done."
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskStatusUpdateDto"
                  }
                ],
                "description": "A TaskStatus is a named status level used by your business to determine how to measure the\r\nprogress of Tasks.  You can define your own named status levels that are appropriate for\r\nyour business and determine which status levels are considered done."
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskStatusUpdateDto"
                  }
                ],
                "description": "A TaskStatus is a named status level used by your business to determine how to measure the\r\nprogress of Tasks.  You can define your own named status levels that are appropriate for\r\nyour business and determine which status levels are considered done."
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskStatusUpdateDto"
                  }
                ],
                "description": "A TaskStatus is a named status level used by your business to determine how to measure the\r\nprogress of Tasks.  You can define your own named status levels that are appropriate for\r\nyour business and determine which status levels are considered done."
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskStatusUpdateDto"
                  }
                ],
                "description": "A TaskStatus is a named status level used by your business to determine how to measure the\r\nprogress of Tasks.  You can define your own named status levels that are appropriate for\r\nyour business and determine which status levels are considered done."
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskStatusUpdateDto"
                  }
                ],
                "description": "A TaskStatus is a named status level used by your business to determine how to measure the\r\nprogress of Tasks.  You can define your own named status levels that are appropriate for\r\nyour business and determine which status levels are considered done."
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskStatusUpdateDto"
                  }
                ],
                "description": "A TaskStatus is a named status level used by your business to determine how to measure the\r\nprogress of Tasks.  You can define your own named status levels that are appropriate for\r\nyour business and determine which status levels are considered done."
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskStatusUpdateDto"
                  }
                ],
                "description": "A TaskStatus is a named status level used by your business to determine how to measure the\r\nprogress of Tasks.  You can define your own named status levels that are appropriate for\r\nyour business and determine which status levels are considered done."
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskStatusUpdateDto"
                  }
                ],
                "description": "A TaskStatus is a named status level used by your business to determine how to measure the\r\nprogress of Tasks.  You can define your own named status levels that are appropriate for\r\nyour business and determine which status levels are considered done."
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskStatusUpdateDto"
                  }
                ],
                "description": "A TaskStatus is a named status level used by your business to determine how to measure the\r\nprogress of Tasks.  You can define your own named status levels that are appropriate for\r\nyour business and determine which status levels are considered done."
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskStatusUpdateDto"
                  }
                ],
                "description": "A TaskStatus is a named status level used by your business to determine how to measure the\r\nprogress of Tasks.  You can define your own named status levels that are appropriate for\r\nyour business and determine which status levels are considered done."
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskStatusUpdateDto"
                  }
                ],
                "description": "A TaskStatus is a named status level used by your business to determine how to measure the\r\nprogress of Tasks.  You can define your own named status levels that are appropriate for\r\nyour business and determine which status levels are considered done."
              }
            },
            "application/xml": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskStatusUpdateDto"
                  }
                ],
                "description": "A TaskStatus is a named status level used by your business to determine how to measure the\r\nprogress of Tasks.  You can define your own named status levels that are appropriate for\r\nyour business and determine which status levels are considered done."
              }
            },
            "text/plain": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskStatusUpdateDto"
                  }
                ],
                "description": "A TaskStatus is a named status level used by your business to determine how to measure the\r\nprogress of Tasks.  You can define your own named status levels that are appropriate for\r\nyour business and determine which status levels are considered done."
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskStatusUpdateDto"
                  }
                ],
                "description": "A TaskStatus is a named status level used by your business to determine how to measure the\r\nprogress of Tasks.  You can define your own named status levels that are appropriate for\r\nyour business and determine which status levels are considered done."
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TaskStatusUpdateDto"
                  }
                ],
                "description": "A TaskStatus is a named status level used by your business to determine how to measure the\r\nprogress of Tasks.  You can define your own named status levels that are appropriate for\r\nyour business and determine which status levels are considered done."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusDtoAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/projects/{projectId}/tasks/statuses/{taskStatusId}": {
      "delete": {
        "tags": [
          "TaskStatus"
        ],
        "summary": "Delete TaskStatus",
        "description": "The endpoint is used to delete a TaskStatus.\n\nYou will not be able to delete a TaskStatus if there are tasks that have been assigned to this status level or if the TaskStatus is the default status level. \r\n\r\n### Data Definition\r\n\r\nSee [](https://developer.projectmanager.com/reference/) for the complete data definition.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "The unique identifier of the Project for the TaskStatus level to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "taskStatusId",
            "in": "path",
            "description": "The Id of the TaskStatus level to be removed.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/tasks/{taskId}/tags": {
      "post": {
        "tags": [
          "TaskTag"
        ],
        "summary": "Replace TaskTags",
        "description": "Replaces the existing TaskTags on a Task with a newly provided list of TaskTags.\n\nA TaskTag is a connection between a Task and a Tag.  Each Task can have zero, one or many TaskTags associated with it.  TaskTags can be assigned and removed from the Task to help you classify your Tasks and prioritize work. \r\n\r\n### Data Definition\r\n\r\nSee [ChangeSetStatusDto](https://developer.projectmanager.com/reference/changesetstatusdto) for the complete data definition.",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "The unique identifier of the Task for which we will replace TaskTags",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The replacement list of TaskTags for this Task",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameDto"
                }
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameDto"
                }
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameDto"
                }
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameDto"
                }
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameDto"
                }
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameDto"
                }
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameDto"
                }
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameDto"
                }
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameDto"
                }
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameDto"
                }
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameDto"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameDto"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameDto"
                }
              }
            },
            "text/plain": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TaskTag"
        ],
        "summary": "Add TaskTag to Task",
        "description": "Add one or more new TaskTags to a Task.\n\nA TaskTag is a connection between a Task and a Tag.  Each Task can have zero, one or many TaskTags associated with it.  TaskTags can be assigned and removed from the Task to help you classify your Tasks and prioritize work. \r\n\r\n### Data Definition\r\n\r\nSee [ChangeSetStatusDto](https://developer.projectmanager.com/reference/changesetstatusdto) for the complete data definition.",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "The unique identifier of the Task for which we will add TaskTags",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The new TaskTags to add to this Task",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameDto"
                }
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameDto"
                }
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameDto"
                }
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameDto"
                }
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameDto"
                }
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameDto"
                }
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameDto"
                }
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameDto"
                }
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameDto"
                }
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameDto"
                }
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameDto"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameDto"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameDto"
                }
              }
            },
            "text/plain": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TaskTag"
        ],
        "summary": "Remove TaskTag from Task",
        "description": "Removes one or more existing TaskTags from a Task.\n\nA TaskTag is a connection between a Task and a Tag.  Each Task can have zero, one or many TaskTags associated with it.  TaskTags can be assigned and removed from the Task to help you classify your Tasks and prioritize work. \r\n\r\n### Data Definition\r\n\r\nSee [ChangeSetStatusDto](https://developer.projectmanager.com/reference/changesetstatusdto) for the complete data definition.",
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "description": "The unique identifier of the Task for which we will remove existing TaskTags",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The TaskTags to remove from this Task",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameDto"
                }
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameDto"
                }
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameDto"
                }
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameDto"
                }
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameDto"
                }
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameDto"
                }
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameDto"
                }
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameDto"
                }
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameDto"
                }
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameDto"
                }
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameDto"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameDto"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameDto"
                }
              }
            },
            "text/plain": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/NameDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeSetStatusDtoAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/integrations/teams/application": {
      "get": {
        "tags": [
          "Teams"
        ],
        "summary": "Retrieve zip file for Teams Integrations",
        "description": "Retrieves zip file for teams integrations.\r\n            \r\nThe Teams API is intended for use by ProjectManager and its business development partners.  Please\r\ncontact ProjectManager's sales team to request use of this API.",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/data/timesheets": {
      "post": {
        "tags": [
          "Timesheet"
        ],
        "summary": "Create time entry",
        "description": "Creates new time entry for given resource on given day. \r\n\r\n### Data Definition\r\n\r\nSee [TimesheetResponseDto](https://developer.projectmanager.com/reference/timesheetresponsedto) for the complete data definition.",
        "requestBody": {
          "description": "Payload",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TimesheetCreateRequestDto"
                  }
                ],
                "description": "Payload to create time entry"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TimesheetCreateRequestDto"
                  }
                ],
                "description": "Payload to create time entry"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TimesheetCreateRequestDto"
                  }
                ],
                "description": "Payload to create time entry"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TimesheetCreateRequestDto"
                  }
                ],
                "description": "Payload to create time entry"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TimesheetCreateRequestDto"
                  }
                ],
                "description": "Payload to create time entry"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TimesheetCreateRequestDto"
                  }
                ],
                "description": "Payload to create time entry"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TimesheetCreateRequestDto"
                  }
                ],
                "description": "Payload to create time entry"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TimesheetCreateRequestDto"
                  }
                ],
                "description": "Payload to create time entry"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TimesheetCreateRequestDto"
                  }
                ],
                "description": "Payload to create time entry"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TimesheetCreateRequestDto"
                  }
                ],
                "description": "Payload to create time entry"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TimesheetCreateRequestDto"
                  }
                ],
                "description": "Payload to create time entry"
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TimesheetCreateRequestDto"
                  }
                ],
                "description": "Payload to create time entry"
              }
            },
            "application/xml": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TimesheetCreateRequestDto"
                  }
                ],
                "description": "Payload to create time entry"
              }
            },
            "text/plain": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TimesheetCreateRequestDto"
                  }
                ],
                "description": "Payload to create time entry"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TimesheetCreateRequestDto"
                  }
                ],
                "description": "Payload to create time entry"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TimesheetCreateRequestDto"
                  }
                ],
                "description": "Payload to create time entry"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetResponseDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetResponseDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetResponseDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetResponseDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetResponseDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetResponseDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetResponseDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetResponseDtoAstroResult"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Timesheet"
        ],
        "summary": "Query TimeSheets",
        "description": "Retrieve a list of TimeSheets that match an [OData formatted query](https://www.odata.org/).\n\nTime Sheets is a list of times per task \r\n\r\n### Data Definition\r\n\r\nSee [TimesheetDto](https://developer.projectmanager.com/reference/timesheetdto) for the complete data definition.",
        "parameters": [
          {
            "name": "$top",
            "in": "query",
            "description": "The number of records to return",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "description": "Skips the given number of records and then returns $top records",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "Filter the expression according to oData queries",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "query",
            "description": "Specify which properties should be returned",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "description": "Order collection by this field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Include related data in the response",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetDtoListAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetDtoListAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetDtoListAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetDtoListAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetDtoListAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetDtoListAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/timesheets/{timesheetId}": {
      "delete": {
        "tags": [
          "Timesheet"
        ],
        "summary": "Delete time entry",
        "description": "Delete time entry by id. \r\n\r\n### Data Definition\r\n\r\nSee [](https://developer.projectmanager.com/reference/) for the complete data definition.",
        "parameters": [
          {
            "name": "timesheetId",
            "in": "path",
            "description": "time entry id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Timesheet"
        ],
        "summary": "Update time entry",
        "description": "Updates a time entry by its unique identifier. \r\n\r\n### Data Definition\r\n\r\nSee [TimesheetResponseDto](https://developer.projectmanager.com/reference/timesheetresponsedto) for the complete data definition.",
        "parameters": [
          {
            "name": "timesheetId",
            "in": "path",
            "description": "time entry id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "payload",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TimesheetUpdateRequestDto"
                  }
                ],
                "description": "Payload to update time entry"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TimesheetUpdateRequestDto"
                  }
                ],
                "description": "Payload to update time entry"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TimesheetUpdateRequestDto"
                  }
                ],
                "description": "Payload to update time entry"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TimesheetUpdateRequestDto"
                  }
                ],
                "description": "Payload to update time entry"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TimesheetUpdateRequestDto"
                  }
                ],
                "description": "Payload to update time entry"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TimesheetUpdateRequestDto"
                  }
                ],
                "description": "Payload to update time entry"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TimesheetUpdateRequestDto"
                  }
                ],
                "description": "Payload to update time entry"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TimesheetUpdateRequestDto"
                  }
                ],
                "description": "Payload to update time entry"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TimesheetUpdateRequestDto"
                  }
                ],
                "description": "Payload to update time entry"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TimesheetUpdateRequestDto"
                  }
                ],
                "description": "Payload to update time entry"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TimesheetUpdateRequestDto"
                  }
                ],
                "description": "Payload to update time entry"
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TimesheetUpdateRequestDto"
                  }
                ],
                "description": "Payload to update time entry"
              }
            },
            "application/xml": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TimesheetUpdateRequestDto"
                  }
                ],
                "description": "Payload to update time entry"
              }
            },
            "text/plain": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TimesheetUpdateRequestDto"
                  }
                ],
                "description": "Payload to update time entry"
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TimesheetUpdateRequestDto"
                  }
                ],
                "description": "Payload to update time entry"
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TimesheetUpdateRequestDto"
                  }
                ],
                "description": "Payload to update time entry"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetResponseDtoAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetResponseDtoAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetResponseDtoAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetResponseDtoAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetResponseDtoAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetResponseDtoAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetResponseDtoAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetResponseDtoAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetResponseDtoAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/timesheets/admin-tasks": {
      "get": {
        "tags": [
          "Timesheet"
        ],
        "summary": "Returns active admin tasks that are used to report time",
        "description": "Returns active admin tasks that are used to report time not related to work on projects. I.e. annual/sick leave etc \r\n\r\n### Data Definition\r\n\r\nSee [TimesheetAdminTypeDto](https://developer.projectmanager.com/reference/timesheetadmintypedto) for the complete data definition.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetAdminTypeDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetAdminTypeDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetAdminTypeDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetAdminTypeDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetAdminTypeDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetAdminTypeDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetAdminTypeDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetAdminTypeDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetAdminTypeDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetAdminTypeDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetAdminTypeDtoListAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetAdminTypeDtoListAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetAdminTypeDtoListAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetAdminTypeDtoListAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetAdminTypeDtoListAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimesheetAdminTypeDtoListAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/users/roles": {
      "get": {
        "tags": [
          "UserRole"
        ],
        "summary": "Retrieve UserRoles",
        "description": "Retrieves the list of UserRoles defined within this Workspace.\n\nA UserRole is a name for a privilege level granted to a specific User.  The 'Global Admin' UserRole is granted to the owner of the Workspace, and this UserRole cannot be changed. You can choose which UserRole applies to a User within your Workspace. \r\n\r\n### Data Definition\r\n\r\nSee [UserRoleDto](https://developer.projectmanager.com/reference/userroledto) for the complete data definition.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/UserRoleDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/UserRoleDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/UserRoleDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/UserRoleDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/UserRoleDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/UserRoleDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/UserRoleDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/UserRoleDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/UserRoleDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/UserRoleDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/UserRoleDtoListAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRoleDtoListAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UserRoleDtoListAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserRoleDtoListAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/UserRoleDtoListAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRoleDtoListAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/workspaces": {
      "get": {
        "tags": [
          "WorkSpace"
        ],
        "summary": "Retrieve Workspaces",
        "description": "Retrieve the list of Workspaces to which the currently logged on user has access.\n\nA single User may have access to multiple Workspaces, although they can only be logged on to one Workspace at a time.  This API lists all Workspaces to which the currently logged on user is entitled to access.  To determine which Workspace a user is currently logged on use the `/api/data/me` endpoint. \r\n\r\n### Data Definition\r\n\r\nSee [WorkSpaceDto](https://developer.projectmanager.com/reference/workspacedto) for the complete data definition.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/WorkSpaceDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/WorkSpaceDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/WorkSpaceDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/WorkSpaceDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/WorkSpaceDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/WorkSpaceDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/WorkSpaceDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/WorkSpaceDtoListAstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/WorkSpaceDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/WorkSpaceDtoListAstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/WorkSpaceDtoListAstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkSpaceDtoListAstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WorkSpaceDtoListAstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorkSpaceDtoListAstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/WorkSpaceDtoListAstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkSpaceDtoListAstroResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/workspaces/{organizationId}/join": {
      "post": {
        "tags": [
          "WorkSpace"
        ],
        "summary": "Invite to Workspace",
        "description": "Invite a specific user to join a Workspace to which the current user has administrator rights.\n\nA single User may have access to multiple Workspaces, although they can only be logged on to one Workspace at a time.  This API lists all Workspaces to which the currently logged on user is entitled to access.  To determine which Workspace a user is currently logged on use the `/api/data/me` endpoint.\n\nThis API allows you to invite a specific  an invitation to join a specific Workspace. \r\n\r\n### Data Definition\r\n\r\nSee [](https://developer.projectmanager.com/reference/) for the complete data definition.",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "The unique identifier of the Organization that you are inviting a User to joi",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Information about the user which will receive the invitation",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WorkSpaceJoinDto"
                  }
                ],
                "description": "A Workspace represents a single business subscription to the ProjectManager.com service.  You\r\ncan be a member of multiple Workspaces.  Each Workspace is completely separate from all other\r\nWorkspaces and a user cannot log in to multiple Workspaces at the same time."
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WorkSpaceJoinDto"
                  }
                ],
                "description": "A Workspace represents a single business subscription to the ProjectManager.com service.  You\r\ncan be a member of multiple Workspaces.  Each Workspace is completely separate from all other\r\nWorkspaces and a user cannot log in to multiple Workspaces at the same time."
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WorkSpaceJoinDto"
                  }
                ],
                "description": "A Workspace represents a single business subscription to the ProjectManager.com service.  You\r\ncan be a member of multiple Workspaces.  Each Workspace is completely separate from all other\r\nWorkspaces and a user cannot log in to multiple Workspaces at the same time."
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WorkSpaceJoinDto"
                  }
                ],
                "description": "A Workspace represents a single business subscription to the ProjectManager.com service.  You\r\ncan be a member of multiple Workspaces.  Each Workspace is completely separate from all other\r\nWorkspaces and a user cannot log in to multiple Workspaces at the same time."
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WorkSpaceJoinDto"
                  }
                ],
                "description": "A Workspace represents a single business subscription to the ProjectManager.com service.  You\r\ncan be a member of multiple Workspaces.  Each Workspace is completely separate from all other\r\nWorkspaces and a user cannot log in to multiple Workspaces at the same time."
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WorkSpaceJoinDto"
                  }
                ],
                "description": "A Workspace represents a single business subscription to the ProjectManager.com service.  You\r\ncan be a member of multiple Workspaces.  Each Workspace is completely separate from all other\r\nWorkspaces and a user cannot log in to multiple Workspaces at the same time."
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WorkSpaceJoinDto"
                  }
                ],
                "description": "A Workspace represents a single business subscription to the ProjectManager.com service.  You\r\ncan be a member of multiple Workspaces.  Each Workspace is completely separate from all other\r\nWorkspaces and a user cannot log in to multiple Workspaces at the same time."
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WorkSpaceJoinDto"
                  }
                ],
                "description": "A Workspace represents a single business subscription to the ProjectManager.com service.  You\r\ncan be a member of multiple Workspaces.  Each Workspace is completely separate from all other\r\nWorkspaces and a user cannot log in to multiple Workspaces at the same time."
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WorkSpaceJoinDto"
                  }
                ],
                "description": "A Workspace represents a single business subscription to the ProjectManager.com service.  You\r\ncan be a member of multiple Workspaces.  Each Workspace is completely separate from all other\r\nWorkspaces and a user cannot log in to multiple Workspaces at the same time."
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WorkSpaceJoinDto"
                  }
                ],
                "description": "A Workspace represents a single business subscription to the ProjectManager.com service.  You\r\ncan be a member of multiple Workspaces.  Each Workspace is completely separate from all other\r\nWorkspaces and a user cannot log in to multiple Workspaces at the same time."
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WorkSpaceJoinDto"
                  }
                ],
                "description": "A Workspace represents a single business subscription to the ProjectManager.com service.  You\r\ncan be a member of multiple Workspaces.  Each Workspace is completely separate from all other\r\nWorkspaces and a user cannot log in to multiple Workspaces at the same time."
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WorkSpaceJoinDto"
                  }
                ],
                "description": "A Workspace represents a single business subscription to the ProjectManager.com service.  You\r\ncan be a member of multiple Workspaces.  Each Workspace is completely separate from all other\r\nWorkspaces and a user cannot log in to multiple Workspaces at the same time."
              }
            },
            "application/xml": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WorkSpaceJoinDto"
                  }
                ],
                "description": "A Workspace represents a single business subscription to the ProjectManager.com service.  You\r\ncan be a member of multiple Workspaces.  Each Workspace is completely separate from all other\r\nWorkspaces and a user cannot log in to multiple Workspaces at the same time."
              }
            },
            "text/plain": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WorkSpaceJoinDto"
                  }
                ],
                "description": "A Workspace represents a single business subscription to the ProjectManager.com service.  You\r\ncan be a member of multiple Workspaces.  Each Workspace is completely separate from all other\r\nWorkspaces and a user cannot log in to multiple Workspaces at the same time."
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WorkSpaceJoinDto"
                  }
                ],
                "description": "A Workspace represents a single business subscription to the ProjectManager.com service.  You\r\ncan be a member of multiple Workspaces.  Each Workspace is completely separate from all other\r\nWorkspaces and a user cannot log in to multiple Workspaces at the same time."
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WorkSpaceJoinDto"
                  }
                ],
                "description": "A Workspace represents a single business subscription to the ProjectManager.com service.  You\r\ncan be a member of multiple Workspaces.  Each Workspace is completely separate from all other\r\nWorkspaces and a user cannot log in to multiple Workspaces at the same time."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AstroResult"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApiKeyCreateDto": {
        "type": "object",
        "properties": {
          "tokenName": {
            "type": "string",
            "description": "Name of token",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents a new api access key entity"
      },
      "ApiKeyDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Internal access token id",
            "format": "uuid"
          },
          "createdBy": {
            "type": "string",
            "description": "Created by user id",
            "format": "uuid"
          },
          "expires": {
            "type": "string",
            "description": "Expires date",
            "format": "date-time"
          },
          "apiKey": {
            "type": "string",
            "description": "Bearer Key",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of token",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents api access key entity"
      },
      "ApiKeyDtoAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApiKeyDto"
              }
            ],
            "description": "Represents api access key entity",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      },
      "ApiKeyDtoListAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiKeyDto"
            },
            "description": "If the API call succeeded, this will contain the results.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      },
      "AssigneeUpsertDto": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the TaskAssignee to which work is being assigned.",
            "format": "uuid"
          },
          "assignedEffort": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "description": "The new amount of effort to assign for this Resource.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "An AssigneeUpsert is a create-or-update process that will either create\r\na new assignment of effort to a TaskAssignee or update an existing effort\r\namount for an existing TaskAssignee."
      },
      "AstroError": {
        "type": "object",
        "properties": {
          "technicalError": {
            "type": "string",
            "description": "A technical description of the error that occurred.  Not suitable for\r\ndisplay to end users.",
            "nullable": true,
            "readOnly": true
          },
          "additionalErrors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "If additional errors beyond the main error in `Message` occurred, they will be\r\nlisted here as individual messages.",
            "nullable": true
          },
          "message": {
            "type": "string",
            "description": "A description of the error that occurred.  If your application has a user\r\ninterface, show this message to explain what went wrong.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Information about an error that occurred within the ProjectManager API."
      },
      "AstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nUse the `Success` value to determine if the API call succeeded.  If the API call failed, you can\r\nexamine the `Error` value to determine what went wrong."
      },
      "AuthenticationStatusDto": {
        "type": "object",
        "properties": {
          "connected": {
            "type": "boolean",
            "description": "Set to true if the connection was successful. False is not supported right now."
          }
        },
        "additionalProperties": false,
        "description": "Set the connection status of an integration"
      },
      "ChangeSetStatusDto": {
        "type": "object",
        "properties": {
          "changeSetId": {
            "type": "string",
            "description": "The unique identifier of this Changeset",
            "format": "uuid"
          },
          "id": {
            "type": "string",
            "description": "The unique identifier of the entity affected by this Changeset.  For example, if this\r\nChangeset was created for a Task, this value will be the unique identifier for the Task.",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Returns the id of a specific ChangeSet"
      },
      "ChangeSetStatusDtoAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChangeSetStatusDto"
              }
            ],
            "description": "Returns the id of a specific ChangeSet",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      },
      "ChangeSetStatusDtoListAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChangeSetStatusDto"
            },
            "description": "If the API call succeeded, this will contain the results.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      },
      "ChangesetGetResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of this Changeset.",
            "format": "uuid"
          },
          "success": {
            "type": "boolean",
            "description": "True if this Changeset was successfully applied.  If the Changeset has not been applied,\r\nthis value is null.",
            "nullable": true
          },
          "state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/State"
              }
            ],
            "description": "A status flag that indicates the progress of the Changeset through resolution."
          }
        },
        "additionalProperties": false,
        "description": "A Changeset is an individual edit that has been made to a project.  Since multiple users can\r\nedit a project at the same time, individual Changesets are applied in a sequential fashion. If\r\na Changeset causes a conflict or cannot be applied, it will be rejected.  You can examine a\r\nChangeset to determine its conflict resolution status."
      },
      "ChangesetGetResponseDtoAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChangesetGetResponseDto"
              }
            ],
            "description": "A Changeset is an individual edit that has been made to a project.  Since multiple users can\r\nedit a project at the same time, individual Changesets are applied in a sequential fashion. If\r\na Changeset causes a conflict or cannot be applied, it will be rejected.  You can examine a\r\nChangeset to determine its conflict resolution status.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      },
      "CreateIntegrationInstanceDto": {
        "type": "object",
        "properties": {
          "config": {
            "description": "Extra metadata required by this Integration Instance.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The Integrations API is intended for use by ProjectManager and its business\r\ndevelopment partners.  Please contact ProjectManager's sales team to request use of this API."
      },
      "CreateProjectFieldDto": {
        "required": [
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string",
            "description": "The name of this Field"
          },
          "type": {
            "minLength": 1,
            "type": "string",
            "description": "The type of the Field.  Valid types are the following:\r\n* Text\r\n* Number\r\n* Date\r\n* Currency\r\n* Dropdown\r\n            \r\nAttempting to create a field with any Type other than these will\r\nreturn an error.\r\n            \r\nFor Dropdown Field, specify the list of choices in the `Options`\r\nfield.\r\nTODO - This object needs to support a list of options, in case dropdown is selected"
          }
        },
        "additionalProperties": false,
        "description": "A ProjectField is a custom field defined within your Workspace.  You can define ProjectFields\r\nfor any integration purpose that is important to your business.  Each ProjectField has a data\r\ntype as well as options in how it is handled.  ProjectFields can be edited for each Project\r\nwithin your Workspace."
      },
      "CreateProjectFieldResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of this Field",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "The name of this Field",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A ProjectField is a custom field defined within your Workspace.  You can define ProjectFields\r\nfor any integration purpose that is important to your business.  Each ProjectField has a data\r\ntype as well as options in how it is handled.  ProjectFields can be edited for each Project\r\nwithin your Workspace."
      },
      "CreateProjectFieldResponseDtoAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateProjectFieldResponseDto"
              }
            ],
            "description": "A ProjectField is a custom field defined within your Workspace.  You can define ProjectFields\r\nfor any integration purpose that is important to your business.  Each ProjectField has a data\r\ntype as well as options in how it is handled.  ProjectFields can be edited for each Project\r\nwithin your Workspace.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      },
      "CreateResourceSkillDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string",
            "description": "The name of this Skill."
          }
        },
        "additionalProperties": false,
        "description": "This is a skill that can be allocated to a resource."
      },
      "CreateResourceTeamDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string",
            "description": "The name of this Team."
          }
        },
        "additionalProperties": false,
        "description": "A resource can be allocated a team."
      },
      "CreateTaskFieldRequestDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the TaskField",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "The type of this TaskField.  Valid types are the following:\r\n* Text\r\n* Number\r\n* Date\r\n* Checkbox\r\n* Currency\r\n* Dropdown",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A TaskField is a custom field defined within your Workspace for a specific Project.  You can\r\ndefine TaskFields for any integration purpose that is important to your business.  Each\r\nTaskField has a data type as well as options in how it is handled.  TaskFields can be edited\r\nfor each Task inside this Project."
      },
      "DashboardSettingCreateDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID",
            "format": "uuid",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "description": "User ID",
            "format": "uuid",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Either custom or one of DashboardType enum",
            "nullable": true
          },
          "reactGridLayout": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReactGridLayoutDto"
              }
            ],
            "description": "React grid layout configuration",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "User dashboard create or update dto"
      },
      "DashboardSettingDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "description": "User ID",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "description": "Either custom or one of DashboardType enum",
            "nullable": true
          },
          "reactGridLayout": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReactGridLayoutDto"
              }
            ],
            "description": "React grid layout configuration",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The Dashboards API is intended for use by ProjectManager"
      },
      "DashboardSettingDtoAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DashboardSettingDto"
              }
            ],
            "description": "The Dashboards API is intended for use by ProjectManager",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      },
      "DashboardType": {
        "enum": [
          "MySummary",
          "PortfolioSummary"
        ],
        "type": "string"
      },
      "DeleteProjectFieldDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the ProjectField being deleted",
            "format": "uuid",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the ProjectField being deleted",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A ProjectField is a custom field defined within your Workspace.  You can define ProjectFields\r\nfor any integration purpose that is important to your business.  Each ProjectField has a data\r\ntype as well as options in how it is handled.  ProjectFields can be edited for each Project\r\nwithin your Workspace."
      },
      "DirectLinkDto": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "The URL to use to authenticate with the Integration Provider.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "This class contains the URL to use to authenticate with the Integration Provider."
      },
      "DirectLinkDtoAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DirectLinkDto"
              }
            ],
            "description": "This class contains the URL to use to authenticate with the Integration Provider.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      },
      "DiscussionCreateDto": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "The text of the comment to add to the discussion, in Markdown format.\r\n            \r\nDiscussion comments are formatted using [Markdown](https://www.markdownguide.org/)\r\nand users should be aware that HTML embedding is not permitted due to the risk of cross-site\r\nattacks and other embedding challenges.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Tasks can have discussions attached to them.  These discussions can include text with simple\r\nformatting.  Discussion comments are formatted using [Markdown](https://www.markdownguide.org/)\r\nand users should be aware that HTML embedding is not permitted due to the risk of cross-site\r\nattacks and other embedding challenges."
      },
      "DiscussionCreateResponseDto": {
        "type": "object",
        "properties": {
          "discussionCommentId": {
            "type": "string",
            "description": "The unique identifier of the discussion comment created.",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Tasks can have discussions attached to them.  These discussions can include text with simple\r\nformatting.  Discussion comments are formatted using [Markdown](https://www.markdownguide.org/)\r\nand users should be aware that HTML embedding is not permitted due to the risk of cross-site\r\nattacks and other embedding challenges."
      },
      "DiscussionCreateResponseDtoAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscussionCreateResponseDto"
              }
            ],
            "description": "Tasks can have discussions attached to them.  These discussions can include text with simple\r\nformatting.  Discussion comments are formatted using [Markdown](https://www.markdownguide.org/)\r\nand users should be aware that HTML embedding is not permitted due to the risk of cross-site\r\nattacks and other embedding challenges.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      },
      "DiscussionDto": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "The text of the comment to add to the discussion, in Markdown format.\r\n            \r\nDiscussion comments are formatted using [Markdown](https://www.markdownguide.org/)\r\nand users should be aware that HTML embedding is not permitted due to the risk of cross-site\r\nattacks and other embedding challenges.",
            "nullable": true
          },
          "discussionCommentId": {
            "type": "string",
            "description": "The unique ID of the discussion comment.",
            "format": "uuid"
          },
          "authorId": {
            "type": "string",
            "description": "The unique ID of the resource that wrote this comment.",
            "format": "uuid"
          },
          "authorName": {
            "type": "string",
            "description": "The unique ID of the resource that wrote this comment.",
            "nullable": true
          },
          "createDate": {
            "type": "string",
            "description": "The timestamp when the comment was created.",
            "format": "date-time"
          },
          "modifyDate": {
            "type": "string",
            "description": "The timestamp when the comment was modified, if it is different from the create date.",
            "format": "date-time",
            "nullable": true
          },
          "emoji": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscussionEmoji"
            },
            "description": "The list of emoji reactions to this discussion comment, if any.  This object will\r\nbe null if no emoji reactions have been recorded on this discussion comment.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Tasks can have discussions attached to them.  These discussions can include text with simple\r\nformatting.  Discussion comments are formatted using [Markdown](https://www.markdownguide.org/)\r\nand users should be aware that HTML embedding is not permitted due to the risk of cross-site\r\nattacks and other embedding challenges."
      },
      "DiscussionDtoListAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscussionDto"
            },
            "description": "If the API call succeeded, this will contain the results.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      },
      "DiscussionEmoji": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the emoji",
            "nullable": true
          },
          "userIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The list of user IDs of the users who tagged these emoji",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A reaction to a specific comment within a discussion thread."
      },
      "FileDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The identifier for this file",
            "format": "uuid"
          },
          "projectId": {
            "type": "string",
            "description": "If specified this file belongs to a project. The value is the id of  this project",
            "format": "uuid",
            "nullable": true
          },
          "taskId": {
            "type": "string",
            "description": "If specified, the file has been associated with this task.",
            "format": "uuid",
            "nullable": true
          },
          "ownerId": {
            "type": "string",
            "description": "The reference for who uploaded the file",
            "format": "uuid"
          },
          "createdDate": {
            "type": "string",
            "description": "The UTC time the file was created.",
            "format": "date-time"
          },
          "folderId": {
            "type": "string",
            "description": "A reference to the folder",
            "format": "uuid"
          },
          "fileType": {
            "type": "string",
            "description": "The type of the file",
            "nullable": true
          },
          "fileTypeLabel": {
            "type": "string",
            "description": "A user friendly label for the file type",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "description": "Size of the file in bytes",
            "format": "int32"
          },
          "downloadPath": {
            "type": "string",
            "description": "Path to download the file",
            "nullable": true
          },
          "deleted": {
            "type": "boolean",
            "description": "Is the file in the trash can"
          },
          "type": {
            "type": "string",
            "description": "Defines the object type the file belongs to.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the file",
            "nullable": true
          },
          "entityOwnerId": {
            "type": "string",
            "description": "Id of owner of parent entity",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Represents a file in project manager"
      },
      "FileDtoAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FileDto"
              }
            ],
            "description": "Represents a file in project manager",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      },
      "GetProjectFieldsResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of this Field",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "The name of this Field",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "The type of the Field.  Valid types are the following:\r\n* Text\r\n* Number\r\n* Date\r\n* Currency\r\n* Dropdown\r\n            \r\nAttempting to create a field with any Type other than these will\r\nreturn an error.\r\n            \r\nFor Dropdown Field, specify the list of choices in the `Options`\r\nfield.",
            "nullable": true
          },
          "entityType": {
            "type": "string",
            "description": "The entity type of the Field, either `projects` or `tasks`.",
            "nullable": true
          },
          "options": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of options for use of this Field.  This is only valid if\r\nthe `Type` value is set to `Dropdown`.\r\n            \r\nWhen a custom Field of type `DropDown` is shown to a user in the\r\napplication, they will be able to choose one of the `Options` in this\r\nlist.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents either a ProjectField or a TaskField, depending on the value of the\r\n`EntityType` for this object.\r\n            \r\nA ProjectField is a custom field defined within your Workspace.  You can define ProjectFields\r\nfor any integration purpose that is important to your business.  Each ProjectField has a data\r\ntype as well as options in how it is handled.  ProjectFields can be edited for each Project\r\nwithin your Workspace.\r\n            \r\nA TaskField is a custom field defined within your Workspace for a specific Project.  You can\r\ndefine TaskFields for any integration purpose that is important to your business.  Each\r\nTaskField has a data type as well as options in how it is handled.  TaskFields can be edited\r\nfor each Task inside this Project."
      },
      "GetProjectFieldsResponseDtoListAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetProjectFieldsResponseDto"
            },
            "description": "If the API call succeeded, this will contain the results.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      },
      "GetTaskFieldsResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of this TaskField",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "The name of this TaskField",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "The type of this TaskField.  Valid types are the following:\r\n* Text\r\n* Number\r\n* Date\r\n* Checkbox\r\n* Currency\r\n* Dropdown\r\n            \r\nAttempting to create a field with any Type other than these will\r\nreturn an error.\r\n            \r\nFor Dropdown TaskFields, specify the list of choices in the `Options`\r\nfield.",
            "nullable": true
          },
          "options": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of options for use of this TaskField.  This is only valid if\r\nthe `Type` value is set to `Dropdown`.\r\n            \r\nWhen a custom TaskField of type `DropDown` is shown to a user in the\r\napplication, they will be able to choose one of the `Options` in this\r\nlist.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A TaskField is a custom field defined within your Workspace for a specific Project.  You can\r\ndefine TaskFields for any integration purpose that is important to your business.  Each\r\nTaskField has a data type as well as options in how it is handled.  TaskFields can be edited\r\nfor each Task inside this Project."
      },
      "GetTaskFieldsResponseDtoListAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetTaskFieldsResponseDto"
            },
            "description": "If the API call succeeded, this will contain the results.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      },
      "HttpStatusCode": {
        "enum": [
          "Continue",
          "SwitchingProtocols",
          "Processing",
          "EarlyHints",
          "OK",
          "Created",
          "Accepted",
          "NonAuthoritativeInformation",
          "NoContent",
          "ResetContent",
          "PartialContent",
          "MultiStatus",
          "AlreadyReported",
          "IMUsed",
          "MultipleChoices",
          "MovedPermanently",
          "Found",
          "SeeOther",
          "NotModified",
          "UseProxy",
          "Unused",
          "TemporaryRedirect",
          "PermanentRedirect",
          "BadRequest",
          "Unauthorized",
          "PaymentRequired",
          "Forbidden",
          "NotFound",
          "MethodNotAllowed",
          "NotAcceptable",
          "ProxyAuthenticationRequired",
          "RequestTimeout",
          "Conflict",
          "Gone",
          "LengthRequired",
          "PreconditionFailed",
          "RequestEntityTooLarge",
          "RequestUriTooLong",
          "UnsupportedMediaType",
          "RequestedRangeNotSatisfiable",
          "ExpectationFailed",
          "MisdirectedRequest",
          "UnprocessableEntity",
          "Locked",
          "FailedDependency",
          "UpgradeRequired",
          "PreconditionRequired",
          "TooManyRequests",
          "RequestHeaderFieldsTooLarge",
          "UnavailableForLegalReasons",
          "InternalServerError",
          "NotImplemented",
          "BadGateway",
          "ServiceUnavailable",
          "GatewayTimeout",
          "HttpVersionNotSupported",
          "VariantAlsoNegotiates",
          "InsufficientStorage",
          "LoopDetected",
          "NotExtended",
          "NetworkAuthenticationRequired"
        ],
        "type": "string"
      },
      "IdDto": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique identifier.  To determine the meaning of this unique identifier,\r\nsee the field to which this value is attached.",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "When uploading a list of unique identifiers to the API, this data structure\r\nrepresents one individual unique identifier within the list."
      },
      "IntegrationCategoryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of this Integration Category.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "A friendly name for this Integration Category.",
            "nullable": true
          },
          "shortId": {
            "type": "string",
            "description": "A short identifier that uniquely identifies this Integration Category.",
            "nullable": true
          },
          "integrationShortIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of short identifiers for Integrations available within this Integration Category.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Information about a category of Integrations available on the Marketplace."
      },
      "IntegrationCategoryDtoListAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntegrationCategoryDto"
            },
            "description": "If the API call succeeded, this will contain the results.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      },
      "IntegrationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of this Integration",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "The friendly name of this Integration",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "A description of this Integration that can be shared with users",
            "nullable": true
          },
          "shortId": {
            "type": "string",
            "description": "A short ID that uniquely identifies this Integration",
            "nullable": true
          },
          "isMultiInstance": {
            "type": "boolean",
            "description": "True if this Integration allows multiple Instances.\r\n            \r\nAn example of a multi-Instance Integration is one that can be connected to many\r\ndifferent folders or channels within a remote application."
          },
          "config": {
            "description": "Extra configuration metadata for this Instance.",
            "nullable": true
          },
          "licenseSkus": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of SKUS for this Integration.",
            "nullable": true
          },
          "instances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntegrationInstanceDto"
            },
            "description": "For multi-Instance Integrations, this contains the list of IntegrationInstances.",
            "nullable": true
          },
          "enabled": {
            "type": "boolean",
            "description": "True if this Integration is enabled for the current Workspace."
          },
          "authenticated": {
            "type": "boolean",
            "description": "True if the user has authenticated"
          }
        },
        "additionalProperties": false,
        "description": "The Integrations API is intended for use by ProjectManager and its business\r\ndevelopment partners.  Please contact ProjectManager's sales team to request use of this API."
      },
      "IntegrationDtoAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IntegrationDto"
              }
            ],
            "description": "The Integrations API is intended for use by ProjectManager and its business\r\ndevelopment partners.  Please contact ProjectManager's sales team to request use of this API.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      },
      "IntegrationDtoListAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntegrationDto"
            },
            "description": "If the API call succeeded, this will contain the results.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      },
      "IntegrationInstanceDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of this IntegrationInstance",
            "format": "uuid"
          },
          "integrationShortId": {
            "type": "string",
            "description": "A short ID that uniquely identifies this IntegrationInstance",
            "nullable": true
          },
          "config": {
            "description": "Metadata for this IntegrationInstance",
            "nullable": true
          },
          "enabledBy": {
            "type": "string",
            "description": "The unique identifier of the user who enabled this IntegrationInstance",
            "format": "uuid"
          },
          "createDate": {
            "type": "string",
            "description": "Timestamp when this record was created",
            "format": "date-time"
          },
          "modifyDate": {
            "type": "string",
            "description": "Timestamp when this record was most recently modified",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "The Integrations API is intended for use by ProjectManager and its business\r\ndevelopment partners.  Please contact ProjectManager's sales team to request use of this API."
      },
      "IntegrationProviderDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of this Provider.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "The friendly name of this Provider.",
            "nullable": true
          },
          "shortId": {
            "type": "string",
            "description": "A short ID that uniquely identifies this Provider.",
            "nullable": true
          },
          "summary": {
            "type": "string",
            "description": "A short summary of this Provider and their service.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "A longer description of this Provider and their service.",
            "nullable": true
          },
          "licenseSkus": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of available license SKUs for this Provider.",
            "nullable": true
          },
          "categoryShortIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of category IDs that this Provider exists within.",
            "nullable": true
          },
          "activated": {
            "type": "boolean",
            "description": "True if this Provider is available for use."
          },
          "authenticated": {
            "type": "boolean",
            "description": "True if this Provider requires authentication."
          },
          "integrations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntegrationDto"
            },
            "description": "The list of available Integrations for this Provider.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The Integrations API is intended for use by ProjectManager and its business\r\ndevelopment partners.  Please contact ProjectManager's sales team to request use of this API."
      },
      "IntegrationProviderDtoListAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntegrationProviderDto"
            },
            "description": "If the API call succeeded, this will contain the results.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      },
      "LicenseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of this License.",
            "format": "uuid"
          },
          "licenseSku": {
            "type": "string",
            "description": "The SKU code of this License, used for billing purposes.",
            "nullable": true
          },
          "bundleSku": {
            "type": "string",
            "description": "The SKU code of the bundle of this License, used for billing purposes.",
            "nullable": true
          },
          "optional": {
            "type": "boolean",
            "description": "True if this license is optional."
          }
        },
        "additionalProperties": false,
        "description": "A License represents a subscription to a particular product or bundle of products\r\nwithin ProjectManager."
      },
      "LicenseDtoListAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LicenseDto"
            },
            "description": "If the API call succeeded, this will contain the results.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      },
      "NameDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string",
            "description": "A name.  To determine the meaning of this name, see the field to which this\r\nvalue is attached in the parent object."
          }
        },
        "additionalProperties": false,
        "description": "When uploading a list of names to an API, this data structure represents an\r\nindividual name within the list."
      },
      "NewIntegrationInstanceDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the newly created IntegrationInstance.",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "The Integrations API is intended for use by ProjectManager and its business\r\ndevelopment partners.  Please contact ProjectManager's sales team to request use of this API."
      },
      "NewIntegrationInstanceDtoAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NewIntegrationInstanceDto"
              }
            ],
            "description": "The Integrations API is intended for use by ProjectManager and its business\r\ndevelopment partners.  Please contact ProjectManager's sales team to request use of this API.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      },
      "PermissionOptionsDto": {
        "type": "object",
        "properties": {
          "none": {
            "type": "boolean",
            "description": "If true, the users access can be removed"
          },
          "collaborate": {
            "type": "boolean",
            "description": "If true the user can be changed to collaborator"
          },
          "guest": {
            "type": "boolean",
            "description": "If true a user can be set as guest, a guest can only be Guest or None"
          },
          "editor": {
            "type": "boolean",
            "description": "If true the user can be changed to editor"
          },
          "manager": {
            "type": "boolean",
            "description": "If true the user can be changed to Manager"
          }
        },
        "additionalProperties": false,
        "description": "Specifies the permissions a member can be changed to on a project.\r\nThis objects values can change based on the logged in user and the role they have."
      },
      "ProjectChargeCodeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of this ChargeCode",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "The name of this ChargeCode",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A ChargeCode is a code used to identify costs within your Projects.  Each ChargeCode has\r\na name and a unique identifier.  ChargeCodes are defined per Workspace and are shared\r\namong Projects."
      },
      "ProjectChargeCodeDtoListAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectChargeCodeDto"
            },
            "description": "If the API call succeeded, this will contain the results.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      },
      "ProjectCreateAccessDto": {
        "type": "object",
        "properties": {
          "everyone": {
            "type": "boolean",
            "description": "If set to true every user will get access to this project"
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectCreateAccessMemberDto"
            },
            "description": "If everyone is set to false the list of members will be used to give people access",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Specify who has access to a newly created project"
      },
      "ProjectCreateAccessMemberDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "Member's id",
            "format": "uuid"
          },
          "permission": {
            "type": "string",
            "description": "Member's role in the project",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents project member that have access to new project"
      },
      "ProjectCreateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the Project.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "An optional description of the Project",
            "nullable": true
          },
          "folderId": {
            "type": "string",
            "description": "The unique identifier of the folder of this project, or null if not assigned.",
            "format": "uuid",
            "nullable": true
          },
          "projectAccess": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectCreateAccessDto"
              }
            ],
            "description": "If you wish to grant access to this Project to a selected list of people during creation,\r\nprovide a list of ProjectMembers here.  If you do not specify anyone, this Project will\r\nbe available to only yourself.",
            "nullable": true
          },
          "customerId": {
            "type": "string",
            "description": "The unique identifier of the customer for this project, or null if not customer specific",
            "format": "uuid",
            "nullable": true
          },
          "managerId": {
            "type": "string",
            "description": "The unique identifier of the manager of this project, or null if not assigned.",
            "format": "uuid",
            "nullable": true
          },
          "chargeCodeId": {
            "type": "string",
            "description": "The unique identifier of the ChargeCode for this Project, if one has been selected.",
            "format": "uuid",
            "nullable": true
          },
          "statusId": {
            "type": "string",
            "description": "The ProjectStatus chosen for this Project, if one has been selected.",
            "format": "uuid",
            "nullable": true
          },
          "priorityId": {
            "type": "string",
            "description": "The ProjectPriority level of this Project, if one has been selected.",
            "format": "uuid",
            "nullable": true
          },
          "hourlyRate": {
            "type": "number",
            "description": "The default hourly rate for work on this Project.  This rate will be used\r\nif an assignee working on this Project does not have an hourly rate configured\r\nin their profile.",
            "format": "double",
            "nullable": true
          },
          "budget": {
            "type": "number",
            "description": "The proposed budget for this Project.",
            "format": "double",
            "nullable": true
          },
          "statusUpdate": {
            "type": "string",
            "description": "Contains an optional status update for Projects that can be used to summarize\r\nthe status of multiple Projects at a glance.\r\n            \r\nYou can edit the StatusUpdate field on the Portfolio page of the application.",
            "nullable": true
          },
          "template": {
            "type": "boolean",
            "description": "True if this Project is a template that will be reused as a framework\r\nfor future Projects.\r\n            \r\nYou can save a Project as a template and reuse it in the future for creating\r\nadditional Projects.  If this Project is a template, set this to `true` and this\r\ntemplate will be available to choose from when creating a new Project within the\r\napplication."
          },
          "templateId": {
            "type": "string",
            "description": "When creating a Project, you can optionally specify a Template to use to construct\r\nthe Project using a collection of pre-designed Tasks.\r\n            \r\nSpecifying a value in the TemplateId field will copy default settings for Tasks from\r\nyour template Project into the newly created Project.\r\n            \r\nThis field does not support custom templates.  You must choose from a list of\r\nProjectManager-supplied templates.",
            "format": "uuid",
            "nullable": true
          },
          "targetDate": {
            "type": "string",
            "description": "The target planned completion date for this Project, or null if one has\r\nnot been selected.  This value can be updated in the Project Settings\r\npage or the Portfolio Project page within the application.",
            "format": "date",
            "nullable": true
          },
          "favorite": {
            "type": "boolean",
            "description": "True if this Project is marked as favorite for current user",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A Project is a collection of Tasks that contributes towards a goal.  Within a Project, Tasks\r\nrepresent individual items of work that team members must complete.  The sum total of Tasks\r\nwithin a Project represents the work to be completed for that Project.\r\n            \r\nFields that cannot be selected during a CreateProject API call are not visible on this\r\ndata model."
      },
      "ProjectCustomerDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of this ProjectCustomer",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "The name of this ProjectCustomer",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A ProjectCustomer is a code used to identify costs within your Projects.  Each\r\nProjectCustomer has a name and a unique identifier.  ChargeCodes are defined per\r\nWorkspace and are shared among Projects."
      },
      "ProjectCustomerDtoListAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectCustomerDto"
            },
            "description": "If the API call succeeded, this will contain the results.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      },
      "ProjectDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the Project.  This value is set by the system and cannot\r\nbe set with a CreateProject or changed with an UpdateProject call.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "The name of the Project.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "An optional description of the Project",
            "nullable": true
          },
          "shortCode": {
            "type": "string",
            "description": "A shortened name that will be used when reporting on Projects.  This short\r\nname can be edited in the Project Settings page within the application\r\nand can be any text you wish.",
            "nullable": true
          },
          "shortId": {
            "type": "string",
            "description": "A short identifier that uniquely identifies this Project within your Workspace\r\nusing a single letter followed by a number.  This code can be used for APIs\r\nthat accept Project unique identifiers.\r\n            \r\nYou can observe the short ID within the application by observing the URL of\r\nthe page you visit when you click on this project.  The page's URL will appear\r\nin the form `https://pm.app.projectmanager.com/project/board/D16` - in this\r\nexample, the `ShortId` is `D16`.\r\n            \r\nThis code is automatically assigned for you and cannot be changed.",
            "nullable": true
          },
          "folder": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectFolderDto"
              }
            ],
            "description": "If this Project is grouped within a ProjectFolder, this contains the ProjectFolder information.",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectStatusDto"
              }
            ],
            "description": "The ProjectStatus chosen for this Project.",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "description": "The earliest planned or actual start date of tasks on the project.\r\n            \r\nThis field is calculated automatically and cannot be changed.",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "The latest planned or actual finish date of tasks on the project.\r\n            \r\nThis field is calculated automatically and cannot be changed.",
            "format": "date-time",
            "nullable": true
          },
          "targetDate": {
            "type": "string",
            "description": "The target planned completion date for this Project, or null if one has\r\nnot been selected.  This value can be updated in the Project Settings\r\npage or the Portfolio Project page within the application.",
            "format": "date",
            "nullable": true
          },
          "plannedStartDate": {
            "type": "string",
            "description": "The planned start date for this Project. This is calculated based\r\noff of the earliest task start date",
            "format": "date-time",
            "nullable": true
          },
          "plannedFinishDate": {
            "type": "string",
            "description": "The planned start date for this Project. This is calculated based\r\noff of the latest task finish date",
            "format": "date-time",
            "nullable": true
          },
          "actualStartDate": {
            "type": "string",
            "description": "The actual start date for this Project. This is calculated based\r\non the earliest task actual start date, or null if no projects have\r\nbeen started",
            "format": "date-time",
            "nullable": true
          },
          "actualFinishDate": {
            "type": "string",
            "description": "The actual finish date for this Project. This is calculated based\r\non the latest task actual finish date, or null if no projects have\r\nbeen finished",
            "format": "date-time",
            "nullable": true
          },
          "priority": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectPriorityDto"
              }
            ],
            "description": "The ProjectPriority level of this Project, if defined.",
            "nullable": true
          },
          "chargeCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectChargeCodeDto"
              }
            ],
            "description": "The ChargeCode of this Project, if defined.",
            "nullable": true
          },
          "manager": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectManagerDto"
              }
            ],
            "description": "Information about the manager of this project, if one has been assigned.",
            "nullable": true
          },
          "customer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectCustomerDto"
              }
            ],
            "description": "Information about the manager of this project, if one has been specified.",
            "nullable": true
          },
          "budget": {
            "type": "number",
            "description": "The proposed budget for this Project.",
            "format": "double",
            "nullable": true
          },
          "hourlyRate": {
            "type": "number",
            "description": "The default hourly rate for work on this Project.  This rate will be used\r\nif an assignee working on this Project does not have an hourly rate configured\r\nin their profile.",
            "format": "double",
            "nullable": true
          },
          "statusUpdate": {
            "type": "string",
            "description": "Contains an optional status update for Projects that can be used to summarize\r\nthe status of multiple Projects at a glance.\r\n            \r\nYou can edit the StatusUpdate field on the Portfolio page of the application.",
            "nullable": true
          },
          "modifyDate": {
            "type": "string",
            "description": "The timestamp in UTC when the Project was most recently modified.\r\n            \r\nThis field is automatically determined by the system when this Project is modified\r\nand cannot be directly changed by the user.",
            "format": "date-time"
          },
          "createDate": {
            "type": "string",
            "description": "The timestamp in UTC when the Project was created.\r\n            \r\nThis field is automatically determined by the system when this Project is created\r\nand cannot be changed by the user.",
            "format": "date-time"
          },
          "isTemplate": {
            "type": "boolean",
            "description": "True if this Project is a template that will be reused as a framework\r\nfor future Projects."
          },
          "favorite": {
            "type": "boolean",
            "description": "True if this Project is marked as favorite for current user"
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectMemberDto"
            },
            "description": "The members of the project",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A Project is a collection of Tasks that contributes towards a goal.  Within a Project, Tasks\r\nrepresent individual items of work that team members must complete.  The sum total of Tasks\r\nwithin a Project represents the work to be completed for that Project."
      },
      "ProjectDtoAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectDto"
              }
            ],
            "description": "A Project is a collection of Tasks that contributes towards a goal.  Within a Project, Tasks\r\nrepresent individual items of work that team members must complete.  The sum total of Tasks\r\nwithin a Project represents the work to be completed for that Project.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      },
      "ProjectDtoListAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectDto"
            },
            "description": "If the API call succeeded, this will contain the results.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      },
      "ProjectFolderDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of this ProjectFolder.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "The name of this ProjectFolder.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A ProjectFolder is a named storage location that can contain Projects."
      },
      "ProjectFolderDtoListAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectFolderDto"
            },
            "description": "If the API call succeeded, this will contain the results.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      },
      "ProjectManagerDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of this ProjectManager",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "The name of this ProjectManager",
            "nullable": true
          },
          "initials": {
            "type": "string",
            "description": "Manager initials",
            "nullable": true
          },
          "avatarUrl": {
            "type": "string",
            "description": "Avatar's url",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A ProjectManager is a person who manages a Project."
      },
      "ProjectMemberDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the user of this ProjectMember.",
            "format": "uuid"
          },
          "initials": {
            "type": "string",
            "description": "the initials of the user",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The display name of the user",
            "nullable": true
          },
          "avatarUrl": {
            "type": "string",
            "description": "Avatar URL",
            "nullable": true
          },
          "role": {
            "type": "string",
            "description": "The role of the user in the project\r\nObsolete use Permission instead",
            "nullable": true,
            "deprecated": true
          },
          "permission": {
            "type": "string",
            "description": "The current permission of the user",
            "nullable": true
          },
          "color": {
            "type": "string",
            "description": "The color for their avatar",
            "nullable": true
          },
          "permissionOptions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PermissionOptionsDto"
              }
            ],
            "description": "Specifies the permissions that you can set against the project member. This changes based on who is logged in and the role they have.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A ProjectMember is a user who can collaborate on a Project.  You can control\r\npermissions for what each ProjectMember can do and how they can interact with\r\nthe Project using this model."
      },
      "ProjectMemberDtoAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectMemberDto"
              }
            ],
            "description": "A ProjectMember is a user who can collaborate on a Project.  You can control\r\npermissions for what each ProjectMember can do and how they can interact with\r\nthe Project using this model.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      },
      "ProjectMemberDtoListAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectMemberDto"
            },
            "description": "If the API call succeeded, this will contain the results.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      },
      "ProjectMemberRoleDto": {
        "type": "object",
        "properties": {
          "role": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectPermission"
              }
            ],
            "description": "Role to apply"
          }
        },
        "additionalProperties": false,
        "description": "Dto To Describe a ProjectMember Role"
      },
      "ProjectPermission": {
        "enum": [
          "Guest",
          "Collaborate",
          "Editor",
          "Manager"
        ],
        "type": "string"
      },
      "ProjectPriorityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of this ProjectPriority.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "The name of this ProjectPriority.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A ProjectPriority is a named priority level used by your business to determine how to decide\r\nwhich Tasks are the most important.  You can name your ProjectPriority levels anything you like\r\nand you can reorganize the order of the ProjectPriority levels at any time."
      },
      "ProjectPriorityDtoListAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectPriorityDto"
            },
            "description": "If the API call succeeded, this will contain the results.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      },
      "ProjectStatusDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of this ProjectStatus.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "The name of this ProjectStatus.",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Is this a deleted status"
          }
        },
        "additionalProperties": false,
        "description": "A ProjectStatus is a named condition used by your business to categorize the completion level\r\nof Tasks and Projects within your Workspace.  You can name your ProjectStatus levels anything\r\nyou like and you can reorganize the order of the ProjectPriority levels at any time."
      },
      "ProjectStatusDtoListAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectStatusDto"
            },
            "description": "If the API call succeeded, this will contain the results.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      },
      "ProjectTemplateCategoryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of this ProjectTemplate Category.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "A friendly name for this ProjectTemplate Category.",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "description": "The overall order of this ProjectTemplate Category",
            "format": "int32"
          },
          "templates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectTemplateDto"
            },
            "description": "A list of templates in this category",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Information about a Category of ProjectTemplates."
      },
      "ProjectTemplateCategoryDtoListAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectTemplateCategoryDto"
            },
            "description": "If the API call succeeded, this will contain the results.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      },
      "ProjectTemplateDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of this ProjectTemplate.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "The name of this ProjectTemplate.\r\n            \r\nName can de used as a unique text reference for Project Templates.",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "The title of this ProjectTemplate.\r\n            \r\nTitle can be used as a description text for Project Templates.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "The full text description of this ProjectTemplate.",
            "nullable": true
          },
          "icon": {
            "type": "string",
            "description": "The icon path for this ProjectTemplate.",
            "nullable": true
          },
          "previewImage": {
            "type": "string",
            "description": "The preview image path for this ProjectTemplate.",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "description": "The overall order of this ProjectTemplate.\r\n            \r\nThis order only applies to non-Custom ProjectTemplates",
            "format": "int32"
          },
          "isCustom": {
            "type": "boolean",
            "description": "Is this ProjectTemplate a custom template.\r\n            \r\nCustom templates are Templates that have been created from existing\r\nProject definitions."
          },
          "defaultView": {
            "type": "string",
            "description": "The web default view of the template.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A ProjectTemplate is a named document that contains default Project details.\r\n            \r\nProject Templates are defined for the system and are shared among Projects."
      },
      "ProjectTemplateDtoListAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectTemplateDto"
            },
            "description": "If the API call succeeded, this will contain the results.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      },
      "ProjectUpdateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the Project.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "An optional description of the Project",
            "nullable": true
          },
          "targetDate": {
            "type": "string",
            "description": "The target planned completion date for this Project, or null if one has\r\nnot been selected.  This value can be updated in the Project Settings\r\npage or the Portfolio Project page within the application.",
            "format": "date",
            "nullable": true
          },
          "folderId": {
            "type": "string",
            "description": "To move this Project into a ProjectFolder, set this to the unique identifier of the\r\nProjectFolder.",
            "format": "uuid",
            "nullable": true
          },
          "customerId": {
            "type": "string",
            "description": "To assign this Project to a ProjectCustomer, set this to the unique identifier of the\r\nProjectCustomer.",
            "format": "uuid",
            "nullable": true
          },
          "managerId": {
            "type": "string",
            "description": "To assign this Project to a ProjectManager, set this to the unique identifier of the\r\nProjectManager.",
            "format": "uuid",
            "nullable": true
          },
          "chargeCodeId": {
            "type": "string",
            "description": "To set the ChargeCode for this Project, set this to the unique identifier of the\r\nChargeCode to use for this Project.",
            "format": "uuid",
            "nullable": true
          },
          "statusId": {
            "type": "string",
            "description": "To change the ProjectStatus of this Project, set this to the unique identifier of the\r\nProjectStatus.",
            "format": "uuid",
            "nullable": true
          },
          "priorityId": {
            "type": "string",
            "description": "To change the ProjectPriority of this Project, set this to the unique identifier of the\r\nProjectPriority.",
            "format": "uuid",
            "nullable": true
          },
          "hourlyRate": {
            "type": "number",
            "description": "To change the hourly rate of this Project, set this to the new amount.",
            "format": "double",
            "nullable": true
          },
          "budget": {
            "type": "number",
            "description": "To change the budget of this Project, set this to the new amount.",
            "format": "double",
            "nullable": true
          },
          "statusUpdate": {
            "type": "string",
            "description": "To update the Project's status text, set this to the new status text.",
            "nullable": true
          },
          "favorite": {
            "type": "boolean",
            "description": "Mark this project as favorite for the logged in user.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A Project is a collection of Tasks that contributes towards a goal.  Within a Project, Tasks\r\nrepresent individual items of work that team members must complete.  The sum total of Tasks\r\nwithin a Project represents the work to be completed for that Project.\r\n            \r\nFields that cannot be modified during an UpdateProject call are not visible on this data\r\nmodel."
      },
      "ReactGridLayoutDto": {
        "type": "object",
        "properties": {
          "lg": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReactGridLayoutItemDto"
            },
            "description": "Used for large screen size (1200)",
            "nullable": true
          },
          "md": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReactGridLayoutItemDto"
            },
            "description": "Used for medium screen size (996)",
            "nullable": true
          },
          "sm": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReactGridLayoutItemDto"
            },
            "description": "Used for small screen size (768)",
            "nullable": true
          },
          "xs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReactGridLayoutItemDto"
            },
            "description": "Used for extra small screen size (480)",
            "nullable": true
          },
          "xxs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReactGridLayoutItemDto"
            },
            "description": "Used for super small screen size (0)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A setting for react grid layout sizes"
      },
      "ReactGridLayoutItemDto": {
        "type": "object",
        "properties": {
          "w": {
            "type": "integer",
            "description": "Width",
            "format": "int32"
          },
          "h": {
            "type": "integer",
            "description": "Height",
            "format": "int32"
          },
          "x": {
            "type": "integer",
            "description": "X position",
            "format": "int32"
          },
          "y": {
            "type": "integer",
            "description": "Y position",
            "format": "int32"
          },
          "i": {
            "type": "string",
            "description": "ID",
            "nullable": true
          },
          "moved": {
            "type": "boolean",
            "description": "Moved indicator"
          },
          "static": {
            "type": "boolean",
            "description": "If true, equal to `isDraggable: false, isResizable: false`"
          }
        },
        "additionalProperties": false,
        "description": "React grid layout item object"
      },
      "ResourceApproverDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of this ResourceApprover",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "The name of this ResourceApprover",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "When managing users, you can choose who will approve a person's Timesheets. This\r\nis a ResourceApprover.  You can specify this person within the Resource object."
      },
      "ResourceCreateDto": {
        "required": [
          "firstName"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "minLength": 1,
            "type": "string",
            "description": "The first name of the person Resource.\r\n            \r\nApplies to personnel Resources only."
          },
          "lastName": {
            "type": "string",
            "description": "The last name of the person Resource.\r\n            \r\nApplies to personnel Resources only.",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "The email address of this Resource.",
            "nullable": true
          },
          "hourlyRate": {
            "minimum": 0,
            "type": "number",
            "description": "The basic hourly rate for this Resource.",
            "format": "double",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "The phone number associated with this Resource.",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "The city where this Resource is located.",
            "nullable": true
          },
          "state": {
            "type": "string",
            "description": "The state or region where this Resource is located.  This value is not constrained\r\nto a list of known states or regions.",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "description": "A text field indicating the country in which this Resource is located.\r\nThis value must be one of the following: US, NZ, AU.",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "description": "Free-form text notes about this Resource.  You may use this field to store extra\r\ninformation about the Resource.",
            "nullable": true
          },
          "roleId": {
            "type": "string",
            "description": "The Role Id associated with this Resource.\r\n            \r\nApplies to personnel Resources only.",
            "format": "uuid",
            "nullable": true
          },
          "teamIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The list of ResourceTeams to which this Resource belongs.",
            "nullable": true
          },
          "skillIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The list of ResourceSkills possessed by this Resource.",
            "nullable": true
          },
          "country": {
            "type": "string",
            "description": "Deprecated - this property is no longer being used.  Please pass in Country data on\r\nthe CountryCode property.\r\n\r\nA text field indicating the country in which this Resource is located.  This value\r\nis not constrained to the list of known ISO 3166 country names or codes.",
            "nullable": true,
            "deprecated": true
          },
          "role": {
            "type": "string",
            "description": "Deprecated - this property is no longer being used.  Please pass in Role data on\r\nthe RoleId property\r\n\r\nThe Role privileges associated with this Resource.\r\n            \r\nApplies to personnel Resources only.",
            "nullable": true,
            "deprecated": true
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Deprecated - this property is no longer being used.  Please pass in Team data on\r\nthe TeamIds property\r\n\r\nThe list of ResourceTeams to which this Resource belongs.",
            "nullable": true,
            "deprecated": true
          },
          "skills": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Deprecated - this property is no longer being used.  Please pass in Skill data on\r\nthe SkillIds property\r\n\r\nThe list of ResourceSkills possessed by this Resource.",
            "nullable": true,
            "deprecated": true
          }
        },
        "additionalProperties": false,
        "description": "A Resource represents a person, material, or tool that is used within your Projects.\r\nWhen you attach a Resources to more than one Task, the software will schedule the usage\r\nof your Resource so that it is not allocated to more than one Task at the same time.\r\nThe users in your Workspace are also considered Resources.  To invite a new User to your\r\nWorkspace, create a new Resource for that user."
      },
      "ResourceDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of this Resource.",
            "format": "uuid"
          },
          "firstName": {
            "type": "string",
            "description": "The first name of the person Resource.\r\n            \r\nApplies to personnel Resources only.",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "The last name of the person Resource.\r\n            \r\nApplies to personnel Resources only.",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "The email address of this Resource.",
            "nullable": true
          },
          "hourlyRate": {
            "type": "number",
            "description": "The basic hourly rate for this Resource.",
            "format": "double",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "The phone number associated with this Resource.",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "The city where this Resource is located.",
            "nullable": true
          },
          "state": {
            "type": "string",
            "description": "The state or region where this Resource is located.  This value is not constrained\r\nto a list of known states or regions.",
            "nullable": true
          },
          "country": {
            "type": "string",
            "description": "A text field indicating the country in which this Resource is located.  This value\r\nis not constrained to the list of known ISO 3166 country names or codes.",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "description": "Free-form text notes about this Resource.  You may use this field to store extra\r\ninformation about the Resource.",
            "nullable": true
          },
          "approver": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceApproverDto"
              }
            ],
            "description": "When managing users, you can choose who will approve a person's Timesheets. This\r\nis a ResourceApprover.  You can specify this person within the Resource object.",
            "nullable": true
          },
          "teams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceTeamDto"
            },
            "description": "The list of ResourceTeams to which this Resource belongs.",
            "nullable": true
          },
          "skills": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceSkillDto"
            },
            "description": "The list of ResourceSkills possessed by this Resource.",
            "nullable": true
          },
          "onlineDateTime": {
            "type": "string",
            "description": "The last time when this Resource was online.\r\n            \r\nApplies to personnel Resources only.",
            "format": "date-time",
            "nullable": true
          },
          "role": {
            "type": "string",
            "description": "The Role privileges associated with this Resource.\r\n            \r\nApplies to personnel Resources only.",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "True if this Resource is currently active and valid.  If this value is false,\r\nthis Resource is considered to be deactivated and not available for further use.\r\n            \r\nFor personnel Resources, setting this value to False will make this user unable\r\nto access this Workspace."
          }
        },
        "additionalProperties": false,
        "description": "A Resource represents a person, material, or tool that is used within your Projects.\r\nWhen you attach a Resources to more than one Task, the software will schedule the usage\r\nof your Resource so that it is not allocated to more than one Task at the same time.\r\nThe users in your Workspace are also considered Resources.  To invite a new User to your\r\nWorkspace, create a new Resource for that user."
      },
      "ResourceDtoAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceDto"
              }
            ],
            "description": "A Resource represents a person, material, or tool that is used within your Projects.\r\nWhen you attach a Resources to more than one Task, the software will schedule the usage\r\nof your Resource so that it is not allocated to more than one Task at the same time.\r\nThe users in your Workspace are also considered Resources.  To invite a new User to your\r\nWorkspace, create a new Resource for that user.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      },
      "ResourceDtoListAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceDto"
            },
            "description": "If the API call succeeded, this will contain the results.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      },
      "ResourceSkillDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of this ResourceSkill",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "The name of this ResourceSkill",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A ResourceSkill is a capability possessed by this Resource that can be used to\r\ndetermine appropriate assignments.  Some Resources may have ResourceSkills that\r\nare in high demand and some Tasks may have a requirement for Resources with particular\r\nResourceSkills."
      },
      "ResourceSkillDtoAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceSkillDto"
              }
            ],
            "description": "A ResourceSkill is a capability possessed by this Resource that can be used to\r\ndetermine appropriate assignments.  Some Resources may have ResourceSkills that\r\nare in high demand and some Tasks may have a requirement for Resources with particular\r\nResourceSkills.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      },
      "ResourceSkillDtoListAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceSkillDto"
            },
            "description": "If the API call succeeded, this will contain the results.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      },
      "ResourceTeamDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of this ResourceTeam",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "The name of this ResourceTeam",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A ResourceTeam is a group of Resources that can be referred to as a group.  You can use a\r\nResourceTeam as a shortcut to quickly assign or allocate multiple Resources quickly."
      },
      "ResourceTeamDtoAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ResourceTeamDto"
              }
            ],
            "description": "A ResourceTeam is a group of Resources that can be referred to as a group.  You can use a\r\nResourceTeam as a shortcut to quickly assign or allocate multiple Resources quickly.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      },
      "ResourceTeamDtoListAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceTeamDto"
            },
            "description": "If the API call succeeded, this will contain the results.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      },
      "ResourceUpdateDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "description": "The first name of the person Resource.\r\n            \r\nApplies to personnel Resources only.",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "The last name of the person Resource.\r\n            \r\nApplies to personnel Resources only.",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "The email address of this Resource.\r\n            \r\nNote that this email cannot be changed once it has been assigned.",
            "nullable": true
          },
          "hourlyRate": {
            "minimum": 0,
            "type": "number",
            "description": "The basic hourly rate for this Resource.",
            "format": "double",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "The phone number associated with this Resource.",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "The city where this Resource is located.",
            "nullable": true
          },
          "state": {
            "type": "string",
            "description": "The state or region where this Resource is located.  This value is not constrained\r\nto a list of known states or regions.",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "description": "A text field indicating the country in which this Resource is located.\r\nThis value must be one of the following: US, NZ, AU.",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "description": "Free-form text notes about this Resource.  You may use this field to store extra\r\ninformation about the Resource.",
            "nullable": true
          },
          "roleId": {
            "type": "string",
            "description": "The Role Id associated with this Resource.\r\n            \r\nApplies to personnel Resources only.",
            "format": "uuid",
            "nullable": true
          },
          "teamIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The list of ResourceTeams to which this Resource belongs.",
            "nullable": true
          },
          "skillIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The list of ResourceSkills possessed by this Resource.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A Resource represents a person, material, or tool that is used within your Projects.\r\nWhen you attach a Resources to more than one Task, the software will schedule the usage\r\nof your Resource so that it is not allocated to more than one Task at the same time.\r\nThe users in your Workspace are also considered Resources.  To invite a new User to your\r\nWorkspace, create a new Resource for that user."
      },
      "State": {
        "enum": [
          "NotStarted",
          "InProgress",
          "Success",
          "Fail"
        ],
        "type": "string"
      },
      "TagCreateDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string",
            "description": "The name of this Tag."
          },
          "color": {
            "type": "string",
            "description": "The color that will be used to represent this Tag visually.  This color\r\nis automatically chosen by the application when a user creates a Tag.\r\n            \r\nYou can choose specify any color that can be represented using HTML RGB\r\nsyntax such as `#0088FF`, in the format `RRGGBB`.  You may not use names\r\nfor colors.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A Tag is a named categorization you can use to distinguish objects from each other.\r\nTags each have a unique identifier, a name, and a color."
      },
      "TagDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of this Tag.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "The name of this Tag.",
            "nullable": true
          },
          "color": {
            "type": "string",
            "description": "The color that will be used to represent this Tag visually.  This color\r\nis automatically chosen by the application when a user creates a Tag.\r\n            \r\nYou can choose specify any color that can be represented using HTML RGB\r\nsyntax such as `#0088FF`, in the format `RRGGBB`.  You may not use names\r\nfor colors.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A Tag is a named categorization you can use to distinguish objects from each other.\r\nTags each have a unique identifier, a name, and a color."
      },
      "TagDtoAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TagDto"
              }
            ],
            "description": "A Tag is a named categorization you can use to distinguish objects from each other.\r\nTags each have a unique identifier, a name, and a color.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      },
      "TagDtoListAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagDto"
            },
            "description": "If the API call succeeded, this will contain the results.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      },
      "TagUpdateDto": {
        "type": "object",
        "properties": {
          "color": {
            "type": "string",
            "description": "The color that will be used to represent this Tag visually.  This color\r\nis automatically chosen by the application when a user creates a Tag.\r\n            \r\nYou can choose specify any color that can be represented using HTML RGB\r\nsyntax such as `#0088FF`, in the format `RRGGBB`.  You may not use names\r\nfor colors.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A Tag is a named categorization you can use to distinguish objects from each other.\r\nTags each have a unique identifier, a name, and a color."
      },
      "TaskAssigneeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of this TaskAssignee",
            "format": "uuid"
          },
          "initials": {
            "type": "string",
            "description": "A shortened set of initials to use when representing this TaskAssignee visually\r\nin small areas.  The initials may be used in small icons or other overlays.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of this TaskAssignee",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "A more complete description of the TaskAssignee.",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "True if this TaskAssignee is currently active with the Project."
          },
          "color": {
            "type": "string",
            "description": "The color that will be used to represent this TaskAssignee visually.\r\n            \r\nYou can choose specify any color that can be represented using HTML RGB\r\nsyntax such as `#0088FF`, in the format `RRGGBB`.  You may not use names\r\nfor colors.",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "The first or given name of this TaskAssignee.\r\n            \r\nFor personnel TaskAssignees only.",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "The last or family name of this TaskAssignee.\r\n            \r\nFor personnel TaskAssignees only.",
            "nullable": true
          },
          "shortName": {
            "type": "string",
            "description": "A shortened version of the name of this TaskAssignee.  This is used in areas\r\nwhere the Initials are too short but the full name is too long.",
            "nullable": true
          },
          "avatarUrl": {
            "type": "string",
            "description": "A link to an Avatar for this TaskAssignee.  Avatars are small images or representations\r\nthat can be used to visually identify this TaskAssignee at a glance.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A TaskAssignee is the person to whom a Task is assigned.  A single Task\r\ncan be assigned to multiple TaskAssignees."
      },
      "TaskCreateDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string",
            "description": "The common name of this Task."
          },
          "description": {
            "type": "string",
            "description": "A description of the work to be performed in this Task.",
            "nullable": true
          },
          "percentComplete": {
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "description": "The numerical percentage, from 0-100, representing the percentage completion\r\nfor this Task.  Any numbers below zero or above 100 will be clamped to the\r\nminimum or maximum value.\r\n            \r\nThis value can be edited manually in the Gantt chart view of the application,\r\nor can be selected on the Task Detail page within the Kanban board.",
            "format": "int32",
            "nullable": true
          },
          "statusId": {
            "type": "string",
            "description": "The unique identifier of the TaskStatus for this Task",
            "format": "uuid",
            "nullable": true
          },
          "priorityId": {
            "type": "integer",
            "description": "A numerical value representing the Priority of this Task",
            "format": "int32",
            "nullable": true
          },
          "assignees": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "A list of unique identifiers of TaskAssignees to be assigned to this Task",
            "nullable": true
          },
          "plannedStartDate": {
            "type": "string",
            "description": "The date when work on this Task is planned to begin.",
            "format": "date",
            "nullable": true
          },
          "plannedFinishDate": {
            "type": "string",
            "description": "The date when work on this Task is expected to complete.",
            "format": "date",
            "nullable": true
          },
          "plannedDuration": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "description": "The planned duration (in minutes) for this Task.  Cannot be negative.",
            "format": "int32",
            "nullable": true
          },
          "plannedEffort": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "description": "The planned effort (in minutes) for this Task.  Cannot be negative.",
            "format": "int32",
            "nullable": true
          },
          "plannedCost": {
            "minimum": 0,
            "type": "number",
            "description": "The planned cost for this Task.  Cannot be negative.",
            "format": "double",
            "nullable": true
          },
          "actualStartDate": {
            "type": "string",
            "description": "The date when work on this Task actually started, if known.",
            "format": "date",
            "nullable": true
          },
          "actualCost": {
            "minimum": 0,
            "type": "number",
            "description": "The actual cost of this Task to date, if known.",
            "format": "double",
            "nullable": true
          },
          "theme": {
            "type": "string",
            "description": "Color theme definition for this task.\r\n            \r\neg. Blue, Brown, DarkBlue, DarkGrey, Gold, Green, Grey, LightBrown, LightGreen,\r\nLightGrey, LightPurple, LightYellow, Magenta, Mauve, Navy, Orange, Purple, Red.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A Task is an individual element of work that must be performed to complete a Project.  A\r\nTask can have one or more Resources assigned to it.  Tasks can be linked to other Tasks to\r\nindicate whether they have a dependency or a connection."
      },
      "TaskDetailsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of this Task.",
            "format": "uuid"
          },
          "project": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaskProjectDto"
              }
            ],
            "description": "The Project to which this Task belongs.",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskTagDto"
            },
            "description": "The TaskTags that apply to this Task.",
            "nullable": true
          },
          "assignees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskAssigneeDto"
            },
            "description": "The list of assignees who are to work on this Task, if any.",
            "nullable": true
          },
          "todos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskTodoDto"
            },
            "description": "A list of TaskTodo items, which are sub-tasks within this Task.",
            "nullable": true
          },
          "shortId": {
            "type": "string",
            "description": "A short ID that can be used to refer to this Task.  This short ID is\r\nguaranteed to be unique within your Workspace.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The common name of this Task.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "A description of the work to be performed in this Task.",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaskStatusDto"
              }
            ],
            "description": "The TaskStatus assigned to this Task.",
            "nullable": true
          },
          "priorityId": {
            "type": "integer",
            "description": "The unique identifier of the TaskPriority",
            "format": "int32"
          },
          "plannedStartDate": {
            "type": "string",
            "description": "The date when work on this Task is planned to begin.",
            "format": "date",
            "nullable": true
          },
          "plannedFinishDate": {
            "type": "string",
            "description": "The date when work on this Task is expected to complete.",
            "format": "date",
            "nullable": true
          },
          "actualStartDate": {
            "type": "string",
            "description": "If set, this is the actual date when work began on the Task.",
            "format": "date",
            "nullable": true
          },
          "actualFinishDate": {
            "type": "string",
            "description": "If set, this is the actual date when work was completed on this Task.",
            "format": "date",
            "nullable": true
          },
          "modifyDate": {
            "type": "string",
            "description": "The timestamp in UTC when this Task was most recently modified.",
            "format": "date-time"
          },
          "createDate": {
            "type": "string",
            "description": "The timestamp in UTC when this Task was created.",
            "format": "date-time"
          },
          "percentComplete": {
            "type": "integer",
            "description": "The numerical percentage, from 0-100, representing the percentage completion\r\nfor this Task.  Any numbers below zero or above 100 will be clamped to the\r\nminimum or maximum value.\r\n            \r\nThis value can be edited manually in the Gantt chart view of the application,\r\nor can be selected on the Task Detail page within the Kanban board.",
            "format": "int32"
          },
          "isSummary": {
            "type": "boolean",
            "description": "True if this Task is the parent of multiple Tasks underneath it.  A parent Task\r\nis a \"rolled-up\" view of multiple children that allows you to view a section of\r\nwork at a glance.\r\n            \r\nYou can create a summary Task in the Gantt chart view of the application by\r\nadding child tasks underneath a parent Task."
          },
          "wbs": {
            "type": "string",
            "description": "The WBS (Work Breakdown Structure) number for this task within the Gantt chart hierarchy.  See [What\r\nIs a Work Breakdown Structure (WBS)?](https://www.projectmanager.com/guides/work-breakdown-structure)\r\non Project Manager for more information. The WBS number is an outline number in the form `#.#.#.#`\r\nwhich indicates how tasks are organized and sorted.\r\n            \r\nThe WBS value is only available to users at certain edition levels.  This value can only be changed\r\nif you are a Project Editor.",
            "nullable": true
          },
          "actualCost": {
            "type": "number",
            "description": "The actual cost of this Task to date, if known.",
            "format": "double",
            "nullable": true
          },
          "plannedCost": {
            "type": "number",
            "description": "The planned cost for this Task.  Cannot be negative.",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A Task is an individual element of work that must be performed to complete a Project.  A\r\nTask can have one or more Resources assigned to it.  Tasks can be linked to other Tasks to\r\nindicate whether they have a dependency or a connection."
      },
      "TaskDetailsDtoAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaskDetailsDto"
              }
            ],
            "description": "A Task is an individual element of work that must be performed to complete a Project.  A\r\nTask can have one or more Resources assigned to it.  Tasks can be linked to other Tasks to\r\nindicate whether they have a dependency or a connection.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      },
      "TaskDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of this Task.",
            "format": "uuid"
          },
          "project": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaskProjectDto"
              }
            ],
            "description": "The Project to which this Task belongs.",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskTagDto"
            },
            "description": "The TaskTags that apply to this Task.",
            "nullable": true
          },
          "projectId": {
            "type": "string",
            "description": "The unique identifier of the Project to which this Task belongs.",
            "format": "uuid"
          },
          "assignees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskAssigneeDto"
            },
            "description": "The list of assignees who are to work on this Task, if any.",
            "nullable": true
          },
          "todos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskTodoDto"
            },
            "description": "A list of TaskTodo items, which are sub-tasks within this Task.",
            "nullable": true
          },
          "shortId": {
            "type": "string",
            "description": "A short ID that can be used to refer to this Task.  This short ID is\r\nguaranteed to be unique within your Workspace.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The common name of this Task.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "A description of the work to be performed in this Task.",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaskStatusDto"
              }
            ],
            "description": "The TaskStatus assigned to this Task.",
            "nullable": true
          },
          "plannedStartDate": {
            "type": "string",
            "description": "The date when work on this Task is planned to begin.\r\n            \r\nThis value contains only the date in year-month-day format.  For display, this\r\ndate will always be shown as this same year-month-day regardless of time zone.\r\nFor reporting purposes, this date is calculated against the official time zone\r\nof the Workspace.\r\n            \r\nFor example: A Task has a planned completion date of July 5, 2023 in a Workspace\r\nthat has a time zone of US Pacific Time (GMT-7 or GMT-8, depending on daylight\r\nsavings time).  This project is considered overdue on 12:01 AM July 6th 2023 in\r\nUS Pacific time.",
            "format": "date"
          },
          "plannedFinishDate": {
            "type": "string",
            "description": "The date when work on this Task is expected to complete.\r\n            \r\nThis value contains only the date in year-month-day format.  For display, this\r\ndate will always be shown as this same year-month-day regardless of time zone.\r\nFor reporting purposes, this date is calculated against the official time zone\r\nof the Workspace.\r\n            \r\nFor example: A Task has a planned completion date of July 5, 2023 in a Workspace\r\nthat has a time zone of US Pacific Time (GMT-7 or GMT-8, depending on daylight\r\nsavings time).  This project is considered overdue on 12:01 AM July 6th 2023 in\r\nUS Pacific time.",
            "format": "date",
            "nullable": true
          },
          "actualStartDate": {
            "type": "string",
            "description": "If set, this is the actual date when work began on the Task.\r\n            \r\nThis value contains only the date in year-month-day format.  For display, this\r\ndate will always be shown as this same year-month-day regardless of time zone.\r\nFor reporting purposes, this date is calculated against the official time zone\r\nof the Workspace.\r\n            \r\nFor example: A Task has a planned completion date of July 5, 2023 in a Workspace\r\nthat has a time zone of US Pacific Time (GMT-7 or GMT-8, depending on daylight\r\nsavings time).  This project is considered overdue on 12:01 AM July 6th 2023 in\r\nUS Pacific time.",
            "format": "date",
            "nullable": true
          },
          "actualFinishDate": {
            "type": "string",
            "description": "If set, this is the actual date when work was completed on this Task.\r\n            \r\nThis value contains only the date in year-month-day format.  For display, this\r\ndate will always be shown as this same year-month-day regardless of time zone.\r\nFor reporting purposes, this date is calculated against the official time zone\r\nof the Workspace.\r\n            \r\nFor example: A Task has a planned completion date of July 5, 2023 in a Workspace\r\nthat has a time zone of US Pacific Time (GMT-7 or GMT-8, depending on daylight\r\nsavings time).  This project is considered overdue on 12:01 AM July 6th 2023 in\r\nUS Pacific time.",
            "format": "date",
            "nullable": true
          },
          "modifyDate": {
            "type": "string",
            "description": "The timestamp in UTC when this Task was most recently modified.",
            "format": "date-time"
          },
          "createDate": {
            "type": "string",
            "description": "The timestamp in UTC when this Task was created.",
            "format": "date-time"
          },
          "percentComplete": {
            "type": "integer",
            "description": "The numerical percentage, from 0-100, representing the percentage completion\r\nfor this Task.  Any numbers below zero or above 100 will be clamped to the\r\nminimum or maximum value.\r\n            \r\nThis value can be edited manually in the Gantt chart view of the application,\r\nor can be selected on the Task Detail page within the Kanban board.",
            "format": "int32"
          },
          "isSummary": {
            "type": "boolean",
            "description": "True if this Task is the parent of multiple Tasks underneath it.  A parent Task\r\nis a \"rolled-up\" view of multiple children that allows you to view a section of\r\nwork at a glance.\r\n            \r\nYou can create a summary Task in the Gantt chart view of the application by\r\nadding child tasks underneath a parent Task."
          },
          "priorityId": {
            "type": "integer",
            "description": "Return the priority of a task",
            "format": "int32"
          },
          "wbs": {
            "type": "string",
            "description": "The WBS (Work Breakdown Structure) number for this task within the Gantt chart hierarchy.  See [What\r\nIs a Work Breakdown Structure (WBS)?](https://www.projectmanager.com/guides/work-breakdown-structure)\r\non Project Manager for more information. The WBS number is an outline number in the form `#.#.#.#`\r\nwhich indicates how tasks are organized and sorted.\r\n            \r\nThe WBS value is only available to users at certain edition levels.  This value can only be changed\r\nif you are a Project Editor.",
            "nullable": true
          },
          "color": {
            "type": "string",
            "description": "Task Color as set in the Gantt",
            "nullable": true
          },
          "actualCost": {
            "type": "number",
            "description": "The actual cost of this Task to date, if known.",
            "format": "double",
            "nullable": true
          },
          "plannedCost": {
            "type": "number",
            "description": "The planned cost for this Task.  Cannot be negative.",
            "format": "double",
            "nullable": true
          },
          "plannedDuration": {
            "type": "integer",
            "description": "The planned duration (in minutes) for this Task.",
            "format": "int32",
            "nullable": true
          },
          "plannedEffort": {
            "type": "integer",
            "description": "The planned effort (in minutes) for this Task.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A Task is an individual element of work that must be performed to complete a Project.  A\r\nTask can have one or more Resources assigned to it.  Tasks can be linked to other Tasks to\r\nindicate whether they have a dependency or a connection."
      },
      "TaskDtoListAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskDto"
            },
            "description": "If the API call succeeded, this will contain the results.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      },
      "TaskFieldsValueResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of this TaskField.",
            "format": "uuid"
          },
          "value": {
            "type": "string",
            "description": "The value currently set for this TaskField for this Task.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of this TaskField.",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "The type of this TaskField.  Valid types are the following:\r\n* Text\r\n* Number\r\n* Date\r\n* Checkbox\r\n* Currency\r\n* Dropdown",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A TaskField is a custom field defined within your Workspace for a specific Project.  You can\r\ndefine TaskFields for any integration purpose that is important to your business.  Each\r\nTaskField has a data type as well as options in how it is handled.  TaskFields can be edited\r\nfor each Task inside this Project."
      },
      "TaskFieldsValueResponseDtoAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaskFieldsValueResponseDto"
              }
            ],
            "description": "A TaskField is a custom field defined within your Workspace for a specific Project.  You can\r\ndefine TaskFields for any integration purpose that is important to your business.  Each\r\nTaskField has a data type as well as options in how it is handled.  TaskFields can be edited\r\nfor each Task inside this Project.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      },
      "TaskFieldsValueResponseDtoListAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskFieldsValueResponseDto"
            },
            "description": "If the API call succeeded, this will contain the results.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      },
      "TaskPriorityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The unique identifier of this TaskPriority.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "The name of this TaskPriority.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A TaskPriority is a named priority level used by your business to determine how to decide\r\nwhich Tasks are the most important.  You can name your TaskPriority levels anything you like\r\nand you can reorganize the order of the TaskPriority levels at any time."
      },
      "TaskPriorityDtoListAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskPriorityDto"
            },
            "description": "If the API call succeeded, this will contain the results.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      },
      "TaskProjectDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of this Project.",
            "format": "uuid"
          },
          "shortId": {
            "type": "string",
            "description": "The ShortId of this Project.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The common name of this Project.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A Project is a collection of Tasks that contributes towards a goal.  Within a Project, Tasks\r\nrepresent individual items of work that team members must complete.  The sum total of Tasks\r\nwithin a Project represents the work to be completed for that Project."
      },
      "TaskStatusCreateDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of this TaskStatus.",
            "format": "uuid",
            "nullable": true
          },
          "name": {
            "minLength": 1,
            "type": "string",
            "description": "The name of this TaskStatus."
          },
          "order": {
            "type": "integer",
            "description": "A numerical value that can be used to sort TaskStatus values according to the\r\nneeds of your business.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A TaskStatus is a named status level used by your business to determine how to measure the\r\nprogress of Tasks.  You can define your own named status levels that are appropriate for\r\nyour business and determine which status levels are considered done."
      },
      "TaskStatusDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of this TaskStatus.",
            "format": "uuid"
          },
          "projectId": {
            "type": "string",
            "description": "The unique identifier of the Project to which this TaskStatus belongs.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "The name of this TaskStatus.",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "description": "A numerical value that can be used to sort TaskStatus values according to the\r\nneeds of your business.",
            "format": "int32"
          },
          "isDone": {
            "type": "boolean",
            "description": "True if a Task in this TaskStatus is considered done."
          }
        },
        "additionalProperties": false,
        "description": "A TaskStatus is a named status level used by your business to determine how to measure the\r\nprogress of Tasks.  You can define your own named status levels that are appropriate for\r\nyour business and determine which status levels are considered done."
      },
      "TaskStatusDtoAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaskStatusDto"
              }
            ],
            "description": "A TaskStatus is a named status level used by your business to determine how to measure the\r\nprogress of Tasks.  You can define your own named status levels that are appropriate for\r\nyour business and determine which status levels are considered done.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      },
      "TaskStatusDtoListAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskStatusDto"
            },
            "description": "If the API call succeeded, this will contain the results.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      },
      "TaskStatusUpdateDto": {
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^((?!00000000-0000-0000-0000-000000000000).)*$",
            "type": "string",
            "description": "The unique identifier of this TaskStatus.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "The name of this TaskStatus.",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "description": "A numerical value that can be used to sort TaskStatus values according to the\r\nneeds of your business.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A TaskStatus is a named status level used by your business to determine how to measure the\r\nprogress of Tasks.  You can define your own named status levels that are appropriate for\r\nyour business and determine which status levels are considered done."
      },
      "TaskTagDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of this TaskTag.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "The common name of this TaskTag.",
            "nullable": true
          },
          "color": {
            "type": "string",
            "description": "The color that will be used to represent this Tag visually.  This color\r\nis automatically chosen by the application when a user creates a Tag.\r\n            \r\nYou can choose specify any color that can be represented using HTML RGB\r\nsyntax such as `#0088FF`, in the format `RRGGBB`.  You may not use names\r\nfor colors.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A TaskTag is a connection between a Task and a Tag.  Each Task can have zero, one or many\r\nTaskTags associated with it.  TaskTags can be assigned and removed from the Task to help you\r\nclassify your Tasks and prioritize work."
      },
      "TaskTodoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of this TaskTodo.",
            "format": "uuid"
          },
          "text": {
            "type": "string",
            "description": "The full description of this TaskTodo.",
            "nullable": true
          },
          "complete": {
            "type": "boolean",
            "description": "True if this TaskTodo is complete."
          },
          "createDate": {
            "type": "string",
            "description": "The timestamp in UTC when this object was created.",
            "format": "date-time"
          },
          "modifyDate": {
            "type": "string",
            "description": "The timestamp in UTC when this object was last modified.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "A TaskTodo is a sub-task that represents a unit of work on the Task.  You can use\r\nTaskTodo to represent individual items for a larger piece of work."
      },
      "TaskUpdateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The common name of this Task.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "A description of the work to be performed in this Task.",
            "nullable": true
          },
          "percentComplete": {
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "description": "The numerical percentage, from 0-100, representing the percentage completion\r\nfor this Task.  Any numbers below zero or above 100 will be clamped to the\r\nminimum or maximum value.\r\n            \r\nThis value can be edited manually in the Gantt chart view of the application,\r\nor can be selected on the Task Detail page within the Kanban board.",
            "format": "int32",
            "nullable": true
          },
          "statusId": {
            "type": "string",
            "description": "The TaskStatus assigned to this Task.",
            "format": "uuid",
            "nullable": true
          },
          "priorityId": {
            "type": "integer",
            "description": "The unique identifier of the TaskPriority",
            "format": "int32",
            "nullable": true
          },
          "plannedStartDate": {
            "type": "string",
            "description": "The date when work on this Task is planned to begin.\r\n            \r\nThis value contains only the date in year-month-day format.  For display, this\r\ndate will always be shown as this same year-month-day regardless of time zone.\r\nFor reporting purposes, this date is calculated against the official time zone\r\nof the Workspace.\r\n            \r\nFor example: A Task has a planned completion date of July 5, 2023 in a Workspace\r\nthat has a time zone of US Pacific Time (GMT-7 or GMT-8, depending on daylight\r\nsavings time).  This project is considered overdue on 12:01 AM July 6th 2023 in\r\nUS Pacific time.",
            "format": "date",
            "nullable": true
          },
          "plannedFinishDate": {
            "type": "string",
            "description": "The date when work on this Task is expected to complete.\r\n            \r\nThis value contains only the date in year-month-day format.  For display, this\r\ndate will always be shown as this same year-month-day regardless of time zone.\r\nFor reporting purposes, this date is calculated against the official time zone\r\nof the Workspace.\r\n            \r\nFor example: A Task has a planned completion date of July 5, 2023 in a Workspace\r\nthat has a time zone of US Pacific Time (GMT-7 or GMT-8, depending on daylight\r\nsavings time).  This project is considered overdue on 12:01 AM July 6th 2023 in\r\nUS Pacific time.",
            "format": "date",
            "nullable": true
          },
          "plannedDuration": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "description": "The planned duration (in minutes) for this Task.  Cannot be negative.",
            "format": "int32",
            "nullable": true
          },
          "plannedEffort": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "description": "The planned effort (in minutes) for this Task.  Cannot be negative.",
            "format": "int32",
            "nullable": true
          },
          "plannedCost": {
            "minimum": 0,
            "type": "number",
            "description": "The planned cost for this Task.  Cannot be negative.",
            "format": "double",
            "nullable": true
          },
          "actualStartDate": {
            "type": "string",
            "description": "If set, this is the actual date when work began on the Task.\r\n            \r\nThis value contains only the date in year-month-day format.  For display, this\r\ndate will always be shown as this same year-month-day regardless of time zone.\r\nFor reporting purposes, this date is calculated against the official time zone\r\nof the Workspace.\r\n            \r\nFor example: A Task has a planned completion date of July 5, 2023 in a Workspace\r\nthat has a time zone of US Pacific Time (GMT-7 or GMT-8, depending on daylight\r\nsavings time).  This project is considered overdue on 12:01 AM July 6th 2023 in\r\nUS Pacific time.",
            "format": "date",
            "nullable": true
          },
          "actualCost": {
            "minimum": 0,
            "type": "number",
            "description": "If set, this represents the actual tracked cost for this Task.",
            "format": "double",
            "nullable": true
          },
          "theme": {
            "type": "string",
            "description": "Color theme definition for this task.\r\n            \r\neg. Blue, Brown, DarkBlue, DarkGrey, Gold, Green, Grey, LightBrown, LightGreen,\r\nLightGrey, LightPurple, LightYellow, Magenta, Mauve, Navy, Orange, Purple, Red.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A Task is an individual element of work that must be performed to complete a Project.  A\r\nTask can have one or more Resources assigned to it.  Tasks can be linked to other Tasks to\r\nindicate whether they have a dependency or a connection."
      },
      "TimeSheetProjectDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the Project.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "The name of the Project.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "An optional description of the Project",
            "nullable": true
          },
          "shortCode": {
            "type": "string",
            "description": "A shortened name that will be used when reporting on Projects.  This short\r\nname can be edited in the Project Settings page within the application\r\nand can be any text you wish.",
            "nullable": true
          },
          "shortId": {
            "type": "string",
            "description": "A short identifier that uniquely identifies this Project within your Workspace\r\nusing a single letter followed by a number.  This code can be used for APIs\r\nthat accept Project unique identifiers.\r\n            \r\nYou can observe the short ID within the application by observing the URL of\r\nthe page you visit when you click on this project.  The page's URL will appear\r\nin the form `https://pm.app.projectmanager.com/project/board/D16` - in this\r\nexample, the `ShortId` is `D16`.\r\n            \r\nThis code is automatically assigned for you and cannot be changed.",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "description": "The earliest planned or actual start date of tasks on the project.\r\n            \r\nThis field is calculated automatically and cannot be changed.",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "The latest planned or actual finish date of tasks on the project.\r\n            \r\nThis field is calculated automatically and cannot be changed.",
            "format": "date-time",
            "nullable": true
          },
          "targetDate": {
            "type": "string",
            "description": "The target planned completion date for this Project, or null if one has\r\nnot been selected.  This value can be updated in the Project Settings\r\npage or the Portfolio Project page within the application.",
            "format": "date-time",
            "nullable": true
          },
          "budget": {
            "type": "number",
            "description": "The proposed budget for this Project.",
            "format": "double",
            "nullable": true
          },
          "hourlyRate": {
            "type": "number",
            "description": "The default hourly rate for work on this Project.  This rate will be used\r\nif an assignee working on this Project does not have an hourly rate configured\r\nin their profile.",
            "format": "double",
            "nullable": true
          },
          "statusUpdate": {
            "type": "string",
            "description": "Contains an optional status update for Projects that can be used to summarize\r\nthe status of multiple Projects at a glance.\r\n            \r\nYou can edit the StatusUpdate field on the Portfolio page of the application.",
            "nullable": true
          },
          "modifyDate": {
            "type": "string",
            "description": "The timestamp in UTC when the Project was most recently modified.",
            "format": "date-time"
          },
          "createDate": {
            "type": "string",
            "description": "The timestamp in UTC when the Project was created.",
            "format": "date-time"
          },
          "isTemplate": {
            "type": "boolean",
            "description": "True if this Project is a template that will be reused as a framework\r\nfor future Projects."
          }
        },
        "additionalProperties": false,
        "description": "A Project is a collection of Tasks that contributes towards a goal.  Within a Project, Tasks\r\nrepresent individual items of work that team members must complete.  The sum total of Tasks\r\nwithin a Project represents the work to be completed for that Project."
      },
      "TimesheetAdminTypeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "admin task id",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "admin task name",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents admin task to track time"
      },
      "TimesheetAdminTypeDtoListAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TimesheetAdminTypeDto"
            },
            "description": "If the API call succeeded, this will contain the results.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      },
      "TimesheetCreateRequestDto": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "Time entry date",
            "format": "date"
          },
          "hours": {
            "type": "number",
            "description": "Reported hours",
            "format": "double"
          },
          "taskId": {
            "type": "string",
            "description": "Task id that time reported to",
            "format": "uuid",
            "nullable": true
          },
          "adminTypeId": {
            "type": "string",
            "description": "Admin task id that time reportsed to",
            "format": "uuid",
            "nullable": true
          },
          "resourceId": {
            "type": "string",
            "description": "Resource id that time reported to",
            "format": "uuid",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "description": "Notes",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Payload to create time entry"
      },
      "TimesheetDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "TimesheetId",
            "format": "uuid"
          },
          "date": {
            "type": "string",
            "description": "Date of time entry",
            "format": "date-time"
          },
          "notes": {
            "type": "string",
            "description": "Notes",
            "nullable": true
          },
          "approved": {
            "type": "boolean",
            "description": "Shows if timesheet approved"
          },
          "hours": {
            "type": "number",
            "description": "Total Hours",
            "format": "double"
          },
          "task": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimesheetTaskDto"
              }
            ],
            "description": "associated tasks with time sheet",
            "nullable": true
          },
          "project": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimeSheetProjectDto"
              }
            ],
            "description": "associated projects with timesheet",
            "nullable": true
          },
          "resource": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimesheetResourceDto"
              }
            ],
            "description": "The resource associated with this timesheet entry",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Created Time entry response data"
      },
      "TimesheetDtoListAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TimesheetDto"
            },
            "description": "If the API call succeeded, this will contain the results.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      },
      "TimesheetResourceDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of this Resource.",
            "format": "uuid"
          },
          "firstName": {
            "type": "string",
            "description": "The first name of the person Resource.\r\n            \r\nApplies to personnel Resources only.",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "The last name of the person Resource.\r\n            \r\nApplies to personnel Resources only.",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "The email address of this Resource.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A Resource represents a person, material, or tool that is used within your Projects.\r\nWhen you attach a Resources to more than one Task, the software will schedule the usage\r\nof your Resource so that it is not allocated to more than one Task at the same time.\r\nThe users in your Workspace are also considered Resources.  To invite a new User to your\r\nWorkspace, create a new Resource for that user."
      },
      "TimesheetResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "TimesheetId",
            "format": "uuid"
          },
          "taskId": {
            "type": "string",
            "description": "associated task id",
            "format": "uuid",
            "nullable": true
          },
          "projectId": {
            "type": "string",
            "description": "associated project id",
            "format": "uuid",
            "nullable": true
          },
          "resourceId": {
            "type": "string",
            "description": "resource id time entry entered",
            "format": "uuid",
            "nullable": true
          },
          "timesheetAdminTypeId": {
            "type": "string",
            "description": "admin task id",
            "format": "uuid",
            "nullable": true
          },
          "date": {
            "type": "string",
            "description": "Date of time entry",
            "format": "date-time"
          },
          "notes": {
            "type": "string",
            "description": "Notes",
            "nullable": true
          },
          "approved": {
            "type": "boolean",
            "description": "Shows if timesheet approved"
          },
          "hours": {
            "type": "number",
            "description": "Total Hours",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "Time entry representation"
      },
      "TimesheetResponseDtoAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimesheetResponseDto"
              }
            ],
            "description": "Time entry representation",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      },
      "TimesheetTaskDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of this Task.",
            "format": "uuid"
          },
          "projectId": {
            "type": "string",
            "description": "The unique identifier of the Project to which this Task belongs.",
            "format": "uuid"
          },
          "shortId": {
            "type": "string",
            "description": "A short ID that can be used to refer to this Task.  This short ID is\r\nguaranteed to be unique within your Workspace.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The common name of this Task.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "A description of the work to be performed in this Task.",
            "nullable": true
          },
          "plannedStartDate": {
            "type": "string",
            "description": "The date when work on this Task is planned to begin.\r\n            \r\nThis value contains only the date in year-month-day format.  For display, this\r\ndate will always be shown as this same year-month-day regardless of time zone.\r\nFor reporting purposes, this date is calculated against the official time zone\r\nof the Workspace.\r\n            \r\nFor example: A Task has a planned completion date of July 5, 2023 in a Workspace\r\nthat has a time zone of US Pacific Time (GMT-7 or GMT-8, depending on daylight\r\nsavings time).  This project is considered overdue on 12:01 AM July 6th 2023 in\r\nUS Pacific time.",
            "format": "date-time",
            "nullable": true
          },
          "plannedFinishDate": {
            "type": "string",
            "description": "The date when work on this Task is expected to complete.\r\n            \r\nThis value contains only the date in year-month-day format.  For display, this\r\ndate will always be shown as this same year-month-day regardless of time zone.\r\nFor reporting purposes, this date is calculated against the official time zone\r\nof the Workspace.\r\n            \r\nFor example: A Task has a planned completion date of July 5, 2023 in a Workspace\r\nthat has a time zone of US Pacific Time (GMT-7 or GMT-8, depending on daylight\r\nsavings time).  This project is considered overdue on 12:01 AM July 6th 2023 in\r\nUS Pacific time.",
            "format": "date-time",
            "nullable": true
          },
          "actualStartDate": {
            "type": "string",
            "description": "If set, this is the actual date when work began on the Task.\r\n            \r\nThis value contains only the date in year-month-day format.  For display, this\r\ndate will always be shown as this same year-month-day regardless of time zone.\r\nFor reporting purposes, this date is calculated against the official time zone\r\nof the Workspace.\r\n            \r\nFor example: A Task has a planned completion date of July 5, 2023 in a Workspace\r\nthat has a time zone of US Pacific Time (GMT-7 or GMT-8, depending on daylight\r\nsavings time).  This project is considered overdue on 12:01 AM July 6th 2023 in\r\nUS Pacific time.",
            "format": "date-time",
            "nullable": true
          },
          "actualFinishDate": {
            "type": "string",
            "description": "If set, this is the actual date when work was completed on this Task.\r\n            \r\nThis value contains only the date in year-month-day format.  For display, this\r\ndate will always be shown as this same year-month-day regardless of time zone.\r\nFor reporting purposes, this date is calculated against the official time zone\r\nof the Workspace.\r\n            \r\nFor example: A Task has a planned completion date of July 5, 2023 in a Workspace\r\nthat has a time zone of US Pacific Time (GMT-7 or GMT-8, depending on daylight\r\nsavings time).  This project is considered overdue on 12:01 AM July 6th 2023 in\r\nUS Pacific time.",
            "format": "date-time",
            "nullable": true
          },
          "modifyDate": {
            "type": "string",
            "description": "The timestamp in UTC when this Task was most recently modified.",
            "format": "date-time"
          },
          "createDate": {
            "type": "string",
            "description": "The timestamp in UTC when this Task was created.",
            "format": "date-time"
          },
          "percentComplete": {
            "type": "integer",
            "description": "The numerical percentage, from 0-100, representing the percentage completion\r\nfor this Task.  Any numbers below zero or above 100 will be clamped to the\r\nminimum or maximum value.\r\n            \r\nThis value can be edited manually in the Gantt chart view of the application,\r\nor can be selected on the Task Detail page within the Kanban board.",
            "format": "int32"
          },
          "isSummary": {
            "type": "boolean",
            "description": "True if this Task is the parent of multiple Tasks underneath it.  A parent Task\r\nis a \"rolled-up\" view of multiple children that allows you to view a section of\r\nwork at a glance.\r\n            \r\nYou can create a summary Task in the Gantt chart view of the application by\r\nadding child tasks underneath a parent Task."
          },
          "priorityId": {
            "type": "integer",
            "description": "Return the priority of a task",
            "format": "int32"
          },
          "wbs": {
            "type": "string",
            "description": "The WBS (Work Breakdown Structure) number for this task within the Gantt chart hierarchy.  See [What\r\nIs a Work Breakdown Structure (WBS)?](https://www.projectmanager.com/guides/work-breakdown-structure)\r\non Project Manager for more information. The WBS number is an outline number in the form `#.#.#.#`\r\nwhich indicates how tasks are organized and sorted.\r\n            \r\nThe WBS value is only available to users at certain edition levels.  This value can only be changed\r\nif you are a Project Editor.",
            "nullable": true
          },
          "color": {
            "type": "string",
            "description": "Task Color as set in the Gantt",
            "nullable": true
          },
          "actualCost": {
            "type": "number",
            "description": "The actual cost of this Task to date, if known.",
            "format": "double",
            "nullable": true
          },
          "plannedCost": {
            "type": "number",
            "description": "The planned cost for this Task.  Cannot be negative.",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A Task is an individual element of work that must be performed to complete a Project.  A\r\nTask can have one or more Resources assigned to it.  Tasks can be linked to other Tasks to\r\nindicate whether they have a dependency or a connection."
      },
      "TimesheetUpdateRequestDto": {
        "type": "object",
        "properties": {
          "hours": {
            "type": "number",
            "description": "Reported hours",
            "format": "double",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "description": "Notes",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Payload to update time entry"
      },
      "UpdateProjectFieldValueDto": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "The new value to be set for this ProjectField.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A model that contains a new value to be set for a ProjectField."
      },
      "UpdateRequestDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The new name for the File.",
            "nullable": true
          },
          "taskId": {
            "type": "string",
            "description": "To assign this File to a Task, specify the TaskId here.",
            "format": "uuid",
            "nullable": true
          },
          "folderId": {
            "type": "string",
            "description": "To move this File to a new Folder, specify the Folder's unique identifier here.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Represents an update request for a File within ProjectManager.\r\n            \r\nProjectManager allows you to store Files connected to other elements of your Workspace\r\nsuch as a Project or a Discussion.  When you upload a File, please allow a few moments\r\nfor the File to be processed and verified.  ProjectManager may reject File uploads that\r\ncontain problems such as malware. Once a File has completed the upload the process, you\r\nmay retrieve it using the DownloadFile API."
      },
      "UpdateResourceSkillDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string",
            "description": "The name of this Skill."
          }
        },
        "additionalProperties": false,
        "description": "This is a skill that can be allocated to a resource."
      },
      "UpdateResourceTeamDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string",
            "description": "The name of this Resource Team."
          }
        },
        "additionalProperties": false,
        "description": "A resource can update a team."
      },
      "UpdateTaskFieldValueDto": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "The new value to be set for this TaskField.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A model that contains a new value to be set for a TaskField."
      },
      "UserRoleDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of this UserRole.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "The friendly name of this UserRole.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A UserRole is a name for a privilege level granted to a specific User.  The 'Global Admin'\r\nUserRole is granted to the owner of the Workspace, and this UserRole cannot be changed.\r\nYou can choose which UserRole applies to a User within your Workspace."
      },
      "UserRoleDtoListAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRoleDto"
            },
            "description": "If the API call succeeded, this will contain the results.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      },
      "WorkSpaceDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of this Workspace.",
            "format": "uuid"
          },
          "company": {
            "type": "string",
            "description": "The name of this Workspace.",
            "nullable": true
          },
          "customProductDomain": {
            "type": "string",
            "description": "The unique DNS domain of this Workspace.",
            "nullable": true
          },
          "customerId": {
            "type": "string",
            "description": "TODO - What is this value?",
            "format": "uuid",
            "nullable": true
          },
          "isOwner": {
            "type": "boolean",
            "description": "This value is set to true if the user who retrieves this Workspace object via an API call is \r\nthe owner of this Workspace."
          },
          "organizationId": {
            "type": "string",
            "description": "The organization code used for authentication systems for this Workspace.",
            "nullable": true
          },
          "color": {
            "type": "string",
            "description": "The RGB color in the format `#RRGGBB` for this Workspace.",
            "nullable": true
          },
          "roleName": {
            "type": "string",
            "description": "The role of the current user within this Workspace.",
            "nullable": true
          },
          "registerDate": {
            "type": "string",
            "description": "The timestamp when the Workspace was created.",
            "format": "date-time"
          },
          "isInviteAccepted": {
            "type": "boolean",
            "description": "True if the user has accepted an invitation to this Workspace."
          },
          "businessUserId": {
            "type": "string",
            "description": "The unique identifier of the BusinessUser that is the owner of this Workspace.",
            "format": "uuid",
            "nullable": true
          },
          "isPaid": {
            "type": "boolean",
            "description": "True if this Workspace has an active subscription; false if this is a free trial."
          }
        },
        "additionalProperties": false,
        "description": "A Workspace represents a single business subscription to the ProjectManager.com service.  You\r\ncan be a member of multiple Workspaces.  Each Workspace is completely separate from all other\r\nWorkspaces and a user cannot log in to multiple Workspaces at the same time."
      },
      "WorkSpaceDtoListAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkSpaceDto"
            },
            "description": "If the API call succeeded, this will contain the results.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      },
      "WorkSpaceJoinDto": {
        "type": "object",
        "properties": {
          "businessUserId": {
            "type": "string",
            "description": "The unique identifier of the BusinessUser to invite to this Workspace.",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "A Workspace represents a single business subscription to the ProjectManager.com service.  You\r\ncan be a member of multiple Workspaces.  Each Workspace is completely separate from all other\r\nWorkspaces and a user cannot log in to multiple Workspaces at the same time."
      },
      "WorkSpaceLinksDto": {
        "type": "object",
        "properties": {
          "project": {
            "type": "string",
            "description": "TODO - What is this?",
            "nullable": true
          },
          "workSpaceApi": {
            "type": "string",
            "description": "This is the link to the api for this business, some legacy endpoints may need this.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "TODO - What is this?"
      },
      "WorkSpaceUserInfoDto": {
        "type": "object",
        "properties": {
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WorkSpaceLinksDto"
              }
            ],
            "description": "TODO - What is this?",
            "nullable": true
          },
          "emailAddress": {
            "type": "string",
            "description": "TODO - What is this?",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "TODO - What is this?",
            "format": "uuid"
          },
          "fullName": {
            "type": "string",
            "description": "TODO - What is this?",
            "nullable": true
          },
          "workSpaceName": {
            "type": "string",
            "description": "TODO - What is this?",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "TODO - What is this?"
      },
      "WorkSpaceUserInfoDtoAstroResult": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AstroError"
              }
            ],
            "description": "If the API call failed, this will contain information about the error that occurred.",
            "nullable": true
          },
          "success": {
            "type": "boolean",
            "description": "True if the API call succeeded; false otherwise.",
            "readOnly": true
          },
          "hasError": {
            "type": "boolean",
            "description": "True if the API call failed.",
            "readOnly": true
          },
          "statusCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ],
            "description": "The HTTP code of the response."
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WorkSpaceUserInfoDto"
              }
            ],
            "description": "TODO - What is this?",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An API result that contains different values depending on whether the API call succeeded or failed.\r\nIf the API call succeeded, the `Success` value will be true and you can use the `Data` element.\r\nIf the API call failed, `Success` will be false and the `Error` value will be non-null."
      }
    },
    "securitySchemes": {}
  },
  "security": [
    {
      "oauth2": [
        "web",
        "mobile",
        "read:all",
        "write:all"
      ]
    }
  ],
  "servers": [
    {
      "url": "https://api.projectmanager.com"
    }
  ]
}